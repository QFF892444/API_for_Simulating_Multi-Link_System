(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    257561,       4773]
NotebookOptionsPosition[    255908,       4742]
NotebookOutlinePosition[    256263,       4758]
CellTagsIndexPosition[    256220,       4755]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 StyleBox[
  RowBox[{"(*", "Final", "*)"}],
  FontSize->28,
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]]], "Input",
 CellChangeTimes->{{3.752856441079928*^9, 3.752856478002857*^9}, {
   3.752856614876956*^9, 3.752856740407585*^9}, {3.752857349635654*^9, 
   3.7528573641489067`*^9}, {3.752858198794065*^9, 3.7528581999292603`*^9}, 
   3.7528918403995743`*^9, {3.7528961817048273`*^9, 3.7528962191940603`*^9}, {
   3.752937212844871*^9, 3.752937224444496*^9}, {3.75294339441866*^9, 
   3.7529434180825357`*^9}, {3.752943559013653*^9, 3.752943561469325*^9}, {
   3.752943661738035*^9, 3.752943707796466*^9}, {3.7529439315733147`*^9, 
   3.752943937463044*^9}, {3.752945087432394*^9, 3.752945160930595*^9}, {
   3.752945280056671*^9, 3.752945287073347*^9}, {3.75294553242769*^9, 
   3.752945629895801*^9}, {3.752945979948072*^9, 3.752946001821425*^9}, {
   3.753053373675827*^9, 3.7530534089667683`*^9}, {3.753057277402*^9, 
   3.753057299216235*^9}, {3.753058012958432*^9, 3.753058044931511*^9}, {
   3.7530580860523443`*^9, 3.753058094410119*^9}, {3.753058323290696*^9, 
   3.753058324836581*^9}, {3.753119695290847*^9, 3.753119700840918*^9}},
 CellLabel->
  "In[492]:=",ExpressionUUID->"266e0836-dc31-4677-a6fd-4e7ecb2b8656"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", " ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"vars", " ", "--"}], "--"}], "--"}], "--"}], "--"}],
               "--"}], "--"}], "--"}]}]}]}]}]}]}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"nVars", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetKE", "[", 
      RowBox[{"Gb_", ",", "Vb_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "2"}], "*", 
        RowBox[{
         RowBox[{"Transpose", "[", "Vb", "]"}], ".", "Gb", ".", "Vb"}]}], 
       ")"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"GetPE", "[", 
      RowBox[{"m_", ",", "T_"}], "]"}], ":=", 
     RowBox[{"m", "*", "g", "*", 
      RowBox[{"T", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "4"}], "]"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"qs", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"qsvars", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"qsInit", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dqsInit", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", " ", 
           RowBox[{
            RowBox[{"objects", " ", "--"}], "--"}]}]}]}]}]}]}], 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", "-"}]}]}]}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nObjects", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"objNames", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "Properties", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"masses", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"inertias", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lens", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g", "=", "9.8"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Transformation", " ", "matrices"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ts", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pFronts", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pBacks", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Vertices", " ", "for", " ", "impact", " ", "detection"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"impObjVertexs", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"impObjVertexGroupIDs", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Edges", " ", "for", " ", "impact", " ", "detection"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"impObjEdges", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"impObjEdgeGroupIDs", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", " ", "Create"}]}]}]}]}]}], " ", 
     RowBox[{
      RowBox[{"objects", " ", "--"}], "--"}], 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", "-"}]}]}]}]}]}]}], " ", "*)"}], "\[IndentingNewLine]",
    "\n", 
   RowBox[{
    RowBox[{"CreateOneLink", "[", 
     RowBox[{"linkgeometry_", ",", "options_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"l", ",", "T", ",", "pFront", ",", "pBack"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nObjects", "=", 
        RowBox[{"nObjects", "+", "1"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"options", "==", "\"\<BaseLink\>\""}], ",", 
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"p1x", ",", "p1y"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"p2x", ",", "p2y"}], "}"}]}], "}"}], "=", 
            "linkgeometry"}], ";", "\[IndentingNewLine]", 
           RowBox[{"l", "=", 
            RowBox[{"CalcDist", "[", 
             RowBox[{"p1x", ",", "p1y", ",", "p2x", ",", "p2y"}], "]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"objqsinit", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"p1x", "+", "p2x"}], ")"}], "/", "2"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"p1y", "+", "p2y"}], ")"}], "/", "2"}], ",", 
              RowBox[{"myArcTan", "[", 
               RowBox[{"p1x", ",", "p1y", ",", "p2x", ",", "p2y"}], "]"}]}], 
             "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", "Vars", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"nDOF", "=", "3"}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"objqs", ",", "objqsvars"}], "}"}], "=", 
            RowBox[{"pushVars", "[", "nDOF", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"x", "=", 
            RowBox[{"objqs", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"y", "=", 
            RowBox[{"objqs", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"\[Theta]", "=", 
            RowBox[{"objqs", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"T", ",", "pFront", ",", "pBack"}], "}"}], "=", 
            RowBox[{"CalcAndPushT", "[", 
             RowBox[{"x", ",", "y", ",", "\[Theta]", ",", "l"}], "]"}]}], ";",
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"qsInit", "=", 
            RowBox[{"Join", "[", 
             RowBox[{"qsInit", ",", "objqsinit"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"dqsInit", "=", 
            RowBox[{"Join", "[", 
             RowBox[{"dqsInit", ",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"RandomReal", "[", "]"}], "*", "0.5"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", "nDOF"}], "}"}]}], "]"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", "Impact", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"PushVertex", "[", 
            RowBox[{"pFront", ",", "nthGroup"}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"PushVertex", "[", 
            RowBox[{"pBack", ",", "nthGroup"}], "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"PushEdge", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"pFront", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"1", ";;", "2"}], ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"pBack", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"1", ";;", "2"}], ",", "1"}], "]"}], "]"}]}], "}"}],
              ",", "nthGroup"}], "]"}], ";"}], "\[IndentingNewLine]", ")"}]}],
         "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"options", "==", "\"\<AppendLink\>\""}], ",", 
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"p1x", ",", "p1y"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"p2x", ",", "p2y"}], "}"}]}], "}"}], "=", 
            "linkgeometry"}], ";", "\[IndentingNewLine]", 
           RowBox[{"l", "=", 
            RowBox[{"CalcDist", "[", 
             RowBox[{"p1x", ",", "p1y", ",", "p2x", ",", "p2y"}], "]"}]}], 
           ";"}], "\[IndentingNewLine]", ")"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"options", "==", "\"\<Wall\>\""}], ",", 
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"p1x", ",", "p1y"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"p2x", ",", "p2y"}], "}"}]}], "}"}], "=", 
            "linkgeometry"}], ";", "\[IndentingNewLine]", 
           RowBox[{"l", "=", 
            RowBox[{"CalcDist", "[", 
             RowBox[{"p1x", ",", "p1y", ",", "p2x", ",", "p2y"}], "]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"x", "=", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"p1x", "+", "p2x"}], ")"}], "/", "2"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"y", "=", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"p1y", "+", "p2y"}], ")"}], "/", "2"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"\[Theta]", "=", 
            RowBox[{"myArcTan", "[", 
             RowBox[{"p1x", ",", "p1y", ",", "p2x", ",", "p2y"}], "]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"T", ",", "pFront", ",", "pBack"}], "}"}], "=", 
            RowBox[{"CalcAndPushT", "[", 
             RowBox[{"x", ",", "y", ",", "\[Theta]", ",", "l"}], "]"}]}], ";",
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"PushVertex", "[", 
            RowBox[{"pFront", ",", "nthGroup"}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"PushVertex", "[", 
            RowBox[{"pBack", ",", "nthGroup"}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"PushEdge", "[", 
            RowBox[{"linkgeometry", ",", "nthGroup"}], "]"}], ";"}], 
          "\[IndentingNewLine]", ")"}]}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"mass", " ", "and", " ", "inertia"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"mass", "=", 
        RowBox[{"lToMass", "[", "l", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"inertia", "=", 
        RowBox[{"lToInertia", "[", "l", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"masses", ",", "mass"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"inertias", ",", "inertia"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"lens", ",", "l"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", "Return", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"T", ",", "pFront", ",", "pBack"}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nthGroup", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"T1", ",", "pFront1", ",", "pBack1"}], "}"}], "=", 
     RowBox[{"CreateOneLink", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.5"}], ",", 
           RowBox[{"-", "0.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.5", ",", "0.5"}], "}"}]}], "}"}], ",", 
       "\"\<BaseLink\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"T2", ",", "pFront2", ",", "pBack2"}], "}"}], "=", 
     RowBox[{"CreateOneLink", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.5", ",", "0.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1.5"}], "}"}]}], "}"}], ",", 
       "\"\<BaseLink\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nthGroup", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pps", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", 
         RowBox[{"+", "3"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"+", "2"}], ",", 
         RowBox[{"+", "2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"+", "2"}], ",", 
         RowBox[{"-", "2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", 
         RowBox[{"+", "3"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "\[LessEqual]", "4"}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{"CreateOneLink", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"pps", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"pps", "[", 
           RowBox[{"[", 
            RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "}"}], ",", 
        "\"\<Wall\>\""}], "]"}]}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.753123308026244*^9, 3.75312331483188*^9}, 
   3.753123349784988*^9, {3.75312342183265*^9, 3.753123446292471*^9}, {
   3.75312364850945*^9, 3.753123689236961*^9}, {3.753123767898006*^9, 
   3.7531238344427834`*^9}, {3.753124143544293*^9, 3.753124543600301*^9}, {
   3.753124575884509*^9, 3.753124583783622*^9}, {3.753124722765585*^9, 
   3.753124724272087*^9}, {3.753125150356867*^9, 3.753125150953199*^9}, {
   3.75312524655254*^9, 3.7531253037661867`*^9}, 3.753126774188662*^9, {
   3.7531269901910887`*^9, 3.753126993347027*^9}, {3.753181139167458*^9, 
   3.753181147722603*^9}, {3.7531814758907633`*^9, 3.7531815074009867`*^9}, {
   3.753181545353921*^9, 3.753181588648815*^9}, 3.7531816959830513`*^9, {
   3.753181732117378*^9, 3.753181732992093*^9}, {3.753181930815845*^9, 
   3.753181951044694*^9}, {3.753182021538082*^9, 3.7531820323177233`*^9}, 
   3.753182082245741*^9, {3.753185999782179*^9, 3.753186008085741*^9}, 
   3.753220930473857*^9, {3.753221252685128*^9, 3.753221268357483*^9}, {
   3.753221526146224*^9, 3.753221526231914*^9}},
 CellLabel->
  "In[2244]:=",ExpressionUUID->"1bdb90c2-7289-45c2-a579-eed7e16aa45d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cons", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{"pFront1", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", 
         RowBox[{"pBack2", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"pFront1", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "1"}], "]"}], "]"}], "-", 
         RowBox[{"pBack2", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "1"}], "]"}], "]"}]}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pFront1", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"pFront1", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"pBack2", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"pBack2", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
      "}"}], ",", 
     RowBox[{"qs", "\[Element]", "Reals"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.753220890686063*^9, 3.753220914207336*^9}, {
  3.753220959729619*^9, 3.753221003821*^9}, {3.753221373579835*^9, 
  3.75322138370448*^9}, {3.753221429226262*^9, 3.753221430534089*^9}, {
  3.753221465491211*^9, 3.7532214782997427`*^9}},
 CellLabel->
  "In[2271]:=",ExpressionUUID->"f2e720ad-0af8-4773-bcbe-8a67089ff5e6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Prepare", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dqs", "=", 
     RowBox[{"D", "[", 
      RowBox[{"qs", ",", "t"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ddqs", "=", 
     RowBox[{"D", "[", 
      RowBox[{"dqs", ",", "t"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.753044835778154*^9, 3.753044853243857*^9}, {
   3.753044885735341*^9, 3.753045087762558*^9}, {3.753045119526952*^9, 
   3.7530451980018806`*^9}, {3.753045233241619*^9, 3.753045330223648*^9}, {
   3.753045375327367*^9, 3.753045428238071*^9}, {3.753045470005053*^9, 
   3.753045488477352*^9}, {3.753045548631014*^9, 3.7530455872391768`*^9}, {
   3.7530461846478233`*^9, 3.753046189098051*^9}, {3.753049997171638*^9, 
   3.7530500196938667`*^9}, {3.753050066769712*^9, 3.7530500913759336`*^9}, {
   3.75305016165658*^9, 3.75305017743246*^9}, {3.75305020772898*^9, 
   3.753050237021182*^9}, {3.753050294237818*^9, 3.753050430715755*^9}, {
   3.753050508246562*^9, 3.753050561137941*^9}, {3.753050973890109*^9, 
   3.7530509843757143`*^9}, {3.753051073460733*^9, 3.753051081270372*^9}, {
   3.7530513907609*^9, 3.753051417218584*^9}, {3.75305148489613*^9, 
   3.7530515464564962`*^9}, {3.7530525178993607`*^9, 3.753052521284204*^9}, {
   3.753052551473435*^9, 3.753052557247499*^9}, 3.753052592897394*^9, {
   3.7530526901642733`*^9, 3.753052695814392*^9}, {3.753052738897628*^9, 
   3.753052845859419*^9}, {3.753053011553212*^9, 3.753053015960785*^9}, {
   3.7530530507527637`*^9, 3.753053061062314*^9}, {3.753053437625102*^9, 
   3.753053445291786*^9}, {3.753053652581946*^9, 3.75305365795931*^9}, {
   3.753054130043837*^9, 3.753054146860914*^9}, 3.753054369689734*^9, {
   3.7530552140086317`*^9, 3.753055214948401*^9}, {3.753055568100189*^9, 
   3.753055571428176*^9}, {3.7531199350230217`*^9, 3.753119968194673*^9}, {
   3.753120012736985*^9, 3.753120113773282*^9}, {3.753120155403681*^9, 
   3.753120177087166*^9}, 3.753120297603888*^9, {3.753120335222054*^9, 
   3.7531203707053003`*^9}, 3.7531236592510357`*^9, 3.753124567923814*^9, {
   3.753124696657449*^9, 3.753124700234228*^9}, {3.7531251550577517`*^9, 
   3.753125161024935*^9}, {3.753126782565262*^9, 3.753126804502275*^9}, 
   3.7531808516978188`*^9},
 CellLabel->
  "In[2272]:=",ExpressionUUID->"86e25054-c6c5-43bc-b27c-ddc5bfdc0a87"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"-", " ", "Left"}]}]}]}]}]}]}]}], " ", "side", " ", "of", 
     " ", "EL", " ", 
     RowBox[{
      RowBox[{"eqs", " ", "--"}], "--"}]}], "-", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", "-"}]}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Body", " ", "generalized", " ", "mass"}], ",", " ", 
    RowBox[{
    "composed", " ", "of", " ", "Inertia", " ", "Tensor", " ", "and", " ", 
     "Mass", " ", "Matrix"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"getGb", "[", 
     RowBox[{"j_", ",", "m_"}], "]"}], ":=", 
    RowBox[{"ArrayFlatten", "[", 
     RowBox[{"(", GridBox[{
        {
         RowBox[{"DiagonalMatrix", "[", 
          RowBox[{"{", 
           RowBox[{"j", ",", "j", ",", "j"}], "}"}], "]"}], 
         RowBox[{"Zeros", "[", 
          RowBox[{"3", ",", "3"}], "]"}]},
        {
         RowBox[{"Zeros", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         RowBox[{"DiagonalMatrix", "[", 
          RowBox[{"{", 
           RowBox[{"m", ",", "m", ",", "m"}], "}"}], "]"}]}
       }], ")"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Gbs", "=", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"getGb", "[", 
         RowBox[{
          RowBox[{"inertias", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"masses", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nObjects"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Body", " ", "screw", " ", "axis"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Vbs", "=", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"GenUnhat", "[", 
         RowBox[{
          RowBox[{"InvT", "[", 
           RowBox[{"Ts", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], ".", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"Ts", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "t"}], "]"}]}], "]"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nObjects"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Lagrange", " ", 
     RowBox[{"Equations", ":", " ", 
      RowBox[{"Kinetic", " ", "and", " ", "Potential", " ", "Energy"}]}]}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetKE", "[", 
      RowBox[{"Gb_", ",", "Vb_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "2"}], "*", 
        RowBox[{
         RowBox[{"Transpose", "[", "Vb", "]"}], ".", "Gb", ".", "Vb"}]}], 
       ")"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"GetPE", "[", 
      RowBox[{"m_", ",", "T_"}], "]"}], ":=", 
     RowBox[{"m", "*", "g", "*", 
      RowBox[{"T", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "4"}], "]"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"KEs", "=", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"GetKE", "[", 
         RowBox[{
          RowBox[{"Gbs", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"Vbs", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nObjects"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PEs", "=", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"GetPE", "[", 
         RowBox[{
          RowBox[{"masses", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"Ts", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nObjects"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Lag", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"KEs", ",", 
          RowBox[{"-", "PEs"}]}], "]"}], "]"}], ",", 
       RowBox[{"qs", "\[Element]", "Reals"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Left", " ", "side", " ", "of", " ", "Euler"}], "-", 
     RowBox[{"Lagrange", " ", "Equations"}]}], "*)"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"ELeqsLeft", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"Lag", ",", 
            RowBox[{"{", "dqs", "}"}]}], "]"}], ",", "t"}], "]"}], "-", 
        RowBox[{"D", "[", 
         RowBox[{"Lag", ",", 
          RowBox[{"{", "qs", "}"}]}], "]"}]}], ",", 
       RowBox[{"qs", "\[Element]", "Reals"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.753057076566051*^9, 3.753057082906145*^9}, {
  3.753216468304121*^9, 3.753216494514337*^9}},
 CellLabel->
  "In[2274]:=",ExpressionUUID->"475c42ee-2785-4311-afba-ef5380bb1e53"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"-", " ", "Right"}]}]}]}]}]}]}]}], " ", "side", " ", "of",
      " ", "EL", " ", 
     RowBox[{
      RowBox[{"eqs", " ", "--"}], "--"}]}], "-", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", "-"}]}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "Constraints", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"conslink1P1x", "=", 
     RowBox[{
      RowBox[{"p1Ends", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{"y", "=", "0"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"conslink1P1y", "=", 
     RowBox[{
      RowBox[{"p1Ends", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";"}], 
   RowBox[{"(*", " ", 
    RowBox[{"y", "=", "0"}], " ", "*)"}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"nCons", "=", 
     RowBox[{"Length", "[", "cons", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"nCons", ">", "0"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Lambda]s", "=", 
         SuperscriptBox[
          RowBox[{"{", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Symbol", "[", 
              RowBox[{"\"\<$\[Lambda]\>\"", "<>", 
               RowBox[{"ToString", "@", "i"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "nCons"}], "}"}]}], "]"}], "}"}], 
          "\[Transpose]"]}], ";", "\[IndentingNewLine]", 
        RowBox[{"consgrad", "=", 
         SuperscriptBox[
          RowBox[{"Grad", "[", 
           RowBox[{"cons", ",", "qs"}], "]"}], "\[Transpose]"]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Grad", "[", 
            RowBox[{"2", ",", "5"}], "]"}], "\[Rule]", 
           RowBox[{"Mat", 
            RowBox[{"(", 
             RowBox[{"2", ",", "5"}], ")"}]}]}], ",", 
          RowBox[{"Transpose", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{"5", ",", "2"}], ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"consddt", "=", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{"cons", ",", "t"}], "]"}], ",", "t"}], "]"}], ",", 
           RowBox[{"qs", "\[Element]", "Reals"}]}], "]"}]}]}], ")"}]}], "]"}],
     ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7492477302784853`*^9, 3.749247744886393*^9}, {
   3.7492477952349367`*^9, 3.749248083936611*^9}, {3.749248115745202*^9, 
   3.749248163943199*^9}, {3.749248289782309*^9, 3.749248327237639*^9}, {
   3.7492488740168123`*^9, 3.74924890110975*^9}, {3.749249013872342*^9, 
   3.749249016428877*^9}, {3.749249715340942*^9, 3.749249725558988*^9}, {
   3.7492533635649853`*^9, 3.7492533692042627`*^9}, {3.7493304687035713`*^9, 
   3.749330526784474*^9}, {3.749583890558482*^9, 3.749584019739238*^9}, {
   3.749584051620141*^9, 3.749584289697188*^9}, {3.7495848842278976`*^9, 
   3.749584884428755*^9}, {3.7495854188247633`*^9, 3.749585430018347*^9}, {
   3.749586473817123*^9, 3.7495865299870358`*^9}, {3.74958656315245*^9, 
   3.749586572384222*^9}, {3.749586714939041*^9, 3.7495867151800013`*^9}, 
   3.749586749984033*^9, 3.749586785597528*^9, {3.7495868834456167`*^9, 
   3.749586991001513*^9}, {3.749587032904327*^9, 3.749587066122258*^9}, {
   3.749587120426735*^9, 3.749587127859918*^9}, {3.7495872147347593`*^9, 
   3.749587215589427*^9}, {3.749587264417486*^9, 3.74958727343836*^9}, {
   3.749587370691258*^9, 3.749587371064513*^9}, {3.7495874282297573`*^9, 
   3.74958742881262*^9}, {3.7495874807284613`*^9, 3.749587485622819*^9}, {
   3.749587551022369*^9, 3.749587551318131*^9}, {3.749587760131122*^9, 
   3.7495877604471684`*^9}, {3.749763678759679*^9, 3.749763690381565*^9}, {
   3.749763881161853*^9, 3.7497639007406597`*^9}, {3.749763943256238*^9, 
   3.749763959686335*^9}, {3.7497714188908377`*^9, 3.749771439202767*^9}, {
   3.74982921350916*^9, 3.749829221629135*^9}, {3.749829707066264*^9, 
   3.7498297196310368`*^9}, 3.749918529472308*^9, {3.7499191365465508`*^9, 
   3.749919137446918*^9}, {3.750475961782165*^9, 3.750475970348247*^9}, {
   3.750477108441189*^9, 3.7504771618505907`*^9}, {3.750477465968931*^9, 
   3.750477475112364*^9}, {3.7505607598932047`*^9, 3.750560763098124*^9}, {
   3.751810937584548*^9, 3.7518109533751783`*^9}, {3.751811489773809*^9, 
   3.751811561950897*^9}, {3.7518118024222927`*^9, 3.751811844782062*^9}, {
   3.7518125488639*^9, 3.751812600723185*^9}, {3.7518126374739857`*^9, 
   3.751812703969184*^9}, {3.751812934543771*^9, 3.751812934692981*^9}, {
   3.751813015430941*^9, 3.751813042664275*^9}, {3.7518148298544483`*^9, 
   3.751814830122332*^9}, {3.751819111462657*^9, 3.751819113129416*^9}, {
   3.751831724344057*^9, 3.751831729306036*^9}, {3.7518505664170322`*^9, 
   3.751850579768682*^9}, 3.751850822810646*^9, {3.752893403380947*^9, 
   3.752893538607489*^9}, {3.7528935716914377`*^9, 3.752893587584464*^9}, {
   3.7528936189617023`*^9, 3.752893619093384*^9}, {3.752894128353402*^9, 
   3.752894136362237*^9}, {3.752894213154997*^9, 3.752894337795062*^9}, {
   3.752894402898535*^9, 3.752894483877335*^9}, {3.752894591537696*^9, 
   3.75289459894217*^9}, {3.752894632570223*^9, 3.752894639098567*^9}, {
   3.752894698845552*^9, 3.7528947752361603`*^9}, {3.7528948187314672`*^9, 
   3.752894838783592*^9}, {3.752895078283527*^9, 3.752895129371352*^9}, {
   3.752895243562286*^9, 3.752895256194869*^9}, {3.752897294773044*^9, 
   3.752897296890174*^9}, {3.752937247193342*^9, 3.752937250189735*^9}, 
   3.752937448344542*^9, {3.752950364918768*^9, 3.752950369305798*^9}, {
   3.752950833820903*^9, 3.752950835798113*^9}, {3.752950973781577*^9, 
   3.7529509881214943`*^9}, {3.752951105096426*^9, 3.752951179066635*^9}, {
   3.7529512142978354`*^9, 3.752951214388245*^9}, {3.752952741387607*^9, 
   3.752952745694968*^9}, {3.7529532052093287`*^9, 3.75295320736707*^9}, {
   3.752953353033779*^9, 3.752953360770131*^9}, {3.752953681496983*^9, 
   3.7529536829283*^9}, {3.752953960931753*^9, 3.752953972666893*^9}, {
   3.752954111806077*^9, 3.752954113632807*^9}, {3.752955026392874*^9, 
   3.752955049346692*^9}, {3.752955090391477*^9, 3.752955106841086*^9}, {
   3.752955186874584*^9, 3.752955226042705*^9}, {3.7529552782802153`*^9, 
   3.752955294114819*^9}, {3.752955379795632*^9, 3.75295539587084*^9}, {
   3.7529555205907393`*^9, 3.75295552203209*^9}, {3.752955562633211*^9, 
   3.752955565238083*^9}, {3.7529556336218853`*^9, 3.752955645222836*^9}, {
   3.753029127696501*^9, 3.7530291278759823`*^9}, {3.753029554055846*^9, 
   3.7530295544868593`*^9}, {3.7530299159297247`*^9, 3.753029945305748*^9}, {
   3.753030337167046*^9, 3.753030341470745*^9}, {3.753030451864044*^9, 
   3.753030458976904*^9}, {3.7530305340929613`*^9, 3.7530305509442*^9}, {
   3.7530308841909227`*^9, 3.7530308892833233`*^9}, {3.753030989011537*^9, 
   3.753030989197073*^9}, {3.753031776823711*^9, 3.7530317825098543`*^9}, {
   3.753031953645413*^9, 3.753031954165752*^9}, {3.753032417316751*^9, 
   3.753032431531197*^9}, {3.753032550301746*^9, 3.753032550440906*^9}, 
   3.753032894012949*^9, {3.753033237646079*^9, 3.7530332394712133`*^9}, {
   3.7530334441521873`*^9, 3.753033463083189*^9}, {3.7530372815902777`*^9, 
   3.7530372984167547`*^9}, {3.753037335430272*^9, 3.7530373648487787`*^9}, {
   3.7530382587778587`*^9, 3.753038280521874*^9}, {3.753040967570965*^9, 
   3.7530409700918417`*^9}, {3.753043628573166*^9, 3.7530436748715343`*^9}, 
   3.753053594940422*^9, {3.753053631514986*^9, 3.753053638654249*^9}, {
   3.7530536805019217`*^9, 3.753053699928677*^9}, {3.753053794159343*^9, 
   3.753053799322956*^9}, {3.753053894129994*^9, 3.7530539297096453`*^9}, {
   3.7530541277264233`*^9, 3.753054128096628*^9}, {3.753054186026382*^9, 
   3.753054190219845*^9}, {3.7530547383116703`*^9, 3.753054756774881*^9}, {
   3.753054826859599*^9, 3.7530548321047087`*^9}, {3.753055015408577*^9, 
   3.7530550213596497`*^9}, {3.753055080036275*^9, 3.753055084592904*^9}, {
   3.753055147699463*^9, 3.753055149189435*^9}, {3.7530553121779003`*^9, 
   3.753055315812923*^9}, {3.7530554039610147`*^9, 3.753055436765093*^9}, {
   3.753055743461211*^9, 3.753055744460301*^9}, {3.7530564354300003`*^9, 
   3.753056435552809*^9}, {3.7530565000497723`*^9, 3.753056501589766*^9}, {
   3.7530568206576138`*^9, 3.7530568520741777`*^9}, {3.753057087019557*^9, 
   3.753057155650066*^9}, {3.7530572024493523`*^9, 3.7530572054923077`*^9}, {
   3.753059693833605*^9, 3.753059711868308*^9}, 3.753059795499174*^9, {
   3.753121300829884*^9, 3.753121346405818*^9}, 3.753121560229154*^9, {
   3.7531228074802113`*^9, 3.753122835110176*^9}, {3.753123490119872*^9, 
   3.7531234951152887`*^9}, {3.7531250036390667`*^9, 3.753125010898357*^9}, 
   3.753125055291244*^9, {3.7531262521848307`*^9, 3.753126252318206*^9}, {
   3.753144020069543*^9, 3.753144069668065*^9}, {3.753144148901133*^9, 
   3.7531441507593107`*^9}, {3.753144376786982*^9, 3.753144404676094*^9}, {
   3.753149742955834*^9, 3.753149743611452*^9}, {3.753216503226515*^9, 
   3.753216529815776*^9}, {3.753220814539081*^9, 3.753220872269261*^9}},
 CellLabel->
  "In[2283]:=",ExpressionUUID->"36793f65-e109-48c5-bb5f-cea958de743e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"External", " ", "forces"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"externalForces", "=", 
    RowBox[{"ConstantArray", "[", 
     RowBox[{"0", ",", "nVars"}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.752935575058041*^9, 3.752935608936143*^9}, {
   3.752935649230603*^9, 3.752935735476007*^9}, {3.752935872808815*^9, 
   3.7529358748585043`*^9}, {3.752936440428615*^9, 3.752936616693562*^9}, {
   3.752937494883192*^9, 3.752937499065572*^9}, {3.752937565566793*^9, 
   3.7529375900515947`*^9}, {3.752937659774583*^9, 3.752937686392194*^9}, {
   3.752937797550473*^9, 3.752937799130527*^9}, {3.7529378492128572`*^9, 
   3.752937849498748*^9}, 3.752944074567472*^9, {3.752945464326747*^9, 
   3.7529454644735107`*^9}, {3.75294572976758*^9, 3.752945735285262*^9}, 
   3.752953339925069*^9, 3.753038406727952*^9, {3.753038469264722*^9, 
   3.7530384741722937`*^9}, {3.753038599911993*^9, 3.753038628746689*^9}, {
   3.7530388055214367`*^9, 3.75303880617278*^9}, {3.753040014777594*^9, 
   3.753040034498519*^9}, {3.753040085829812*^9, 3.753040088202881*^9}, {
   3.7530401419061127`*^9, 3.753040166950306*^9}, {3.753040715904173*^9, 
   3.753040741916409*^9}, {3.7530408027135*^9, 3.753040804111864*^9}, {
   3.753040868309145*^9, 3.753040868700035*^9}, {3.75304392300611*^9, 
   3.753043924330562*^9}, {3.753043986681858*^9, 3.753044001242547*^9}, {
   3.7530440679101467`*^9, 3.753044068562551*^9}, {3.7530441298971453`*^9, 
   3.753044133633484*^9}, 3.753044223590147*^9, {3.753044403330976*^9, 
   3.753044423209805*^9}, {3.753044518103092*^9, 3.753044551623597*^9}, {
   3.7530445957705917`*^9, 3.753044623392209*^9}, {3.753056307701136*^9, 
   3.753056309946928*^9}, {3.753056363603239*^9, 3.753056380406089*^9}, {
   3.753056888265921*^9, 3.753056892818964*^9}, {3.753056931301005*^9, 
   3.75305693211362*^9}, {3.7530569740994663`*^9, 3.7530570011315737`*^9}, {
   3.753057040838358*^9, 3.753057040930401*^9}, {3.7530572217140703`*^9, 
   3.753057222900476*^9}, {3.753059657491391*^9, 3.753059671269434*^9}, {
   3.7530597489621468`*^9, 3.753059778215307*^9}, {3.753121287300314*^9, 
   3.753121291064706*^9}},
 CellLabel->
  "In[2285]:=",ExpressionUUID->"5a24985b-711d-4894-ad33-7682092f3681"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "Solve", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"nCons", ">", "0"}], ",", 
     RowBox[{"(*", " ", 
      RowBox[{"with", " ", "constraints"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"EulerLagEqs", "=", 
        RowBox[{
         RowBox[{"Thread", "[", 
          RowBox[{"ELeqsLeft", "==", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"consgrad", ".", "\[Lambda]s"}], "]"}], "+", 
            "externalForces"}]}], "]"}], "//", "Simplify"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"consddtEqs", "=", 
        RowBox[{"TurnToEq", "[", 
         RowBox[{"consddt", ",", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0", ",", "nCons"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"EQ", "=", 
        RowBox[{"Solve", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"EulerLagEqs", ",", "consddtEqs"}], "]"}], ",", 
          RowBox[{"Join", "[", 
           RowBox[{"ddqs", ",", 
            RowBox[{"Flatten", "[", "\[Lambda]s", "]"}]}], "]"}]}], "]"}]}]}],
       ")"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"No", " ", "constraint"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"EulerLagEqs", "=", 
       RowBox[{"Simplify", "[", 
        RowBox[{
         RowBox[{"TurnToEq", "[", 
          RowBox[{"ELeqsLeft", ",", "externalForces"}], "]"}], ",", 
         RowBox[{"qs", "\[Element]", "Reals"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"EQ", "=", 
       RowBox[{"Solve", "[", 
        RowBox[{"EulerLagEqs", ",", "ddqs"}], "]"}]}]}]}], "]"}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.752894791337954*^9, 3.752894814974654*^9}, {
   3.752894861220069*^9, 3.752894947329397*^9}, {3.7528950298906193`*^9, 
   3.75289504542104*^9}, {3.7528955370653543`*^9, 3.752895636265217*^9}, {
   3.752895721485224*^9, 3.752895767437024*^9}, {3.7528958460723*^9, 
   3.7528959107494164`*^9}, {3.7528993069704723`*^9, 3.752899353134206*^9}, {
   3.752930426490055*^9, 3.752930426910009*^9}, {3.752930465292056*^9, 
   3.752930483791888*^9}, {3.752936640855112*^9, 3.752936650163219*^9}, {
   3.7529376950299673`*^9, 3.7529376956415358`*^9}, {3.752938441192172*^9, 
   3.752938502431718*^9}, 3.752938540913069*^9, {3.7529387268581953`*^9, 
   3.752938800482499*^9}, {3.752942230879902*^9, 3.7529422362590523`*^9}, 
   3.752942793385557*^9, {3.752944065537396*^9, 3.7529440816159*^9}, {
   3.752944159773369*^9, 3.752944161585534*^9}, {3.7529454345696087`*^9, 
   3.752945470933591*^9}, 3.752945658706089*^9, {3.7529457655925827`*^9, 
   3.752945776537252*^9}, {3.752945812077977*^9, 3.7529458382584753`*^9}, {
   3.7529467425591593`*^9, 3.752946744024117*^9}, {3.752949016390222*^9, 
   3.752949025020351*^9}, {3.75294911830159*^9, 3.75294913716702*^9}, {
   3.752949420279763*^9, 3.75294942365825*^9}, {3.752949575107119*^9, 
   3.752949593302175*^9}, 3.752949669821959*^9, 3.752950387118744*^9, {
   3.752950879947427*^9, 3.75295091315872*^9}, {3.752950960562579*^9, 
   3.7529509665964518`*^9}, {3.752951039425029*^9, 3.7529510451306877`*^9}, {
   3.752952867830323*^9, 3.7529528756864767`*^9}, {3.7529529562226686`*^9, 
   3.7529529804809427`*^9}, {3.7529530170247383`*^9, 3.752953047957822*^9}, {
   3.7529531109964*^9, 3.7529531263086843`*^9}, {3.75295492293137*^9, 
   3.752954931587804*^9}, {3.753029206422752*^9, 3.7530292108843937`*^9}, {
   3.753029374045969*^9, 3.753029378352652*^9}, {3.753030992128134*^9, 
   3.7530309950536013`*^9}, {3.7530328590966063`*^9, 
   3.7530328607178926`*^9}, {3.7530328975440607`*^9, 3.753032921903851*^9}, {
   3.753037562588705*^9, 3.753037592619924*^9}, {3.753037998688301*^9, 
   3.753038001515575*^9}, {3.75303836100005*^9, 3.753038361166893*^9}, {
   3.753039353032297*^9, 3.753039360728264*^9}, {3.753040231759441*^9, 
   3.7530402427932997`*^9}, {3.7530402728058453`*^9, 3.753040273328285*^9}, {
   3.753040311185645*^9, 3.753040394112318*^9}, {3.7530407232518*^9, 
   3.753040725716365*^9}, {3.7530438202913713`*^9, 3.753043837708232*^9}, {
   3.7530438807984667`*^9, 3.7530438814270906`*^9}, {3.753043927016801*^9, 
   3.753043928689036*^9}, 3.753044019328925*^9, {3.753044162894352*^9, 
   3.7530441630360823`*^9}, {3.753044406619227*^9, 3.753044407989787*^9}, {
   3.753044523312976*^9, 3.7530445260554247`*^9}, {3.753045895309931*^9, 
   3.7530460196736927`*^9}, {3.75304607997691*^9, 3.753046097625287*^9}, 
   3.753050201230822*^9, 3.753050906794511*^9, {3.7530518883881273`*^9, 
   3.753051958587449*^9}, 3.753052592904687*^9, {3.7530539791759663`*^9, 
   3.753054065207841*^9}, {3.753054155689086*^9, 3.753054156114105*^9}, {
   3.753054851928958*^9, 3.753054928625489*^9}, {3.753054964858341*^9, 
   3.753054998643321*^9}, {3.753056069642933*^9, 3.753056094573173*^9}, {
   3.753056175591939*^9, 3.7530561795283012`*^9}, {3.753056214962792*^9, 
   3.753056245126135*^9}, {3.753056560058378*^9, 3.753056564694744*^9}, {
   3.7531262059230423`*^9, 3.753126217340637*^9}, {3.753126261051106*^9, 
   3.753126263902464*^9}, {3.753126545253314*^9, 3.753126545380416*^9}, {
   3.7531496619563932`*^9, 3.75314967267875*^9}, {3.753216537485908*^9, 
   3.753216547912981*^9}, 3.753220236700416*^9, {3.753221119705634*^9, 
   3.753221120972143*^9}},
 CellLabel->
  "In[2286]:=",ExpressionUUID->"c77ea872-647e-4514-a418-f5dc43c7ff34"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Preprae", " ", "for", " ", "NDSolve"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"timeend", "=", "20"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MAXIMPACTTIMES", "=", "30"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"impactDetectionError", "=", "0.1"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"intergrationMaxStepSize", "=", "0.01"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ifprint", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"SetUpImpacts", "[", "]"}], "\n", 
   RowBox[{
    RowBox[{"ddqSolve", "=", 
     RowBox[{"TurnToEq", "[", 
      RowBox[{"ddqs", ",", 
       RowBox[{"EQ", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", ";;", ",", "2"}], "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "NDsolve", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"end", ",", "data", ",", "bounces"}], "}"}], "=", 
     RowBox[{"BouncingBall", "[", 
      RowBox[{"qsInit", ",", "dqsInit"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7531494921779003`*^9, 3.753149514285117*^9}, {
   3.753149702606944*^9, 3.75314970631465*^9}, {3.753152082562064*^9, 
   3.753152084237487*^9}, {3.753152173114102*^9, 3.7531521761890917`*^9}, {
   3.753153698542796*^9, 3.753153728937303*^9}, {3.753180430155244*^9, 
   3.753180430325458*^9}, {3.753186443466741*^9, 3.753186444015429*^9}, {
   3.753196551902048*^9, 3.7531965636753674`*^9}, 3.75320283212358*^9, 
   3.753203832623384*^9, {3.753203876105311*^9, 3.7532038911244183`*^9}, {
   3.753205606433316*^9, 3.753205623677073*^9}, {3.753205687119479*^9, 
   3.753205707762895*^9}, {3.753208613707778*^9, 3.7532086161461363`*^9}, {
   3.753208952418535*^9, 3.753208953022675*^9}, 3.7532093316032953`*^9, 
   3.753209382630908*^9, 3.753215402870412*^9, {3.753215470798416*^9, 
   3.753215513876439*^9}, {3.7532156536977882`*^9, 3.753215654022443*^9}, {
   3.7532164320061207`*^9, 3.753216432573083*^9}, {3.7532166345734053`*^9, 
   3.753216661849039*^9}, 3.7532168064898567`*^9, {3.7532168524721603`*^9, 
   3.753216855289262*^9}, {3.753216922556574*^9, 3.753216923018261*^9}, {
   3.7532171119486723`*^9, 3.753217112030201*^9}, {3.753217343794215*^9, 
   3.753217343900848*^9}, 3.753218049273485*^9, {3.753218372254586*^9, 
   3.753218372614398*^9}, {3.753218409020591*^9, 3.753218412633719*^9}, {
   3.753218890894828*^9, 3.75321889223345*^9}, {3.753219002560783*^9, 
   3.753219003195766*^9}, {3.7532190442113037`*^9, 3.753219045586605*^9}, {
   3.753219974396143*^9, 3.753219982119536*^9}, {3.75322002938855*^9, 
   3.753220049070765*^9}, 3.7532203071577873`*^9, {3.753220551285363*^9, 
   3.753220555969096*^9}, {3.753220737412744*^9, 3.753220745781019*^9}, {
   3.753221498792116*^9, 3.753221499023834*^9}, {3.753221545512693*^9, 
   3.753221545993889*^9}},
 CellLabel->
  "In[2302]:=",ExpressionUUID->"c1a43f81-3db8-4f78-9104-411f67c585f2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Plot", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"qsPlot", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"qsvars", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "/.", "data"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "nVars"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", "qsPlot", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "end"}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "qs"}], ",", "\n", "\t", 
      RowBox[{"PlotRange", "->", "Automatic"}], ",", 
      RowBox[{"Frame", "->", "True"}], ",", 
      RowBox[{"FrameLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<time\>\"", ",", "\"\<value\>\""}], "}"}]}]}], "]"}], 
    "]"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7504780748676167`*^9, 3.7504781009956417`*^9}, {
   3.750478131022161*^9, 3.75047825313091*^9}, {3.7504784047822657`*^9, 
   3.750478452345035*^9}, {3.7504785375333223`*^9, 3.7504785598367968`*^9}, {
   3.75181111432718*^9, 3.7518111194813337`*^9}, {3.751819873464633*^9, 
   3.751819904822239*^9}, {3.751835006922633*^9, 3.751835031902342*^9}, {
   3.753148727471694*^9, 3.753148811016508*^9}, {3.753148849969969*^9, 
   3.753148859135503*^9}, {3.75314889059431*^9, 3.7531488911543083`*^9}, {
   3.753149009625237*^9, 3.753149032487109*^9}, {3.753149307897419*^9, 
   3.7531493143852797`*^9}, 3.753153232631824*^9, {3.753153992829939*^9, 
   3.753154008600006*^9}, {3.7531541408024883`*^9, 3.753154216688665*^9}, {
   3.753154270230612*^9, 3.753154288334462*^9}, 3.753154548445094*^9, 
   3.753154804338324*^9, {3.7531548532640867`*^9, 3.753154897765727*^9}},
 CellLabel->
  "In[2310]:=",ExpressionUUID->"7397f069-2f50-47dd-97e4-bc64fd0d50b9"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
GeI=
          "]]}, Annotation[#, "Charting`Private`Tag$448897#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Fda7sz12Jc6b8vRQ/bU1JDB54WOJ1jTqgpPCZJ8p/r3tlhZtcxqlduinRKgZ
CX43Kmxer6NRJeHZssoWJDgGyKk747zznhppWFqRcKP4j89lExq1bc4eq1ub
SAi4f832H96Xfm1du+VbSKCt+IZuGtKoi2uGdlVtxf32vnU2XUmjXnpfODi6
jYRZFkNuV7k0SvtNVuKmXbj+vfwjJ9g0qoY5ntHiTIJ/5zUNaxaNOp5o9dRn
NwmGh7M11Jk0qnp/T224Gwk+kRVqXXo4D59X/1jgQUJbg9yiJrzvav9F8dI9
SdA8OeRSuwznT05/NvIiISX+auHPpTRK5WSw4sb9JJSfnFE0pk2j3nZUL/3u
g/NfsuOXMmb/jSrL9/viPJdvy7LWolGLin3XjfmRsNr/b3CoJr4n6q+2hB0k
4Xqr6sdqDRrlGyW7Z34ACYsmp2apY1bgu/jdCSRBffmDpPPqNAq55AYbHCYh
Js+4c3AJjfKunIp8dYSE/Z9rHPwxz+NsTt5wDPuh479tUg3rk5p27+txEvKT
FE2uYd5HHyzwOkmC5fz8I2sxy/nDG0EwCcM+s3dOqNKoZ1/i6i6cJqE+4f36
N5jdTdt+yp8lQZU4mXITs0wOpz/tHAnVniezLmIuWhAiYoWQsGxcVBmK2fVM
vdTLCyQcKKRvjlf9/75rKtmEkfBmvtulJ5ifbg1a1hyO91Mlp7Eds/OLNyv2
XSThv7h1gTq4n5lLF5jzI0k4a7rh8SnMeZc87UKiSSh5+KCxE/PO8QJXuVgS
GNQMpjuel+4+4+CtSySQX0pHhzDnVm8/zYwjYapj5Ng1rJfjinvRz6+QUPz2
1IAt1pOWNppilUACVdmTugjr/0ByfXbTVbyPViGF45i3BSYVeSaS8OS82fE+
7Fe2xarP51JIcJv1smahDo2ye3yxbc51EpIkht9Z4zwIF30duHED6xNmuyoB
52UT74TMszR8PwTzGF74+zC+vUp5/R0SpERRYsM4b+lIWa8xnYT7TSb8eJxP
QfwLi6FMfN/44mWKJI26JZLedjaLBO+tt1qFOM9W+5zdZe9jvayjU0bx9+TG
6n9n9B6S8FZzdBdhhO/H3Y2xxY9ImFY6duWgMY0akLl13eIxCcSTzW/f4n1a
98ukxC2fhHN+l32L8feEZ325YuApCbW9/iI7/D1JfPqz4XQhCe25iW9m4P3t
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
LPql31+lU6UjOhPT0/h5ky+jaxLo1P8Awvk9zQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$448897#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwU2Xc4VX8YAPB7rz2yN3FxueYlKdv3jVRWJLMkSSW7lGSlKDJLVigSkUIp
FUlIZkaSVEZZca+9t9/5/eHxvM/3nO98zznv57mSLj5WZwg4HI7AgP1h/x+E
ujDucs3QbzPad3pdchzVfSOa2RGvoig57aMdMuNou74qnEi8jXTLLwv4KIwj
jsQ3L1h7EhFx79msHyrj6EF1nAQD8T5apxK/sOwdR0rTrvHb57JQUlLgZQa9
cdTH8XBr40cOsnfX92neP45IT1j2rq3nofOZZVH25uPIU++y17LEU0Tboosp
sR1Hr7r+5C4YPkcy8nw67c7jaM3DrHf2XAkKf6Vt/9ZjHO1vvSuz9KMU7ex/
9nEgfByNpR2sWTj/GtHfGfKRuDuOYl03HefXy1B4oqaDbNY4+rbuljQjUY50
3g+4R30YR/4N4qrTLyvQ5QfkjsHWcSRyr6tl0rASnavyHSMMjCMXBaCjnfuI
8l7Q+yXSURFhPbB9IbgaPQj7vIITpKKuPzY7F4xqUMfAefvdilQU8JytfO5H
LQr7Hp7414aKTBJHGeeyP6F7DyxtHT2pSCygxnr2fB3KPZtbnxZORdWGV2am
1z+jqle9+61fUxHT70HypEQTYrW3evlJnIZ6qj9cnhhrQoemT61o6dBQ4ZO0
T7SXzWguajXe056GDl88fJJq+AVF0DiS6JJpKIWlIuXfuXbU3+AmOygwgV5f
MbnoJ9SBgmlDmiStCZRJ1RCeD+5AgxfLfos6TiDvDp5zc0Zf0Q3xHUxyuROI
J7ORMPujE+VND0ql6U6idY43T311v6HBAyYcHq6TaPj6Y8uZ7G8op4PvBC12
Er05F/pw+nwXyneMzJoemETHdqtrT61/RzPHLRpH4qbQo+asCzSJn+jqgdof
e+ln0EJamcJA7E/Er6Kl7Cwxgw6caxnqXP2Jhg71ig9pz6AJumWbim+/0HsF
DdzcxRmkqXdY+3ZkLyJ+bFwW/DeDOko2COTpAfSsW0/3fv8sutasZLLr5BAK
u4IqjQgLqODlW9lnyUNoX9GsQpDsAupMM6CT+TKEyBJDTMMmC4h0zr5SSGsY
ZexjczBJWkDNdBEUHO8IYp+93wryi0hA7zdPe/0o8iA9oUUeW0LFJbd/e1Ko
aOS4xa+89hVE5aHGmpyiIpsgh6S3CyuI7G+iL5dERYNj5yaahVdRti7bo6FV
KqILF1aYPb2KEptizx77TMPua20QWFlF/kMJswcdJ5GOduzoQ/F1lMXWEs5t
NINkrOVGYo9vIn29IMcwpxlk31nraBq6iXq9FfdMX5lBW58e+QxmbyKhzpjR
L4UzaKVoPD95ZBPdTTMzjuKaRR/7Zh5Ne26hcJk2ju3fsyi/A530u7iNzqGv
9ycuzqMXXkze+QU4wOUsVfyOmUeOp5VZdd/gII1erLc5dx4lh7t0FH3CQWPT
WfGn3fOIz+eyAbkfB3LWGzlntBcQpzrd4FluPIy5kZ/34xcR9zP7uXpfPIS1
mLW2iiwixQE+M3wwHoQoF6cqdy8izf2W/LyReDg0X6macWYRMb+zrHifiYen
IVZldk2LiCPg2rpQPR7cE0OqOu4sIenA1kufuQhAWMwZ+Ph0CYkveb21FiZA
ul0jrqR2CVl2OEm8lSRAsxivYdzCElL0/hmysIsAivkFDcb2y2jfSnaaqSUB
6ljaxjQvLKNH/oES3nYEcPScZ5GLXkYdc/5KLk4EiN2lb8ZYuYwm3k1IVXkQ
YOL9t45aiRUUW/q8EyIIECG+OvtScwX9DhPopN4mgNh1cd5HR1aQcJU0x5kE
ArweMlS/476CGB1vnS5JIoDZgfM218JXUP9x7RdN9wkwXBDv7525glxDIr69
ekiAYLbXqSfKVtDMwkyR12MC8Hn/fGfWtoJOaHhTGbC4qGPrp86/FVSy1416
PIcAB3aT1hVwq+i3Jyn6+iMC9Ccbi4lgeTX+Q7jdP5sA/iveeixqq2hWZvqj
ThYBOI4nOa2YrCLx4jDXjgcEePKh/No/LO/2nP77WT2TAPrEgezu4FV0MuPY
lFs6Abpv0Nd+Tl5F98M9xz3TCOA9Ij/0ungVzQW2fYIUAvxx+slc07SKtjN+
SpTcI8DRnihK6/Aq+kTe2By+Q4D6I5rWP7dXUVy4pd9gHAE0W/5dHRFZQxW3
H6fkRxPg2f7UrNk9a+jovcth6pEEEK868HnTcg05Jq+b3A4nAN3LPC6ByDUk
/fnmfHQQth4Fm71SOWvoOs8tDs0rBBh7TO9I+bCGHlrsiSi6SIC2lNP5B+bX
0G/9dPY5NwKkBUvqXzm5ji50TrWOWBGAdanjdHjgOkox/jz104wAIT5htxOS
15G7X/XL1AMEcHEZ6MpvWUfXlP2HfLUIoHTogUePxgY6HfLsY5YYAR7WmN0d
ttpAvGpMJaN8BODW2Xgz47WBjA7yrK2wE2BJ+TiBJXcDKVKycsI28FDDK3xf
i2sTna2TfST9Ew/qcY1VRoqbqD3+Q92Xdjw8YQwYPnJgE0Xwq/gZYvkdu9qt
4h68iZr7/j5LL8WD7UBSffrYJsoKrE5ejcIDtZBrYb16C33c2jnQoIQHR1K1
MHPvFlJ6dyX1IhEP7Q98EN/yFvp1ZOeTGV48vL7TFq2kvI12WXYEu63h4Jp/
rOSJ+9soKHvy6tHPOGCVjCAPaOJAUppsG3YUe55176qEGuGgjfy+OBX7f8v+
ocZOKxxYzN3sjNfAAeHOu4PHPXBAx+FrIC6Kg7WtiXM/HuBgx7L+dmbNNqL1
2hS0E/Dw2GLE50PrFvqSRpav/oKHI5YhF3JrN1A8V4vCI2c6EOMv/PTTaQWV
a+wsO+xNB0KDNZdPYs/RsJMP2giig3OhiW1T3CtIp4jX2i6VDl5Z57Wofl5G
Y8aOITva6KDwaYect9IyMgyfbL+qQw8DVVddlbYXkXchOkY2pgcLQfV45l+L
KP3r3eEuW3pY0yGrMZUtohmJvasqF+nBvTdj8ILHInpYGSo1WkAPynpSOrK/
FtDKIudlKwEGCK18STavnkfSO122t6UZgLH9L3H7wTw6vP/17aJdDDDy5tER
atA8yku0f8hszgBzLntzLmjOIyuVRw1V4Qxwra5C3+31HCpyUxNRnGWAkgM3
+9nKZ1FPQkRuzxYDXLy/J3ssfRbRv+2m3GJnhPrWY1I8IbPoGEOQ4V8yI5iY
tjRYGMwi5pxPnqlOjPCgjupwr2MGufy2/kj3hRH6WL4aaK1NI9aMv14XfjLC
pp2+/bmmaVR6zFtsYJQRxOpS0g/en0Z0vyKvVuCZIBfnyiyjM41yeyp2X9Bg
AlGbD4mhkVPILO3gYP9+JnBwfHf4vOMUWrDrumNmxQTc+FuaPGpTyOjH5CTZ
iwn08nyYcrHv9eh3YkF/DhOEUjU4JgwnUXxyka3ZCyYwuMQ2PiE+ifbaaDNU
fGCCJ2eM+N6sTaDIrqMuyT1M0HdC5m/e6wkk9+2WmBkHM1yRKzwlrDaBOhJ5
W8pFmWHNVw8XxDuBAqyyr5LlmeHZeX29okUaavpa3k3YzwxPxXbviqykIfeO
iTvlV5lhx42ZFjlrGuK5cxWRI5lBUQR3nKxLQxUWjFNJSczQT17k2CTREFu7
hKlvCTOk3YvJVcW+s6/jn6/2VWKxWlhXwjAVOR7WKjBtZgbVlzvqGzuo6Hmr
FQN5hBlkB9NR8zMqso4beJU0xwyPpG8M3Eunog0zTxcCjgVOMPX5akVTUS77
KpfvDhb4sfjF+30gFZl/ufmxT4QF5JNrzUWw+m0phsfbVI4FiMM3gmydqOih
aZZY+R4WMBZROul7hIqmmt9dTbJkgaf1MZ/0takoJdpIjuDEAiHozOy8ChXp
m3R2+3iwgF/OZZUoWSoaZTl5sy+ABSRf/Py0vpOKEppou01vsYCCqcTUYQEq
0rwdMPjuHguEhRz6d52Tiv4cYrgr+4gFetTa/iaxUFEUcyJKKmYBtyc5LFH0
VKTaKD6Fr2QB0fDdEcdxVNQT+SzTp4kFLMo8fDk3x1HYQU3Tvm4WeDHxevTx
2jiSY/q8ajLMAkutKytCq+Ooo/5IwbtZFvj+7VGp98o4CrjVbyu7zQL2/RlC
eVhMPODBkMTOCn2+1vKV2PWNDCuv8CKs4PqwovfV+ji68DnCxYfMCtOP9Umx
W+NIfPgA49JuVpDbmO3ZxFNRC4GlMBhYgbOJo1WNEauXJVvM6cxZgZbpP6LA
RkUyEDd724EVfnwQI4xyUVGnk0Uy11lW0G6h3zqN1dvXQri1Ui+ywvqS4fN0
fipSyvzWu/MaKzznddR05qOinxXJYbkxrNAxGBE3xktFt37akRTTWMEzPrZ4
N9a+e0W48WUuK0iPh9zfh93/R6DXQ/MlK1AjIg/yYP3H7XnI+fEDK1hKBBTl
CVORtrXzK6NmVgh4wlGxLkZF/y5K2X3pZgWx0UU7PkkqSro7vGY1xAruBx08
p2WoaN+LJw9/TrMCky9DTyzmgak2NwPnDVY4O5HtP7GLijImFUZHmdngYMyg
OIcWFR1in7ztxc8GZeT4nFmgokWFEuUFSTZwyLrUlmJMRTnGF74GUtgg752P
+6YVFVm47b6M12GDl2dOacmcoKKneW8rOazZgCO53uWtHxXZ1l11TnZmA17Y
oSAZhtWhQzr0Yl5sIFlF3TSJo6ITxGpT+VtsQIE/Xn1PqYgV3ZguSWSD4KXU
w0blVPT2xP57e7PY4HK7+GePJirizmj8ZfiODRx5eT/P0aioqjw6tLmODe48
Cna32qIijx4zqSNf2aD4Rl6fNzcNfeb/et6JygZ8TuVKvVo0dPXOz5UAMXaQ
Yn106Oo9GpItycjclmMHi0vpx148o6FvrSfg1h52CGnRLs2qoyFltsHIe4fZ
Qd/4XXTuCg39vUkVKA5jh6FvkcTd5ydQfO7zCvU4dvApu1InFDmBdD55O72/
zw62OgXfXuRNoGTcfF5jKTuIHBf8szA8gYyD1tWHhrH+Lo2rv/aYRC992Y8K
Ge+AL5k6X7TuT6Ev6bxXi2x3gGEjIcD08xQarRPJMnDdAdUTtppic1NIRFie
5nltBxi8q51cMJ9GETVG4TVlO2BThylDkWkG2fJce+UuxQG9nNVDaj0zyFf3
1s9tFQ4ICNh4+3V+BkWfjdtO0uMAW54ovVpOrE6vyDD9aM8BJS+enkg6NIvk
Tr8b4k3AYqq49J8Ps2jt1Szvh3Xs+sVzE1Jv5hBf/4qWFQsnUPO7JE90zyEK
M875nwAn+JerHvuxNIdOO3I851bjhD3i2tRb2PfqC73i/rNunOA1Mni+pGoe
PbRxvcT5nROq2nluEb4voEdBHlRVOy7Y2r++l0BcRqrVLCuRJ7hgD6PJMynD
ZVRNX8AwcJoLSupihazPLqM/ccPEOF8u8Hw/PTz8fBmJZ5+wG7/NBWdaZUwy
tFdQep1F3aNKLvjGaxS/zw7zzg71hzxS3PCPmyH9Yew6krLqfHZejhvieXm3
vEvW0csU3/JqCjd8cg7ZL9e5jjokirq8dbhBhM4rw1JwA3GoybK1WHODqsNm
qW32Boq2FQoIj+SGID7vPJXnm+hG1saRhQlukNT7O6DyeBtZqr67oDjPDafe
8vwwq95G4jV+d11WuaGwwCBtV982qhikdnQw8MCGQ6sPmQ0HczI/LYrEeWDV
TnVmwAAHLs/LzM9aYu16rjEnn+NAVe+C1wNbHig+7sy8+g4HW61KcV2OPKDh
l9Xmg9VX6dOPvxic5wFfu8Kq+T4cdKolmkrc4AGxtjEV0x142Ffubdzzigd+
9drMTrjigcNE4TxnBQ88D/1Tu8sHD72/RqIOVPNAupJE5uGreAjYcGx8/YUH
NFOuGXHG4eEFMj14d4QHhNKG+nOxejG0g/FcI40HvEXCLXLe48HsVO2t7Vke
uNw9Wni5DvPYDa16ry0eALBUfvAdD8R6spGJIC+wsBmsjy3iYcp2yPX6Tl7I
tt15NGETD5X/Hka8k+aF10i7nYWBAPYsAnWyqrwwxbXHPZCXAHfM6A3pjHlB
feLa5H4KAZz6PrpoW/DCn/NukpHqWP3sHXTjgg0viPuGMmVqE6AxYa5m4BQv
LEe9MNbD6m3ctz9QGcgLPYk60Q7HMU+NVz0KvM4LwtpdnEnOBGDBPSBoRfGC
XOjaeOoZAvAoO9SVJfOCdkAE3bo3AVINNWQuZfLC/hu4dQc/zF/H+G+pPeaF
x4Mab69jPpCJ/Hqw5AUvvBP7jVO8RoDCByUFXm95YUiL2fr5DQJQXsexKFXx
wsxz3+XFmwR41ezhTq3jhaBIlU4mzHOaf41bClp4YVctR+vfGAJULpOVznXy
wn3Krc7weALs42CMk/nJC7lBFW2T/3uHNDw5NMALXCbBJRKYh0x0ag/njPJC
6dGDrsLJmE+OZJc4T/JCSu6+/l+Yn466hXJJLPAC4Z82lyvmq55Qxwt9a7wg
+enZ1GvMh47J2p0ZeD64dqTMpxXz2J9nQruPMfNB3iNiTFEGAc7ULt0T4uSD
69ZO2jaY36g9XQvd/Hyga3oroA6LvadLbZLF+EDY3c5gHYvnGO6+OSrNB/S+
GimrWHxFzEeQR4EP8gfVLn3E4g0184AOVT6Y4djsM8PiMGPFn/EafGAiPtP9
CBuPwZlF21yfD5xhh2sVNp9o/3/pbEZ8oDO+EZODzZcj7vN6kykftEtz2h3G
1nPv8WPHKCs+eLGi016DrVeo4vqHAw588HJMGreJeTiz46Q4gzMfHA7iWt5O
JIDkP71rn87yQcKfhdpmbD+fbIr+ue7FB4t53pdOYPutwLcGcIkPILR+5zvs
PEoUeh5tBfJBhuhs568oAryzSzodFMUHVPr5dwHY+ep6X6zTSuCDNBshkYVQ
AtREWMqsJPMBMaf4nwbmyeaX7P8uPeaDSUFnHWEsfw43Ug/uLuSD+Kaj22+w
/PrW31gw+4IPTlM8n+10J0Av20137yo+OFgSbXIAy09nqdMtSp/5wIMkfpsZ
y98RzX1KtBY+aGJaOJBkQ4CpM5uT537yQVTjXSqzCQH8gn8flv3Dh7nxi/yc
IQFWEstLhkf54GPyrow8PQLgqy9fOLXAB1zcFb88VAlwq/top8Q6Hwx2nee6
Jo/5dXLX7n48PwzonTp4QooAfCJTC8c4+SHo51BGEPY8yl46G2CtwA/1e5yu
HJjHg7L2wNEsVX6wehbpbkbD/ImzV6Hu5Yc4+7RxmSE8GMQaj14z5AdhZuOL
1p14cMpVsn7myA9RP2LNnhTjIaVrToWQwA8Wpk+rbU/i4UG6B5t5Mj90lF31
emWNh1zn4dHUDH6YoGqP/jPGQ+nE9wfKBfygBO0hP3fjoY2+nM2hhh/at3jP
jjHggWHPtX8l8/zA1LTST3iMA/b15dq1VX6wjTTcwZCCA54a34dGOAG4j5d9
NxyFA6K5i81vdgEofsshpe+NA90zRp8YZQUgYfrtuCvm0UvJbFkn7AXgs5p/
d0PkNhpeTLVl+yAAH9C5X/N3N1HOvt1+fZ8EIGeZ2GbnvYlOxrUllDQLQBW6
yJFgsol+kRiajvYIgMLdapkQwib6evSiTua8ADQsRrKH+W6gqpdmRGUFQWjm
MTHyOLCOUr3w1MOpgoAvnvoaMbyCrMszGSUfCgLFV45Pq2oF8TBoSs/nCkJu
hpXvbOoKis/0dkwtFYR3OZI1l0xXUETL77aBVkE4vJZcNlu6jHzl37zypReC
wJe5/yRvLiGTEfeQxAtCQHuWK7cBC+hAiPTz/QFC0Ma5KtQmvoAM+Ht/LYUK
ActKGEfnxjzSNjLXPB4rBPML/qTL5fNIIU9lXjpfCMpTGoVN98wjtjMLbmW9
QkBHUZcy0pxDzJvPU88NCQGKvenaLDyH6JPP1AtThWCRI+xN0vos2qjrlg5d
FoKH9C4/Nz7OoglSef8BHmGY3Qq8pWk2i74Mh1j3HBQGO24uGT2/GdQYvDc8
+rAw9G+FnY1zmEF1fNMvdW2E4U/YM3s1mEGV+505H7kIw5OTkW9DOGbQ81yD
5vMhwiDTMvnNxWkaFeiur4hGCIOEXuSzYFXMp12vyG3RwnCrZazOjG4aZdLL
3FRLE4bKFLFs/mdTKM6VCdZLhSE463rCBbopFL3x0buoXBg8Ox/Dmd+T6FZS
wIOT1cLw6neplsjrSRRaN772qVUYIqzZ17+cm0TepC9lsWPCwFca9s+/ZwK5
V0YM608Lg4OUrmbKmwl01lqPd3ZRGPAyVnRhyRPIKaLY14ZOBOhCVIXf2kyg
w8N3FMXFRcB8v4li2wANfVEc7nIkicBZSaKZSj0NmfpphGYoiIBsXs3UgSIa
OkTo7xDSEIGGBA6rzBAaqjfeFWinJwLK3/BWv8/SkNHdCOkUQxG40e1g9c2S
hgyIiv68liLg71B/f0aWhqrPhUpY2YqAWlLdkgAvDaGSr413HEWAbYEubGWb
inT1A0Q5zovA+YP9rNO/qajiZkudmY8IBLvdW6VvwTzYKu4dc1kEHurXT/2o
oKI9jp+rmW+IgJ2OTcKbTMzDj4XcD0aJAG47dLs2norUaB68t+JFoH+icTvu
OhW9UPtYWZckArpOEqOCl6mIEshzli5DBPRG/elOnce8XHOG0+ARNh/P9sdY
IY8UWcrfheWLgImYBoeaNRUVWrK7fCwSAU7V1ogKEyqSSzvJtvVKBMqi6vbT
GVDRk4HS17oVIvBH/Owtdsy/MmRGp6BqEfhiyBvSrYb52tuBqaJeBPa/Pmh3
SomKpN48f7HyRQRigzL0izAPZ29uO2h8EwHTJ3V2FZivJIyO0vn/FAHturTa
KMzHD2OfPH89IAJfNTjShUSoSKxr1WZ+RAR4rPUWzmN+Sxc13941IQJMB08N
BmO+Ez6dXeA7JwJHvvb4HsH8l1Y4f6RkRQSgWTb/H+ZDgbkD65NbWH8+c5EI
a0/SSs9VYhAF43Ambgfsft7rk+YebKIQsctWRx3rP7ERlp9yi0JQw9xaB+ZD
Lq6k7DFBUYDd/EgFm1+83T9jsrgobFkKzR3G5r8jS3v+DEkUtBiurqpg64sd
jcvMVRCFbunvezoxH7JS/hoNqYrCNxL1xh5sf6Iuq09LaojCmfx7bx0wHzJ+
iExz1sPG+9SUp7+PiiLof+/LMhQFOcUskWHMh3RmFFqfsSgcFkP9xkep6Ma9
60lilqJgKk175YP5EPe7S++4rSgcfbHiYONGRRvng+70uIhCYPffZSfMh4Ev
27QEz4tCfPKrozcwH66uSA7Z+IjCDanWg64ZVLQU2bjnW5Ao/NHmi3bBfHip
XXSA+4YoHNM/xReK+XBewCfKMkoULFqUS2x/UdFMHv/v1iRReGGjbaeH+ZD6
ySWssUgUHljwin07TEMSd3vc41+LAlf3C9Vi7HmxdjpsY/1eFPbc7frnco2G
qla0FP40ioJHxUOK7SsaSlTm7loewtb7i03SXGYCNazdqvpAFYX3D2ND+w0n
0EbDRkH4rChEgnyuwWnseXcZC+HcFgVxzRCLa7mYD1M/kskiYjD952/lc9VJ
5Ou6h2eSKAZRaiwyb20m0ZNdzzZKyWLAVNiXExM0ibi+pHzV3yMGrk4Hl+Oa
JtEwzjvI1lIM5tuFtr55T6FYd7H2m7fE4Nf+dGmlvmlUo5FYbhonBi+uPDsr
gnlwiZ45lztJDPw92zRWJGaQc9Z8wINHYnA/NGOo0moGqXc1S5VVikEMy1Ta
kcoZ1Kd31X94TgwydcRjvj+cRRTu7p2GJ3dCja3e9vj9eTQaN3oj+cxO+P5b
0tUT+x48YF3+989jJyR0FX4S/zmP2OmFSmMDdgKHsvUeTuEFRF1yONB9dyd4
Bua8xWUsoLzePu/zdTshTC1hSvnJIhIrGPmYIC8OT0cZaAlfl1EXaYk0qCIO
RzP95QcWllHMI8Zo9b3isGtAjVlLaAWtpZOtfxqIQ8tGYCHTyRXUE3d+TMpR
HP6N4G5OTqyge36TXG/ixYHdsYpay7yGWNHiqd55cXB675D6U2MDBeyTY36z
Jg6T/q8SJx030Kjh8eIEvASIZK2EDFzfQLWHatYMOCWAotAsa9eygQKt4u49
VZDAvNN1xNNxE9HOyHz2PyUBISqFrdTLW+iYm72HpZsEOHx4LKOStoUa3WO4
FXwkIL8mN0u7Ygvl+sye6AuWANqLwuePNreQ49UPS4ZpEiDqer455vo2+hJr
I8fdLgH1R77ud9THgXZCVBv1uwQYd36642GOg4K77y/V9UqAL/2VLGtHHESk
SNZcoUqA29jrzpdXcSDesaQ0TSCCpVfCg9ulOLA5woVzZCSCwLvtLbtqHMR2
yn9rZCFCzJ/ns+utOFjrcryaw0WEqrvjqbVjOOj+WfvZRpwI9+JsyvTE8LDj
eG9arSQR3n7BOz+Tw8P+3kUPFRkiyDnRqFR1rP7ql+NhUSLCe6U7031meIgf
ineq1CJC+Nu3h6IC8XBw8tiylA0RFLQ3bt7/goeHfOHfrtkTIdbwpHML5sEF
nWclvceJkFxTJtHSj4fs6PVzKS5E6BfUVto9g4c1cmYPiy8R5Olq1h9wEcDS
ou71WT/sfskVHw0hrF73n7jzyZ8IZ984v8mUwHzzWdc4JIQI349ndDYpE+C5
S1/5TDQR5s27HAoOEoAQzZBiHk+En7fJrunmmC9fKl8svEsEE0PdbNujmDdw
oQquaUQYH8jbUnLCPER+wliTQQRu7cbWA6cJUHq4bXBnFhF+fDOUU3DD/PlA
PONHHtZ/3Vua2QUCvK47cEX9KRHG/spxxl7G6ucJ76N3nxOhfOqvWtJVrH7n
TVWZKiGCpJ6D5pkQArzV/shm+ooIk6GvCNthmGdc/v3Lf0MEvVu1/qciCOB6
m7OOvoIIp/nog2IjCcDVczK4qpoIve/du3XiCHB2O9JetA7bL+k+QnUC5kXZ
F+oBDURQrhJxZ8d8w3O4h+t7MxGsDCfXiJh/zl/GTe5qI4LR7bq8TcyH1Zly
TfFfiZDaWOaYk0oAgTrLPFoXEQ4sBPJyYr7ypAVcP9SDtZMufjTE/FXL8+hE
3m8i6PM/sAPMZ0LaTVqEASIwvM3uov/ff6dm+U8OEsH4e53qXSyuixKeez9C
BKf2+XMjWCz6Yl+b0DgRcGcrruAfEODij/OFlyew+MHBk/+3N27dvdU5TQTy
S0+J/+8Xl61wUZknwmGpBxX/93/JfFA/dokIn75Oqf8/fvMlVtHxVew81EWS
/p8fMVNt2WiTCD4ZgQMc2Pz9Px37loOThEfRHMT/19dKvVGyTScJeMUA5//X
T+J5FuPIJAlBzZvP/9+fQK1v58pZJeH2hWje//evw3ndUIBDEo7GFD/+iO2v
bJQ00Y9bEuKys73/3//gEtONdj5JeEDSj7wWTYDObr8eJSFJKLBmJ/x/XnJb
Ga9vi0oCk5zWojN2ntdk6u6MiktC85HMgC3svLvNJjwNpSQh3epdniuWD0qX
+IyzZSQhMv196j0sX3pqXfHHlCThUE4S+j+/Zvb9EglRkYRfmwUxJC8CMNVY
qGerSUKV2t1drVg+7v2ofW5UUxLOCBtsJ5zEfKn/IoxFVxL07a64Fh7D/P5B
Jl0JSQLKP/4wGfNi0nuu1otGkrCZZC08gHnxufat0eRDkjDcgnL0jAjwqXx9
+52pJCQm307wQpjn346qbR+RhAVVlz0Guwlg8boyLcZJErTU3ph+wp7Hs7vV
SotPSYKky0zMS24ChJbmt3x1lYT44/EJF1mx/l8kbgl6SMI/S+5Cr3U8sBa5
ueZekQTLotAV8994qM/jU/1wRxJ0PSxHxhPx0E+KNv5zTxJeRLA3iN/Gw+Lj
bRe6VGw/i3fsUriGB1IONdn4gSREx2tVf3bHw42H1evfn0rCkqM/mxDgQT/V
s2GqVhKqFbeZfIdwYCsw+Ie7XhJw5y3Oq/3AgVey3Zp6E3a9JN2NjmYcZN4z
UA5ql4QjF+3tHr3E3o8JQveYerHz9j16JDsE938d6URclIQPinqC3pzY+9ik
RShyRRJ4T36bbN7eRunsnZ2T65LAVci86vdnG4XdGTjwniAFnjmKOavZ28gs
bY1iyyUFRt6XOhbEt9Fgvup2jKIUhHP8dqnl3EIcDZlZy6ek4O1ERoFo2zo6
y3D5T1ubFBDyf/mpcC0jEYmmH+tfpSDA/vGs8OQSatPc2S73XQqiqh/fEGpe
Qns9P3+48VsKlMZ3t9lGLCHGb/wZe8ekgHqC3W5tdRHlZb+xeYiXBplSuUkq
dQHZV7Cat9BLQ3UXFy2/aQGxdzntX2GShlXBbL7YggV0iYlptxWHNLCwVfm1
nV1A+73tuBhFpUHC4fWzYyPzaFhnpdlLXRqOroYthdPmUJqNWW26hjQIFLoq
a7TOITOf7PIGbWkI9nxVJFUyh17nHCqQ3CcN6tScoCd+cyiC5f7N7+bY+C8y
zIO3ZxHphxboncPG0x15ryI9i3pm4jTc3aUhwN1euId5FsWyDlJSvaTB0s/V
oGFqBi3oRe+c9ZMGVynp3SHvMQ/m/lrLDZMGJt8dsSfsZ9Dpi0Fl7OnSULT/
6zmlfdNor1p/mfwDaci0oQQPCUwj1jl4cyBbGnD9wkOak1PoxQXGt2FPpEFW
T8v+U8YU2vC9+26hVBoK13dd8cdNoXbVhXfcb6RBrfJaP8L8lzNjW04pl4Z1
ArfbizeTyNhXrMLtozQ8EA7+G+0ziVJ88t/3tkiDlqGqFoxPoPMqrJWrbdLQ
y1aZe6JpAulOe1YKdEpDnvj1XPnCCTTkrfbBskca/uB9X3V4TSBV7w9VdcPS
oEjvJ3dhk4boKMSPf/9h55NPvSQ8REPdkzc+blGlQTg94IJ/Ew0Fex2q1pyV
hvFWssyRNBpq8vxW83xTGval5W+m69NQptLe2iYcCUjP1fzX5GnIdyKtdpSO
BF2meV68AjQk4On0ichKguM5jQN+M1Q0rljzSW8HCZR/kY5U9lNRJU267hgX
CRTnGijVrVTk4jFelyRAgvc08sh6EeY9RbPPL4VJcN00NVY9i4qYacWf28RI
0LxYrqdwl4p6C7nraRIkqL1z+2hfOBWVuF+qZ5Ymwf1ZHtLhK5gPFH7Uy8iS
YMv+Ki7Eg4psqVoNBvIk6IlaVXd3/t8H2w3BKiTw1m6pCjOjonZ5l8b7aiQw
tFZJKjSkopzxusY3e0hwz+dHzT0dKvJ/Sm76pkmCosCCIF11KjI+H900o0OC
3KWSmVxlzGfyk007EAm4+2RMW8mYD8YsmhUMSCBu6/2iTIqKPhWUNh80IsGQ
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
/w8NAmIx
          "]]}, Annotation[#, "Charting`Private`Tag$448897#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
329JlcNugsGz3O30Op3DD/pP5JB6+eOuM3tkMM+P7WPYCzmcG9j76IKBDK75
xhXOF8jhH/UVTzNXGXzg8/JTd50cUryzjceeyaDbDs6SlQY5zCdQphhyZHDf
tGeJUIscXgn3GlkvkMEh752fTTvksHhd5c0ret2ren/+UjUsh9wdgVWNXTJY
49lanvNPDp2ffHe/wUnGR9v2VNQwyOMtVRUlURIZfSeSKijM8vhgpiI0QZCM
Qp52lTKc8nhlUDjHSIaMjh5/qhKE5NHwfZ5BozqZ3p9ufL+0Qx5fLUmfvGZD
xsYtjtUPd8oj4zn90Vm6L2T8qar+sFserws+2Hf8LBkN3aJrZrTlcXnhOMuk
BxkfuArWOR2WR65r78/evETGHS7KDUZn5DFLU/VJVQoZe92kfV47yWOQ9qjO
z8dkvO3JT+J2lUcfa6317qdk/ONHM2v0lsc9O4ZLWl+R8emlup9ml+TRjoel
1v0TGYXjPXqsEuWx3vPAp5ROMm6UvJpw+CGPp3ZodfkKyOKb0scx5U3y2Ed7
5C0jIou2FfdUZNvoesxaPWsWp9ft9xDfoS559HSK/KglJ4sXWo7OO4/J42G1
xmAFep2Pjv6luTMrIDFizeSOqSw28m3jCtBSQK2tA05BsbKo4+X1J2WfAupG
M/JaJ9D3+/7mewUoIM97VRMdet3duaQWQdJXwAsc118IPZFFI8qef6/MFdA+
prJ/I1cWa4t0pwc9FFB9wenNpyZZ/OpwotU0TQHzEzWiGYTk8OLoJYZbVAWM
t5f2N0qSw/8B8xlzkw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$448897#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
DCajfeOifLkw6J1K3QbhMYi25TJnC+JCeEef/iEyBsYSkQteUUx+/ec8NoqN
AaWFlNKdyIUiOzs6vMTHICzqo63FZy58V6nbEiAxBgY2hhz5RVyozypDOyc5
Bt1iPzI1qrmwvkcwW1NqDAKbDztHtXHhQaUTH4uYeENkrxAbhQsT9cGOLD0G
bYc9CK9pLpx53Kx7lonviC56dLNwo47/npQAJiY3PZCzEOBGC59q3atMXB8h
Wp0ny43fsj/oABP7HHp1XUOTG/X8bLn6meeTRNaTowy4cWuKq4QTE/9syGtl
NeHGfR8zMjKZ/C492X3fy4obS4Us1g8w+ctYNW3qduJG3p0RDeNM/8qETvSb
n+dGr87NQ/VM/8/Wj4fnXefG1047Ux6LjoFI+HXQCORGFgOSjSZTr/yDnJOR
kdzoDcmkeCFm/y34NI41kRv/eydkOCkwBnx1iuZe6dy4Q1e8WpoZj6ywtIWu
Qm60au+cJzHj5XBgW4p5FdP+LH8PGzOeaTWHODSGuFHtYO52R/YxsA7tyYz8
y43WL1ibmtaMwbLFeWdWFh5shyNu6qtU2P/rPtElw4OLS76Rx5l9+1yIiKc5
mQe/WO1V2j1HhXjzBLm8zTxodlz2GTczHyercq9HWvIgreveNGmcORcEm5JZ
nXjQO9Mg0XuECsb7GlsvnOPBk4sKde8GqfD459gm8wc8+NOebym2kwpbH/r0
5z7lwQap4Rin/9+XvRxP1F/z4Iekl5NLTVTYUKkwuaaQB6sup/34VsW834Ef
4i785MGCuNF8+jcq3Nmz1byrlQdT4wvM5kuY9ea7VUounQfF7Fm6QnOocPHb
PecLGryYXxTI3Z1ABYXB3Zxzm3hR0iGDuvkFFapZeVJvIi/q9UUHuTPnFjUM
pT+058U6r/0mzkFUaM+PupMUwova7kbVjzyZ9aL9iOq6Z7zoshRRlO3KrAcM
6covSby4RWH+Yc4JKoRujhckingx9NDJUzsOUWHn57fx7TReNPrv68iBTUy9
at3+O7HMi3HeR56praNC7IQWhcLNhz59wFanTIVZrfT1M0p8yP6gRTJGmFn/
kr8WCljzocvysVMUZn0Vjq3s2JXLh3Onn2DJ81Eozgu+VVXBXN9FC3EKG4Vz
bRbKVg18uL3RYWOp/yh8E29wd6LyoT67t3rd2VG4Ht7O8JHjR+O1xImJLaOg
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

          "]]}, Annotation[#, "Charting`Private`Tag$448897#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Gh77Qv8fiMiP/Q==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$448897#6"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"value\"", TraditionalForm], None}, {
        FormBox["\"time\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 19.999999591836733`}, {-12.448954266332823`, 
      9.797458294706107}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"$q1", "\[InvisibleApplication]", 
         RowBox[{"(", 
           TagBox["t", HoldForm], ")"}]}], 
       RowBox[{"$q2", "\[InvisibleApplication]", 
         RowBox[{"(", 
           TagBox["t", HoldForm], ")"}]}], 
       RowBox[{"$q3", "\[InvisibleApplication]", 
         RowBox[{"(", 
           TagBox["t", HoldForm], ")"}]}], 
       RowBox[{"$q4", "\[InvisibleApplication]", 
         RowBox[{"(", 
           TagBox["t", HoldForm], ")"}]}], 
       RowBox[{"$q5", "\[InvisibleApplication]", 
         RowBox[{"(", 
           TagBox["t", HoldForm], ")"}]}], 
       RowBox[{"$q6", "\[InvisibleApplication]", 
         RowBox[{"(", 
           TagBox["t", HoldForm], ")"}]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.75314903295757*^9, {3.753149303410356*^9, 3.753149314851514*^9}, 
   3.7531494991414757`*^9, 3.753149713445228*^9, 3.7531497471326437`*^9, 
   3.753153230515728*^9, {3.7531539450172367`*^9, 3.753154009117021*^9}, 
   3.753154141338092*^9, 3.753154173721539*^9, {3.753154263994341*^9, 
   3.7531542886422358`*^9}, 3.7531548981748457`*^9, 3.753155037311673*^9, 
   3.7531782350019417`*^9, 3.753179491722587*^9, 3.753180353570821*^9, 
   3.753180432688457*^9, 3.753180859122711*^9, 3.753181210881681*^9, 
   3.753181262409749*^9, 3.7531839690322533`*^9, 3.753185036649548*^9, 
   3.75318509170827*^9, 3.753185706394257*^9, 3.753185985987006*^9, 
   3.753186034612377*^9, 3.75319247639077*^9, 3.7531952290976954`*^9, 
   3.753195295184877*^9, 3.753202811712154*^9, 3.753204178669374*^9, {
   3.75320559169456*^9, 3.75320562853201*^9}, {3.753205703973422*^9, 
   3.753205722131199*^9}, 3.753207325325964*^9, 3.753208608880117*^9, 
   3.753209785469047*^9, 3.7532100159074707`*^9, {3.75321538873132*^9, 
   3.753215404433906*^9}, {3.753215474431082*^9, 3.7532155168115053`*^9}, 
   3.753215549309112*^9, 3.753215581570883*^9, 3.753215658814836*^9, 
   3.7532164356997547`*^9, {3.7532165591911497`*^9, 3.753216610452237*^9}, 
   3.753216650531507*^9, 3.7532167457409077`*^9, {3.753216800696411*^9, 
   3.7532168092302923`*^9}, {3.7532168984781027`*^9, 3.753216926256312*^9}, 
   3.7532170754322853`*^9, {3.7532171135297422`*^9, 3.7532171423259687`*^9}, {
   3.7532174918895473`*^9, 3.7532174977095737`*^9}, 3.753217641740282*^9, 
   3.753217695014258*^9, 3.753218380033153*^9, 3.7532184150832357`*^9, {
   3.753218864824335*^9, 3.7532188867350817`*^9}, 3.7532189326023283`*^9, 
   3.753219006251821*^9, 3.753219037968113*^9, 3.753219166299657*^9, {
   3.753219465025619*^9, 3.75321946672332*^9}, {3.75321952619911*^9, 
   3.753219569932683*^9}, 3.7532199469960947`*^9, {3.753219985003294*^9, 
   3.75322005914081*^9}, 3.7532202087240267`*^9, 3.7532202388876038`*^9, 
   3.7532202773905067`*^9, 3.753220313928076*^9, 3.753220496197467*^9, 
   3.753220564291873*^9, 3.753220773081428*^9, 3.753221013006098*^9, 
   3.753221131132959*^9, 3.753221284008005*^9, 3.753221394930333*^9, 
   3.7532214392401047`*^9, {3.753221487622958*^9, 3.753221533446918*^9}, 
   3.753221580610214*^9},
 CellLabel->
  "Out[2311]=",ExpressionUUID->"951b0ac7-8ee2-46a1-81a6-5a002c3fbbb1"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotGetLinkCoords", "[", 
   RowBox[{"T_", ",", "l_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pFront", ",", "pBack"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"p0x", "=", 
      RowBox[{"T", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "4"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"p0y", "=", 
      RowBox[{"T", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "4"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"pFront", "=", 
      RowBox[{
       RowBox[{"T", ".", 
        SuperscriptBox[
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"l", "/", "2"}], ",", "0", ",", "0", ",", "1"}], "}"}], 
          "}"}], "\[Transpose]"]}], "//", "Simplify"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"pBack", "=", 
      RowBox[{
       RowBox[{"T", ".", 
        SuperscriptBox[
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "l"}], "/", "2"}], ",", "0", ",", "0", ",", "1"}], 
           "}"}], "}"}], "\[Transpose]"]}], "//", "Simplify"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"pFront", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"1", ";;", "2"}], ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"pBack", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"1", ";;", "2"}], ",", "1"}], "]"}], "]"}]}], "}"}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"links", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"plotGetLinkCoords", "[", 
      RowBox[{
       RowBox[{"Ts", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"lens", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "nObjects"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.751118751091413*^9, 3.751118757689159*^9}, {
   3.751118801666729*^9, 3.751118848375704*^9}, {3.7511190462549543`*^9, 
   3.751119096603574*^9}, {3.751160106175243*^9, 3.751160106282084*^9}, {
   3.7528968920839977`*^9, 3.752896931054696*^9}, {3.7528970643922863`*^9, 
   3.7528970850217657`*^9}, {3.752898363356378*^9, 3.7528983639949303`*^9}, 
   3.752898535377866*^9, {3.752930968550906*^9, 3.752931039129393*^9}, {
   3.752931112004519*^9, 3.752931112747387*^9}, {3.752931377819645*^9, 
   3.7529314340380373`*^9}, {3.7529315635671864`*^9, 
   3.7529315943397923`*^9}, {3.75293164368289*^9, 3.752931644269472*^9}, {
   3.75293167656215*^9, 3.752931679101885*^9}, {3.752931714337655*^9, 
   3.752931780152071*^9}, {3.7529352424504757`*^9, 3.7529352484956827`*^9}, {
   3.752935433445023*^9, 3.752935445491578*^9}, {3.753037820864614*^9, 
   3.7530378254409018`*^9}, 3.753044053026998*^9, 3.75304619671243*^9, {
   3.75305182763835*^9, 3.7530518506661777`*^9}, {3.753052269760738*^9, 
   3.753052318096066*^9}, {3.7530523517408123`*^9, 3.753052352626607*^9}, {
   3.753052396789255*^9, 3.753052397694915*^9}, {3.753052431610183*^9, 
   3.7530524969842777`*^9}, {3.753052585589896*^9, 3.753052587838933*^9}, {
   3.753053098045836*^9, 3.753053105395467*^9}, {3.753053269283177*^9, 
   3.7530532702229548`*^9}, {3.753121588118039*^9, 3.753121638046852*^9}, {
   3.753121786920171*^9, 3.75312195563548*^9}, {3.753121986192629*^9, 
   3.753121989480275*^9}, {3.753122030953302*^9, 3.75312205956441*^9}, {
   3.753122129003786*^9, 3.753122140551744*^9}, {3.7531221852110453`*^9, 
   3.7531222295094347`*^9}, {3.75312227640051*^9, 3.753122394166133*^9}, {
   3.753122435071288*^9, 3.753122437772585*^9}, 3.753122485009709*^9, {
   3.753149382369236*^9, 3.753149400527478*^9}, 3.753180439863818*^9, {
   3.753180471063957*^9, 3.753180758696107*^9}},
 CellLabel->
  "In[2312]:=",ExpressionUUID->"72acf4bf-c920-417b-a46c-c6e641d76c27"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Animate", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"linksCoords", "[", "i_", "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"links", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "/.", "sim"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"linksCoords", "[", "j_", "]"}], ":=", 
     RowBox[{
      RowBox[{"links", "[", 
       RowBox[{"[", "j", "]"}], "]"}], "/.", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"qs", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", 
         RowBox[{"qsPlot", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nVars"}], "}"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"LinksForAnimation", "[", "tt_", "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"linksCoords", "[", "i", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "links", "]"}]}], "}"}]}], "]"}], ")"}], "/.", 
      RowBox[{"t", "\[Rule]", "tt"}]}]}], ";"}], "\n", 
   RowBox[{"Animate", "[", 
    RowBox[{
     RowBox[{"Show", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Graphics", "[", 
         RowBox[{"LinksForAnimation", "[", "t", "]"}], "]"}], 
        "\[IndentingNewLine]", "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", " ", "True"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "timeend"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.751118751091413*^9, 3.751118757689159*^9}, {
   3.751118801666729*^9, 3.751118848375704*^9}, {3.7511190462549543`*^9, 
   3.751119096603574*^9}, {3.751160106175243*^9, 3.751160106282084*^9}, {
   3.7528968920839977`*^9, 3.752896931054696*^9}, {3.7528970643922863`*^9, 
   3.7528970850217657`*^9}, {3.752898363356378*^9, 3.7528983639949303`*^9}, 
   3.752898535377866*^9, {3.752930968550906*^9, 3.752931039129393*^9}, {
   3.752931112004519*^9, 3.752931112747387*^9}, {3.752931377819645*^9, 
   3.7529314340380373`*^9}, {3.7529315635671864`*^9, 
   3.7529315943397923`*^9}, {3.75293164368289*^9, 3.752931644269472*^9}, {
   3.75293167656215*^9, 3.752931679101885*^9}, {3.752931714337655*^9, 
   3.752931780152071*^9}, {3.7529352424504757`*^9, 3.7529352484956827`*^9}, {
   3.752935433445023*^9, 3.752935445491578*^9}, {3.753037820864614*^9, 
   3.7530378254409018`*^9}, 3.753044053026998*^9, 3.75304619671243*^9, {
   3.75305182763835*^9, 3.7530518506661777`*^9}, {3.753052269760738*^9, 
   3.753052318096066*^9}, {3.7530523517408123`*^9, 3.753052352626607*^9}, {
   3.753052396789255*^9, 3.753052397694915*^9}, {3.753052431610183*^9, 
   3.7530524969842777`*^9}, {3.753052585589896*^9, 3.753052587838933*^9}, {
   3.753053098045836*^9, 3.753053105395467*^9}, {3.753053269283177*^9, 
   3.7530532702229548`*^9}, {3.753121588118039*^9, 3.753121638046852*^9}, {
   3.753121786920171*^9, 3.75312195563548*^9}, {3.753121986192629*^9, 
   3.753121989480275*^9}, {3.753122030953302*^9, 3.75312205956441*^9}, {
   3.753122129003786*^9, 3.753122147192174*^9}, {3.75312254831465*^9, 
   3.753122549156526*^9}, 3.75312681412013*^9, {3.753148949599975*^9, 
   3.753148977232799*^9}, {3.753149176256588*^9, 3.753149186928094*^9}, {
   3.753149366341589*^9, 3.753149427247396*^9}, {3.753154971886162*^9, 
   3.753154972939328*^9}, {3.75318516050072*^9, 3.753185175944008*^9}, {
   3.7532176506014338`*^9, 3.753217653311755*^9}, {3.753220219934483*^9, 
   3.753220222667912*^9}},
 CellLabel->
  "In[2314]:=",ExpressionUUID->"a5e5e57a-98e4-4a87-bc00-5d27621ac9a6"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 17.77065086364746, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 20}}, Typeset`size$$ = {540., {265., 273.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$449005$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$449005$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[{
         Graphics[
          $CellContext`LinksForAnimation[$CellContext`t$$]]}, 
        PlotRange -> {{-5, 5}, {-5, 5}}, Frame -> True], 
      "Specifications" :> {{$CellContext`t$$, 0, 20, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{608., {317., 326.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.753154978542222*^9, 3.7531550385037193`*^9, 3.7531782351192417`*^9, 
   3.7531794917803497`*^9, 3.753180760301058*^9, 3.75318086039358*^9, 
   3.753181211858686*^9, 3.753181263513571*^9, 3.753183970054351*^9, 
   3.753185038294992*^9, 3.753185092721366*^9, 3.753185176720893*^9, 
   3.753185707524302*^9, 3.753185987001801*^9, 3.75318603609147*^9, 
   3.7531924799993896`*^9, 3.7531952317535133`*^9, 3.753195298043434*^9, 
   3.753202818348139*^9, 3.7532041818903913`*^9, {3.7532055946554956`*^9, 
   3.753205631433608*^9}, 3.7532057251850023`*^9, 3.753207325424111*^9, 
   3.753209787085759*^9, {3.753215388854748*^9, 3.753215405575436*^9}, {
   3.7532154775533657`*^9, 3.7532155196232157`*^9}, 3.753215552205412*^9, 
   3.753215590390336*^9, 3.753215661960959*^9, 3.753216439288312*^9, 
   3.753216559255527*^9, 3.7532166146128273`*^9, 3.7532166555841846`*^9, 
   3.753216812307054*^9, 3.753216898500348*^9, 3.753217145200623*^9, {
   3.753217645193348*^9, 3.753217653697151*^9}, 3.753217698698802*^9, 
   3.753218383279171*^9, 3.7532184183841963`*^9, 3.753219009252784*^9, 
   3.75321955300762*^9, 3.75321995105064*^9, {3.753220037368121*^9, 
   3.753220062920875*^9}, {3.753220212983838*^9, 3.753220240565984*^9}, 
   3.75322028037683*^9, 3.7532203176949053`*^9, 3.753220496313692*^9, 
   3.753220572741013*^9, 3.753220779339642*^9, 3.753221015432218*^9, 
   3.753221134343849*^9, 3.7532212873738956`*^9, 3.753221396466215*^9, 
   3.7532214410107327`*^9, 3.753221490023933*^9, 3.75322153605573*^9, 
   3.75322158234412*^9},
 CellLabel->
  "Out[2316]=",ExpressionUUID->"fccfb80e-bf48-4d0f-b8b8-d22ba23820ec"]
}, Open  ]]
},
WindowSize->{1362, 845},
WindowMargins->{{98, Automatic}, {35, Automatic}},
Magnification->1.5,
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1248, 21, 74, "Input",ExpressionUUID->"266e0836-dc31-4677-a6fd-4e7ecb2b8656"],
Cell[1809, 43, 16396, 432, 3097, "Input",ExpressionUUID->"1bdb90c2-7289-45c2-a579-eed7e16aa45d"],
Cell[18208, 477, 1624, 44, 207, "Input",ExpressionUUID->"f2e720ad-0af8-4773-bcbe-8a67089ff5e6"],
Cell[19835, 523, 2382, 40, 139, "Input",ExpressionUUID->"86e25054-c6c5-43bc-b27c-ddc5bfdc0a87"],
Cell[22220, 565, 5571, 168, 543, "Input",ExpressionUUID->"475c42ee-2785-4311-afba-ef5380bb1e53"],
Cell[27794, 735, 9745, 177, 424, "Input",ExpressionUUID->"36793f65-e109-48c5-bb5f-cea958de743e"],
Cell[37542, 914, 2285, 36, 105, "Input",ExpressionUUID->"5a24985b-711d-4894-ad33-7682092f3681"],
Cell[39830, 952, 5984, 117, 377, "Input",ExpressionUUID->"c77ea872-647e-4514-a418-f5dc43c7ff34"],
Cell[45817, 1071, 3539, 77, 479, "Input",ExpressionUUID->"c1a43f81-3db8-4f78-9104-411f67c585f2"],
Cell[CellGroupData[{
Cell[49381, 1152, 1966, 41, 207, "Input",ExpressionUUID->"7397f069-2f50-47dd-97e4-bc64fd0d50b9"],
Cell[51350, 1195, 192707, 3288, 398, "Output",ExpressionUUID->"951b0ac7-8ee2-46a1-81a6-5a002c3fbbb1"]
}, Open  ]],
Cell[244072, 4486, 4008, 90, 318, "Input",ExpressionUUID->"72acf4bf-c920-417b-a46c-c6e641d76c27"],
Cell[CellGroupData[{
Cell[248105, 4580, 4169, 92, 275, "Input",ExpressionUUID->"a5e5e57a-98e4-4a87-bc00-5d27621ac9a6"],
Cell[252277, 4674, 3615, 65, 694, "Output",ExpressionUUID->"fccfb80e-bf48-4d0f-b8b8-d22ba23820ec"]
}, Open  ]]
}
]
*)


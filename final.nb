(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    290424,       5334]
NotebookOptionsPosition[    288576,       5301]
NotebookOutlinePosition[    288931,       5317]
CellTagsIndexPosition[    288888,       5314]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 StyleBox[
  RowBox[{"(*", "Final", "*)"}],
  FontSize->28,
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]]], "Input",
 CellChangeTimes->{{3.752856441079928*^9, 3.752856478002857*^9}, {
   3.752856614876956*^9, 3.752856740407585*^9}, {3.752857349635654*^9, 
   3.7528573641489067`*^9}, {3.752858198794065*^9, 3.7528581999292603`*^9}, 
   3.7528918403995743`*^9, {3.7528961817048273`*^9, 3.7528962191940603`*^9}, {
   3.752937212844871*^9, 3.752937224444496*^9}, {3.75294339441866*^9, 
   3.7529434180825357`*^9}, {3.752943559013653*^9, 3.752943561469325*^9}, {
   3.752943661738035*^9, 3.752943707796466*^9}, {3.7529439315733147`*^9, 
   3.752943937463044*^9}, {3.752945087432394*^9, 3.752945160930595*^9}, {
   3.752945280056671*^9, 3.752945287073347*^9}, {3.75294553242769*^9, 
   3.752945629895801*^9}, {3.752945979948072*^9, 3.752946001821425*^9}, {
   3.753053373675827*^9, 3.7530534089667683`*^9}, {3.753057277402*^9, 
   3.753057299216235*^9}, {3.753058012958432*^9, 3.753058044931511*^9}, {
   3.7530580860523443`*^9, 3.753058094410119*^9}, {3.753058323290696*^9, 
   3.753058324836581*^9}, {3.753119695290847*^9, 3.753119700840918*^9}},
 CellLabel->
  "In[2436]:=",ExpressionUUID->"266e0836-dc31-4677-a6fd-4e7ecb2b8656"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", " ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"vars", " ", "--"}], "--"}], "--"}], "--"}], "--"}],
               "--"}], "--"}], "--"}]}]}]}]}]}]}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"nVars", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetKE", "[", 
      RowBox[{"Gb_", ",", "Vb_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "2"}], "*", 
        RowBox[{
         RowBox[{"Transpose", "[", "Vb", "]"}], ".", "Gb", ".", "Vb"}]}], 
       ")"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"GetPE", "[", 
      RowBox[{"m_", ",", "T_"}], "]"}], ":=", 
     RowBox[{"m", "*", "g", "*", 
      RowBox[{"T", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "4"}], "]"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"qs", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"qsvars", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"qsInit", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dqsInit", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", " ", 
           RowBox[{
            RowBox[{"objects", " ", "--"}], "--"}]}]}]}]}]}]}], 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", "-"}]}]}]}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nObjects", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"objNames", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "Properties", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"masses", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"inertias", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lens", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g", "=", "5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Transformation", " ", "matrices"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ts", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pFronts", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pBacks", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Vertices", " ", "for", " ", "impact", " ", "detection"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"impObjVertexs", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"impObjVertexGroupIDs", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Edges", " ", "for", " ", "impact", " ", "detection"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"impObjEdges", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"impObjEdgeGroupIDs", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Funcs", " ", "for", " ", "creating", " ", "objects"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CreateLink", "[", "linkgeometry_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"l", ",", "T", ",", "pFront", ",", "pBack"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"nObjects", "=", 
         RowBox[{"nObjects", "+", "1"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"p1x", ",", "p1y"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"p2x", ",", "p2y"}], "}"}]}], "}"}], "=", 
         "linkgeometry"}], ";", "\[IndentingNewLine]", 
        RowBox[{"l", "=", 
         RowBox[{"CalcDist", "[", 
          RowBox[{"p1x", ",", "p1y", ",", "p2x", ",", "p2y"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"pushLensMassInertia", "[", "l", "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", "Vars", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"nDOF", "=", "3"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"objqs", ",", "objqsvars"}], "}"}], "=", 
         RowBox[{"pushVars", "[", "nDOF", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"xvar", "=", 
         RowBox[{"objqs", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"yvar", "=", 
         RowBox[{"objqs", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"\[Theta]var", "=", 
         RowBox[{"objqs", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "T", ",", "pFront", ",", "pBack", ",", "TFront", ",", "TBack"}], 
          "}"}], "=", 
         RowBox[{"CalcAndPushT", "[", 
          RowBox[{"xvar", ",", "yvar", ",", "\[Theta]var", ",", "l"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"objqsinit", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"p1x", "+", "p2x"}], ")"}], "/", "2"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"p1y", "+", "p2y"}], ")"}], "/", "2"}], ",", 
           RowBox[{"myArcTan", "[", 
            RowBox[{"p1x", ",", "p1y", ",", "p2x", ",", "p2y"}], "]"}]}], 
          "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"qsInit", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"qsInit", ",", "objqsinit"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dqsInit", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"dqsInit", ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"RandomReal", "[", "]"}], "*", "initRandVelocity"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "nDOF"}], "}"}]}], "]"}]}], "]"}]}],
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Push", " ", "vertices", " ", "and", " ", "edge", " ", "for", " ", 
          "impact"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"PushVertex", "[", 
         RowBox[{"pFront", ",", "nthGroup"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"PushVertex", "[", 
         RowBox[{"pBack", ",", "nthGroup"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"PushEdge", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"pFront", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"1", ";;", "2"}], ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"pBack", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"1", ";;", "2"}], ",", "1"}], "]"}], "]"}]}], "}"}], 
          ",", "nthGroup"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
         "T", ",", "pFront", ",", "pBack", ",", "TFront", ",", "TBack"}], 
         "}"}]}]}], 
      RowBox[{"(*", "Return", "*)"}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"AppendLink", "[", 
      RowBox[{"T0_", ",", "\[Theta]0_", ",", "l_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"T", ",", "pFront", ",", "pBack", ",", "x", ",", "y"}], "}"}],
        ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"nObjects", "=", 
         RowBox[{"nObjects", "+", "1"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"pushLensMassInertia", "[", "l", "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", "Vars", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"nDOF", "=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"objqs", ",", "objqsvars"}], "}"}], "=", 
         RowBox[{"pushVars", "[", "nDOF", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"\[Theta]var", "=", 
         RowBox[{"objqs", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"T", "=", 
         RowBox[{"FullSimplify", "[", 
          RowBox[{
           RowBox[{"T0", ".", 
            RowBox[{"Rotz4", "[", "\[Theta]var", "]"}], ".", 
            RowBox[{"Trans4", "[", 
             RowBox[{
              RowBox[{"l", "/", "2"}], ",", "0"}], "]"}]}], ",", 
           RowBox[{"qs", "\[Element]", "Reals"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"pFront", ",", "pBack", ",", "TFront", ",", "TBack"}], 
          "}"}], "=", 
         RowBox[{"pushPEnds", "[", 
          RowBox[{"T", ",", "l"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"pushT", "[", "T", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"qsInit", "=", 
         RowBox[{"Append", "[", 
          RowBox[{"qsInit", ",", "\[Theta]0"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dqsInit", "=", 
         RowBox[{"Append", "[", 
          RowBox[{"dqsInit", ",", 
           RowBox[{
            RowBox[{"RandomReal", "[", "]"}], "*", "initRandVelocity"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", "Impact", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"PushVertex", "[", 
         RowBox[{"pFront", ",", "nthGroup"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"PushEdge", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"pFront", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"1", ";;", "2"}], ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"pBack", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"1", ";;", "2"}], ",", "1"}], "]"}], "]"}]}], "}"}], 
          ",", "nthGroup"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
         "T", ",", "pFront", ",", "pBack", ",", "TFront", ",", "TBack"}], 
         "}"}]}]}], 
      RowBox[{"(*", "Return", "*)"}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CreateWall", "[", "linkgeometry_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"l", ",", "T", ",", "pFront", ",", "pBack"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"nObjects", "=", 
         RowBox[{"nObjects", "+", "1"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"p1x", ",", "p1y"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"p2x", ",", "p2y"}], "}"}]}], "}"}], "=", 
         "linkgeometry"}], ";", "\[IndentingNewLine]", 
        RowBox[{"l", "=", 
         RowBox[{"CalcDist", "[", 
          RowBox[{"p1x", ",", "p1y", ",", "p2x", ",", "p2y"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"pushLensMassInertia", "[", "l", "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"x", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"p1x", "+", "p2x"}], ")"}], "/", "2"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"y", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"p1y", "+", "p2y"}], ")"}], "/", "2"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Theta]", "=", 
         RowBox[{"myArcTan", "[", 
          RowBox[{"p1x", ",", "p1y", ",", "p2x", ",", "p2y"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "T", ",", "pFront", ",", "pBack", ",", "TFront", ",", "TBack"}], 
          "}"}], "=", 
         RowBox[{"CalcAndPushT", "[", 
          RowBox[{"x", ",", "y", ",", "\[Theta]", ",", "l"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"PushVertex", "[", 
         RowBox[{"pFront", ",", "nthGroup"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"PushVertex", "[", 
         RowBox[{"pBack", ",", "nthGroup"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"PushEdge", "[", 
         RowBox[{"linkgeometry", ",", "nthGroup"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
         "T", ",", "pFront", ",", "pBack", ",", "TFront", ",", "TBack"}], 
         "}"}]}]}], 
      RowBox[{"(*", "Return", "*)"}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}], ";", 
     RowBox[{
      RowBox[{
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", " ", "Create"}]}]}]}]}]}]}]}]}]}]}]}]}], " ",
        "objects", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"here", " ", "--"}], "--"}], "--"}], "--"}], 
                "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
         "--"}], "--"}]}], "-"}], ";", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CreateObjects", "[", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.753123308026244*^9, 3.75312331483188*^9}, 
   3.753123349784988*^9, {3.75312342183265*^9, 3.753123446292471*^9}, {
   3.75312364850945*^9, 3.753123689236961*^9}, {3.753123767898006*^9, 
   3.7531238344427834`*^9}, {3.753124143544293*^9, 3.753124543600301*^9}, {
   3.753124575884509*^9, 3.753124583783622*^9}, {3.753124722765585*^9, 
   3.753124724272087*^9}, {3.753125150356867*^9, 3.753125150953199*^9}, {
   3.75312524655254*^9, 3.7531253037661867`*^9}, 3.753126774188662*^9, {
   3.7531269901910887`*^9, 3.753126993347027*^9}, {3.753181139167458*^9, 
   3.753181147722603*^9}, {3.7531814758907633`*^9, 3.7531815074009867`*^9}, {
   3.753181545353921*^9, 3.753181588648815*^9}, 3.7531816959830513`*^9, {
   3.753181732117378*^9, 3.753181732992093*^9}, {3.753181930815845*^9, 
   3.753181951044694*^9}, {3.753182021538082*^9, 3.7531820323177233`*^9}, 
   3.753182082245741*^9, {3.753185999782179*^9, 3.753186008085741*^9}, 
   3.753220930473857*^9, {3.753221252685128*^9, 3.753221268357483*^9}, {
   3.753221526146224*^9, 3.753221526231914*^9}, 3.753229170127367*^9, {
   3.753229362428605*^9, 3.7532293686569853`*^9}, {3.753229439496407*^9, 
   3.7532295337180347`*^9}, {3.753229572850483*^9, 3.753229581534211*^9}, {
   3.7532296136889877`*^9, 3.753229623639716*^9}, {3.7532298450383577`*^9, 
   3.753229845769944*^9}, {3.753230003924512*^9, 3.753230007287064*^9}, 
   3.753230084540305*^9, {3.753230155883459*^9, 3.753230156936411*^9}, 
   3.753231364700656*^9, {3.753231486864502*^9, 3.753231499715602*^9}, {
   3.753232247724169*^9, 3.753232250906152*^9}, {3.7532331766798763`*^9, 
   3.753233206712079*^9}, {3.7532332383425198`*^9, 3.753233602825778*^9}, {
   3.7532338437327967`*^9, 3.7532339207282*^9}, {3.753233957705464*^9, 
   3.753233999025271*^9}, {3.7532340291996803`*^9, 3.753234054793764*^9}, {
   3.753234450639123*^9, 3.753234551810025*^9}, {3.7532345986006927`*^9, 
   3.7532346241285753`*^9}, {3.75323468074903*^9, 3.7532347992045527`*^9}, {
   3.7532349148247213`*^9, 3.7532349302837343`*^9}, {3.753235045909966*^9, 
   3.7532350619655743`*^9}, {3.753235151640246*^9, 3.753235202104697*^9}, {
   3.7532353429321203`*^9, 3.753235397377254*^9}, {3.7532355112781897`*^9, 
   3.7532355141959143`*^9}, {3.7532355775146723`*^9, 3.753235581123382*^9}, {
   3.75323600921912*^9, 3.753236010656575*^9}, {3.7532360936181097`*^9, 
   3.753236094954561*^9}, {3.753236382689273*^9, 3.753236385093182*^9}, {
   3.753236431480826*^9, 3.7532364438095493`*^9}, {3.753243014594309*^9, 
   3.753243026446066*^9}, {3.753243384320436*^9, 3.753243417972159*^9}, {
   3.75324349840215*^9, 3.753243503584292*^9}, {3.753243885713874*^9, 
   3.75324392227852*^9}, {3.75324406834017*^9, 3.75324409377481*^9}, {
   3.7532441406446123`*^9, 3.753244154632832*^9}, {3.7532443097048388`*^9, 
   3.753244310502574*^9}, {3.753244466753304*^9, 3.7532444754963837`*^9}, {
   3.753273388638075*^9, 3.753273410329701*^9}, {3.753273442547168*^9, 
   3.753273446675234*^9}, {3.753273723743656*^9, 3.753273733457156*^9}, {
   3.753277074003251*^9, 3.753277103268816*^9}, {3.7532774261347647`*^9, 
   3.753277468679015*^9}, 3.75327753441044*^9, {3.753277567501059*^9, 
   3.753277567607766*^9}, {3.7532779406981792`*^9, 3.753277978087141*^9}, {
   3.7532780143335953`*^9, 3.753278109518197*^9}, {3.75327814669586*^9, 
   3.7532781799185677`*^9}},
 CellLabel->
  "In[2437]:=",ExpressionUUID->"1bdb90c2-7289-45c2-a579-eed7e16aa45d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Remove", " ", "duplicated", " ", "vertices"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"n", "=", 
     RowBox[{"Length", "[", "impObjVertexs", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmpimpObjVertexs", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmpimpObjVertexGroupIDs", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "\[LessEqual]", "n"}], ",", 
      RowBox[{"i", "=", 
       RowBox[{"i", "+", "1"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ifDup", "=", "False"}], ";", "\[IndentingNewLine]", 
       RowBox[{"x0", "=", 
        RowBox[{"impObjVertexs", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1", ",", "1"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"y0", "=", 
        RowBox[{"impObjVertexs", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2", ",", "1"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "\[LessEqual]", 
          RowBox[{"Length", "[", "tmpimpObjVertexs", "]"}]}], ",", 
         RowBox[{"j", "=", 
          RowBox[{"j", "+", "1"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"tmpimpObjVertexs", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "1", ",", "1"}], "]"}], "]"}], "\[Equal]", 
             "x0"}], " ", "&&", 
            RowBox[{
             RowBox[{"tmpimpObjVertexs", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "2", ",", "1"}], "]"}], "]"}], "\[Equal]", 
             "y0"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ifDup", "=", "True"}], ";", "\[IndentingNewLine]", 
            RowBox[{"Break", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ifDup", "\[Equal]", "False"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"tmpimpObjVertexs", ",", 
            RowBox[{"impObjVertexs", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"tmpimpObjVertexGroupIDs", ",", 
            RowBox[{"impObjVertexGroupIDs", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"impObjVertexs", "=", "tmpimpObjVertexs"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"impObjVertexGroupIDs", "=", "tmpimpObjVertexGroupIDs"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.753230302642734*^9, 3.753230652162889*^9}, {
   3.753230707954612*^9, 3.753230722441889*^9}, {3.753230825450135*^9, 
   3.7532308263875732`*^9}, {3.753230879297345*^9, 3.753230918677925*^9}, {
   3.753231472970462*^9, 3.753231478022345*^9}, {3.753231510728491*^9, 
   3.753231531378201*^9}, 3.7532354372135057`*^9},
 CellLabel->
  "In[2461]:=",ExpressionUUID->"c44b64ef-d677-445c-8a1b-b41ad0a02895"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Prepare", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dqs", "=", 
     RowBox[{"D", "[", 
      RowBox[{"qs", ",", "t"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ddqs", "=", 
     RowBox[{"D", "[", 
      RowBox[{"dqs", ",", "t"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.753044835778154*^9, 3.753044853243857*^9}, {
   3.753044885735341*^9, 3.753045087762558*^9}, {3.753045119526952*^9, 
   3.7530451980018806`*^9}, {3.753045233241619*^9, 3.753045330223648*^9}, {
   3.753045375327367*^9, 3.753045428238071*^9}, {3.753045470005053*^9, 
   3.753045488477352*^9}, {3.753045548631014*^9, 3.7530455872391768`*^9}, {
   3.7530461846478233`*^9, 3.753046189098051*^9}, {3.753049997171638*^9, 
   3.7530500196938667`*^9}, {3.753050066769712*^9, 3.7530500913759336`*^9}, {
   3.75305016165658*^9, 3.75305017743246*^9}, {3.75305020772898*^9, 
   3.753050237021182*^9}, {3.753050294237818*^9, 3.753050430715755*^9}, {
   3.753050508246562*^9, 3.753050561137941*^9}, {3.753050973890109*^9, 
   3.7530509843757143`*^9}, {3.753051073460733*^9, 3.753051081270372*^9}, {
   3.7530513907609*^9, 3.753051417218584*^9}, {3.75305148489613*^9, 
   3.7530515464564962`*^9}, {3.7530525178993607`*^9, 3.753052521284204*^9}, {
   3.753052551473435*^9, 3.753052557247499*^9}, 3.753052592897394*^9, {
   3.7530526901642733`*^9, 3.753052695814392*^9}, {3.753052738897628*^9, 
   3.753052845859419*^9}, {3.753053011553212*^9, 3.753053015960785*^9}, {
   3.7530530507527637`*^9, 3.753053061062314*^9}, {3.753053437625102*^9, 
   3.753053445291786*^9}, {3.753053652581946*^9, 3.75305365795931*^9}, {
   3.753054130043837*^9, 3.753054146860914*^9}, 3.753054369689734*^9, {
   3.7530552140086317`*^9, 3.753055214948401*^9}, {3.753055568100189*^9, 
   3.753055571428176*^9}, {3.7531199350230217`*^9, 3.753119968194673*^9}, {
   3.753120012736985*^9, 3.753120113773282*^9}, {3.753120155403681*^9, 
   3.753120177087166*^9}, 3.753120297603888*^9, {3.753120335222054*^9, 
   3.7531203707053003`*^9}, 3.7531236592510357`*^9, 3.753124567923814*^9, {
   3.753124696657449*^9, 3.753124700234228*^9}, {3.7531251550577517`*^9, 
   3.753125161024935*^9}, {3.753126782565262*^9, 3.753126804502275*^9}, 
   3.7531808516978188`*^9},
 CellLabel->
  "In[2467]:=",ExpressionUUID->"86e25054-c6c5-43bc-b27c-ddc5bfdc0a87"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"-", " ", "Left"}]}]}]}]}]}]}]}], " ", "side", " ", "of", 
     " ", "EL", " ", 
     RowBox[{
      RowBox[{"eqs", " ", "--"}], "--"}]}], "-", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", "-"}]}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Body", " ", "generalized", " ", "mass"}], ",", " ", 
    RowBox[{
    "composed", " ", "of", " ", "Inertia", " ", "Tensor", " ", "and", " ", 
     "Mass", " ", "Matrix"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"getGb", "[", 
     RowBox[{"j_", ",", "m_"}], "]"}], ":=", 
    RowBox[{"ArrayFlatten", "[", 
     RowBox[{"(", GridBox[{
        {
         RowBox[{"DiagonalMatrix", "[", 
          RowBox[{"{", 
           RowBox[{"j", ",", "j", ",", "j"}], "}"}], "]"}], 
         RowBox[{"Zeros", "[", 
          RowBox[{"3", ",", "3"}], "]"}]},
        {
         RowBox[{"Zeros", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         RowBox[{"DiagonalMatrix", "[", 
          RowBox[{"{", 
           RowBox[{"m", ",", "m", ",", "m"}], "}"}], "]"}]}
       }], ")"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Gbs", "=", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"getGb", "[", 
         RowBox[{
          RowBox[{"inertias", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"masses", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nObjects"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Body", " ", "screw", " ", "axis"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Vbs", "=", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"GenUnhat", "[", 
         RowBox[{
          RowBox[{"InvT", "[", 
           RowBox[{"Ts", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], ".", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"Ts", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "t"}], "]"}]}], "]"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nObjects"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Lagrange", " ", 
     RowBox[{"Equations", ":", " ", 
      RowBox[{"Kinetic", " ", "and", " ", "Potential", " ", "Energy"}]}]}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetKE", "[", 
      RowBox[{"Gb_", ",", "Vb_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "2"}], "*", 
        RowBox[{
         RowBox[{"Transpose", "[", "Vb", "]"}], ".", "Gb", ".", "Vb"}]}], 
       ")"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"GetPE", "[", 
      RowBox[{"m_", ",", "T_"}], "]"}], ":=", 
     RowBox[{"m", "*", "g", "*", 
      RowBox[{"T", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "4"}], "]"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"KEs", "=", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"GetKE", "[", 
         RowBox[{
          RowBox[{"Gbs", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"Vbs", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nObjects"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PEs", "=", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"GetPE", "[", 
         RowBox[{
          RowBox[{"masses", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"Ts", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nObjects"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Lag", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"KEs", ",", 
          RowBox[{"-", "PEs"}]}], "]"}], "]"}], ",", 
       RowBox[{"qs", "\[Element]", "Reals"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Left", " ", "side", " ", "of", " ", "Euler"}], "-", 
     RowBox[{"Lagrange", " ", "Equations"}]}], "*)"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"ELeqsLeft", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"Lag", ",", 
            RowBox[{"{", "dqs", "}"}]}], "]"}], ",", "t"}], "]"}], "-", 
        RowBox[{"D", "[", 
         RowBox[{"Lag", ",", 
          RowBox[{"{", "qs", "}"}]}], "]"}]}], ",", 
       RowBox[{"qs", "\[Element]", "Reals"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.753057076566051*^9, 3.753057082906145*^9}, {
  3.753216468304121*^9, 3.753216494514337*^9}},
 CellLabel->
  "In[2469]:=",ExpressionUUID->"475c42ee-2785-4311-afba-ef5380bb1e53"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"-", " ", "Right"}]}]}]}]}]}]}]}], " ", "side", " ", "of",
      " ", "EL", " ", 
     RowBox[{
      RowBox[{"eqs", " ", "--"}], "--"}]}], "-", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", "-"}]}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "Constraints", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"conslink1P1x", "=", 
     RowBox[{
      RowBox[{"p1Ends", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{"y", "=", "0"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"conslink1P1y", "=", 
     RowBox[{
      RowBox[{"p1Ends", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";"}], 
   RowBox[{"(*", " ", 
    RowBox[{"y", "=", "0"}], " ", "*)"}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"nCons", "=", 
     RowBox[{"Length", "[", "cons", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"nCons", ">", "0"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Lambda]s", "=", 
         SuperscriptBox[
          RowBox[{"{", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Symbol", "[", 
              RowBox[{"\"\<$\[Lambda]\>\"", "<>", 
               RowBox[{"ToString", "@", "i"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "nCons"}], "}"}]}], "]"}], "}"}], 
          "\[Transpose]"]}], ";", "\[IndentingNewLine]", 
        RowBox[{"consgrad", "=", 
         SuperscriptBox[
          RowBox[{"Grad", "[", 
           RowBox[{"cons", ",", "qs"}], "]"}], "\[Transpose]"]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Grad", "[", 
            RowBox[{"2", ",", "5"}], "]"}], "\[Rule]", 
           RowBox[{"Mat", 
            RowBox[{"(", 
             RowBox[{"2", ",", "5"}], ")"}]}]}], ",", 
          RowBox[{"Transpose", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{"5", ",", "2"}], ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"consddt", "=", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{"cons", ",", "t"}], "]"}], ",", "t"}], "]"}], ",", 
           RowBox[{"qs", "\[Element]", "Reals"}]}], "]"}]}], ";"}], ")"}]}], 
     "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7492477302784853`*^9, 3.749247744886393*^9}, {
   3.7492477952349367`*^9, 3.749248083936611*^9}, {3.749248115745202*^9, 
   3.749248163943199*^9}, {3.749248289782309*^9, 3.749248327237639*^9}, {
   3.7492488740168123`*^9, 3.74924890110975*^9}, {3.749249013872342*^9, 
   3.749249016428877*^9}, {3.749249715340942*^9, 3.749249725558988*^9}, {
   3.7492533635649853`*^9, 3.7492533692042627`*^9}, {3.7493304687035713`*^9, 
   3.749330526784474*^9}, {3.749583890558482*^9, 3.749584019739238*^9}, {
   3.749584051620141*^9, 3.749584289697188*^9}, {3.7495848842278976`*^9, 
   3.749584884428755*^9}, {3.7495854188247633`*^9, 3.749585430018347*^9}, {
   3.749586473817123*^9, 3.7495865299870358`*^9}, {3.74958656315245*^9, 
   3.749586572384222*^9}, {3.749586714939041*^9, 3.7495867151800013`*^9}, 
   3.749586749984033*^9, 3.749586785597528*^9, {3.7495868834456167`*^9, 
   3.749586991001513*^9}, {3.749587032904327*^9, 3.749587066122258*^9}, {
   3.749587120426735*^9, 3.749587127859918*^9}, {3.7495872147347593`*^9, 
   3.749587215589427*^9}, {3.749587264417486*^9, 3.74958727343836*^9}, {
   3.749587370691258*^9, 3.749587371064513*^9}, {3.7495874282297573`*^9, 
   3.74958742881262*^9}, {3.7495874807284613`*^9, 3.749587485622819*^9}, {
   3.749587551022369*^9, 3.749587551318131*^9}, {3.749587760131122*^9, 
   3.7495877604471684`*^9}, {3.749763678759679*^9, 3.749763690381565*^9}, {
   3.749763881161853*^9, 3.7497639007406597`*^9}, {3.749763943256238*^9, 
   3.749763959686335*^9}, {3.7497714188908377`*^9, 3.749771439202767*^9}, {
   3.74982921350916*^9, 3.749829221629135*^9}, {3.749829707066264*^9, 
   3.7498297196310368`*^9}, 3.749918529472308*^9, {3.7499191365465508`*^9, 
   3.749919137446918*^9}, {3.750475961782165*^9, 3.750475970348247*^9}, {
   3.750477108441189*^9, 3.7504771618505907`*^9}, {3.750477465968931*^9, 
   3.750477475112364*^9}, {3.7505607598932047`*^9, 3.750560763098124*^9}, {
   3.751810937584548*^9, 3.7518109533751783`*^9}, {3.751811489773809*^9, 
   3.751811561950897*^9}, {3.7518118024222927`*^9, 3.751811844782062*^9}, {
   3.7518125488639*^9, 3.751812600723185*^9}, {3.7518126374739857`*^9, 
   3.751812703969184*^9}, {3.751812934543771*^9, 3.751812934692981*^9}, {
   3.751813015430941*^9, 3.751813042664275*^9}, {3.7518148298544483`*^9, 
   3.751814830122332*^9}, {3.751819111462657*^9, 3.751819113129416*^9}, {
   3.751831724344057*^9, 3.751831729306036*^9}, {3.7518505664170322`*^9, 
   3.751850579768682*^9}, 3.751850822810646*^9, {3.752893403380947*^9, 
   3.752893538607489*^9}, {3.7528935716914377`*^9, 3.752893587584464*^9}, {
   3.7528936189617023`*^9, 3.752893619093384*^9}, {3.752894128353402*^9, 
   3.752894136362237*^9}, {3.752894213154997*^9, 3.752894337795062*^9}, {
   3.752894402898535*^9, 3.752894483877335*^9}, {3.752894591537696*^9, 
   3.75289459894217*^9}, {3.752894632570223*^9, 3.752894639098567*^9}, {
   3.752894698845552*^9, 3.7528947752361603`*^9}, {3.7528948187314672`*^9, 
   3.752894838783592*^9}, {3.752895078283527*^9, 3.752895129371352*^9}, {
   3.752895243562286*^9, 3.752895256194869*^9}, {3.752897294773044*^9, 
   3.752897296890174*^9}, {3.752937247193342*^9, 3.752937250189735*^9}, 
   3.752937448344542*^9, {3.752950364918768*^9, 3.752950369305798*^9}, {
   3.752950833820903*^9, 3.752950835798113*^9}, {3.752950973781577*^9, 
   3.7529509881214943`*^9}, {3.752951105096426*^9, 3.752951179066635*^9}, {
   3.7529512142978354`*^9, 3.752951214388245*^9}, {3.752952741387607*^9, 
   3.752952745694968*^9}, {3.7529532052093287`*^9, 3.75295320736707*^9}, {
   3.752953353033779*^9, 3.752953360770131*^9}, {3.752953681496983*^9, 
   3.7529536829283*^9}, {3.752953960931753*^9, 3.752953972666893*^9}, {
   3.752954111806077*^9, 3.752954113632807*^9}, {3.752955026392874*^9, 
   3.752955049346692*^9}, {3.752955090391477*^9, 3.752955106841086*^9}, {
   3.752955186874584*^9, 3.752955226042705*^9}, {3.7529552782802153`*^9, 
   3.752955294114819*^9}, {3.752955379795632*^9, 3.75295539587084*^9}, {
   3.7529555205907393`*^9, 3.75295552203209*^9}, {3.752955562633211*^9, 
   3.752955565238083*^9}, {3.7529556336218853`*^9, 3.752955645222836*^9}, {
   3.753029127696501*^9, 3.7530291278759823`*^9}, {3.753029554055846*^9, 
   3.7530295544868593`*^9}, {3.7530299159297247`*^9, 3.753029945305748*^9}, {
   3.753030337167046*^9, 3.753030341470745*^9}, {3.753030451864044*^9, 
   3.753030458976904*^9}, {3.7530305340929613`*^9, 3.7530305509442*^9}, {
   3.7530308841909227`*^9, 3.7530308892833233`*^9}, {3.753030989011537*^9, 
   3.753030989197073*^9}, {3.753031776823711*^9, 3.7530317825098543`*^9}, {
   3.753031953645413*^9, 3.753031954165752*^9}, {3.753032417316751*^9, 
   3.753032431531197*^9}, {3.753032550301746*^9, 3.753032550440906*^9}, 
   3.753032894012949*^9, {3.753033237646079*^9, 3.7530332394712133`*^9}, {
   3.7530334441521873`*^9, 3.753033463083189*^9}, {3.7530372815902777`*^9, 
   3.7530372984167547`*^9}, {3.753037335430272*^9, 3.7530373648487787`*^9}, {
   3.7530382587778587`*^9, 3.753038280521874*^9}, {3.753040967570965*^9, 
   3.7530409700918417`*^9}, {3.753043628573166*^9, 3.7530436748715343`*^9}, 
   3.753053594940422*^9, {3.753053631514986*^9, 3.753053638654249*^9}, {
   3.7530536805019217`*^9, 3.753053699928677*^9}, {3.753053794159343*^9, 
   3.753053799322956*^9}, {3.753053894129994*^9, 3.7530539297096453`*^9}, {
   3.7530541277264233`*^9, 3.753054128096628*^9}, {3.753054186026382*^9, 
   3.753054190219845*^9}, {3.7530547383116703`*^9, 3.753054756774881*^9}, {
   3.753054826859599*^9, 3.7530548321047087`*^9}, {3.753055015408577*^9, 
   3.7530550213596497`*^9}, {3.753055080036275*^9, 3.753055084592904*^9}, {
   3.753055147699463*^9, 3.753055149189435*^9}, {3.7530553121779003`*^9, 
   3.753055315812923*^9}, {3.7530554039610147`*^9, 3.753055436765093*^9}, {
   3.753055743461211*^9, 3.753055744460301*^9}, {3.7530564354300003`*^9, 
   3.753056435552809*^9}, {3.7530565000497723`*^9, 3.753056501589766*^9}, {
   3.7530568206576138`*^9, 3.7530568520741777`*^9}, {3.753057087019557*^9, 
   3.753057155650066*^9}, {3.7530572024493523`*^9, 3.7530572054923077`*^9}, {
   3.753059693833605*^9, 3.753059711868308*^9}, 3.753059795499174*^9, {
   3.753121300829884*^9, 3.753121346405818*^9}, 3.753121560229154*^9, {
   3.7531228074802113`*^9, 3.753122835110176*^9}, {3.753123490119872*^9, 
   3.7531234951152887`*^9}, {3.7531250036390667`*^9, 3.753125010898357*^9}, 
   3.753125055291244*^9, {3.7531262521848307`*^9, 3.753126252318206*^9}, {
   3.753144020069543*^9, 3.753144069668065*^9}, {3.753144148901133*^9, 
   3.7531441507593107`*^9}, {3.753144376786982*^9, 3.753144404676094*^9}, {
   3.753149742955834*^9, 3.753149743611452*^9}, {3.753216503226515*^9, 
   3.753216529815776*^9}, {3.753220814539081*^9, 3.753220872269261*^9}, {
   3.753243723142338*^9, 3.7532437316756353`*^9}, {3.7532439587493963`*^9, 
   3.753243958991048*^9}},
 CellLabel->
  "In[2478]:=",ExpressionUUID->"36793f65-e109-48c5-bb5f-cea958de743e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"External", " ", "forces"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"externalForces", "=", 
    RowBox[{"ConstantArray", "[", 
     RowBox[{"0", ",", "nVars"}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.752935575058041*^9, 3.752935608936143*^9}, {
   3.752935649230603*^9, 3.752935735476007*^9}, {3.752935872808815*^9, 
   3.7529358748585043`*^9}, {3.752936440428615*^9, 3.752936616693562*^9}, {
   3.752937494883192*^9, 3.752937499065572*^9}, {3.752937565566793*^9, 
   3.7529375900515947`*^9}, {3.752937659774583*^9, 3.752937686392194*^9}, {
   3.752937797550473*^9, 3.752937799130527*^9}, {3.7529378492128572`*^9, 
   3.752937849498748*^9}, 3.752944074567472*^9, {3.752945464326747*^9, 
   3.7529454644735107`*^9}, {3.75294572976758*^9, 3.752945735285262*^9}, 
   3.752953339925069*^9, 3.753038406727952*^9, {3.753038469264722*^9, 
   3.7530384741722937`*^9}, {3.753038599911993*^9, 3.753038628746689*^9}, {
   3.7530388055214367`*^9, 3.75303880617278*^9}, {3.753040014777594*^9, 
   3.753040034498519*^9}, {3.753040085829812*^9, 3.753040088202881*^9}, {
   3.7530401419061127`*^9, 3.753040166950306*^9}, {3.753040715904173*^9, 
   3.753040741916409*^9}, {3.7530408027135*^9, 3.753040804111864*^9}, {
   3.753040868309145*^9, 3.753040868700035*^9}, {3.75304392300611*^9, 
   3.753043924330562*^9}, {3.753043986681858*^9, 3.753044001242547*^9}, {
   3.7530440679101467`*^9, 3.753044068562551*^9}, {3.7530441298971453`*^9, 
   3.753044133633484*^9}, 3.753044223590147*^9, {3.753044403330976*^9, 
   3.753044423209805*^9}, {3.753044518103092*^9, 3.753044551623597*^9}, {
   3.7530445957705917`*^9, 3.753044623392209*^9}, {3.753056307701136*^9, 
   3.753056309946928*^9}, {3.753056363603239*^9, 3.753056380406089*^9}, {
   3.753056888265921*^9, 3.753056892818964*^9}, {3.753056931301005*^9, 
   3.75305693211362*^9}, {3.7530569740994663`*^9, 3.7530570011315737`*^9}, {
   3.753057040838358*^9, 3.753057040930401*^9}, {3.7530572217140703`*^9, 
   3.753057222900476*^9}, {3.753059657491391*^9, 3.753059671269434*^9}, {
   3.7530597489621468`*^9, 3.753059778215307*^9}, {3.753121287300314*^9, 
   3.753121291064706*^9}},
 CellLabel->
  "In[2480]:=",ExpressionUUID->"5a24985b-711d-4894-ad33-7682092f3681"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "Solve", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"nCons", ">", "0"}], ",", 
     RowBox[{"(*", " ", 
      RowBox[{"with", " ", "constraints"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"EulerLagEqs", "=", 
        RowBox[{
         RowBox[{"Thread", "[", 
          RowBox[{"ELeqsLeft", "==", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"consgrad", ".", "\[Lambda]s"}], "]"}], "+", 
            "externalForces"}]}], "]"}], "//", "Simplify"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"consddtEqs", "=", 
        RowBox[{"TurnToEq", "[", 
         RowBox[{"consddt", ",", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0", ",", "nCons"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"EQ", "=", 
        RowBox[{"Solve", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"EulerLagEqs", ",", "consddtEqs"}], "]"}], ",", 
          RowBox[{"Join", "[", 
           RowBox[{"ddqs", ",", 
            RowBox[{"Flatten", "[", "\[Lambda]s", "]"}]}], "]"}]}], "]"}]}]}],
       ")"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"No", " ", "constraint"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"EulerLagEqs", "=", 
       RowBox[{"Simplify", "[", 
        RowBox[{
         RowBox[{"TurnToEq", "[", 
          RowBox[{"ELeqsLeft", ",", "externalForces"}], "]"}], ",", 
         RowBox[{"qs", "\[Element]", "Reals"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"EQ", "=", 
       RowBox[{"Solve", "[", 
        RowBox[{"EulerLagEqs", ",", "ddqs"}], "]"}]}]}]}], "]"}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.752894791337954*^9, 3.752894814974654*^9}, {
   3.752894861220069*^9, 3.752894947329397*^9}, {3.7528950298906193`*^9, 
   3.75289504542104*^9}, {3.7528955370653543`*^9, 3.752895636265217*^9}, {
   3.752895721485224*^9, 3.752895767437024*^9}, {3.7528958460723*^9, 
   3.7528959107494164`*^9}, {3.7528993069704723`*^9, 3.752899353134206*^9}, {
   3.752930426490055*^9, 3.752930426910009*^9}, {3.752930465292056*^9, 
   3.752930483791888*^9}, {3.752936640855112*^9, 3.752936650163219*^9}, {
   3.7529376950299673`*^9, 3.7529376956415358`*^9}, {3.752938441192172*^9, 
   3.752938502431718*^9}, 3.752938540913069*^9, {3.7529387268581953`*^9, 
   3.752938800482499*^9}, {3.752942230879902*^9, 3.7529422362590523`*^9}, 
   3.752942793385557*^9, {3.752944065537396*^9, 3.7529440816159*^9}, {
   3.752944159773369*^9, 3.752944161585534*^9}, {3.7529454345696087`*^9, 
   3.752945470933591*^9}, 3.752945658706089*^9, {3.7529457655925827`*^9, 
   3.752945776537252*^9}, {3.752945812077977*^9, 3.7529458382584753`*^9}, {
   3.7529467425591593`*^9, 3.752946744024117*^9}, {3.752949016390222*^9, 
   3.752949025020351*^9}, {3.75294911830159*^9, 3.75294913716702*^9}, {
   3.752949420279763*^9, 3.75294942365825*^9}, {3.752949575107119*^9, 
   3.752949593302175*^9}, 3.752949669821959*^9, 3.752950387118744*^9, {
   3.752950879947427*^9, 3.75295091315872*^9}, {3.752950960562579*^9, 
   3.7529509665964518`*^9}, {3.752951039425029*^9, 3.7529510451306877`*^9}, {
   3.752952867830323*^9, 3.7529528756864767`*^9}, {3.7529529562226686`*^9, 
   3.7529529804809427`*^9}, {3.7529530170247383`*^9, 3.752953047957822*^9}, {
   3.7529531109964*^9, 3.7529531263086843`*^9}, {3.75295492293137*^9, 
   3.752954931587804*^9}, {3.753029206422752*^9, 3.7530292108843937`*^9}, {
   3.753029374045969*^9, 3.753029378352652*^9}, {3.753030992128134*^9, 
   3.7530309950536013`*^9}, {3.7530328590966063`*^9, 
   3.7530328607178926`*^9}, {3.7530328975440607`*^9, 3.753032921903851*^9}, {
   3.753037562588705*^9, 3.753037592619924*^9}, {3.753037998688301*^9, 
   3.753038001515575*^9}, {3.75303836100005*^9, 3.753038361166893*^9}, {
   3.753039353032297*^9, 3.753039360728264*^9}, {3.753040231759441*^9, 
   3.7530402427932997`*^9}, {3.7530402728058453`*^9, 3.753040273328285*^9}, {
   3.753040311185645*^9, 3.753040394112318*^9}, {3.7530407232518*^9, 
   3.753040725716365*^9}, {3.7530438202913713`*^9, 3.753043837708232*^9}, {
   3.7530438807984667`*^9, 3.7530438814270906`*^9}, {3.753043927016801*^9, 
   3.753043928689036*^9}, 3.753044019328925*^9, {3.753044162894352*^9, 
   3.7530441630360823`*^9}, {3.753044406619227*^9, 3.753044407989787*^9}, {
   3.753044523312976*^9, 3.7530445260554247`*^9}, {3.753045895309931*^9, 
   3.7530460196736927`*^9}, {3.75304607997691*^9, 3.753046097625287*^9}, 
   3.753050201230822*^9, 3.753050906794511*^9, {3.7530518883881273`*^9, 
   3.753051958587449*^9}, 3.753052592904687*^9, {3.7530539791759663`*^9, 
   3.753054065207841*^9}, {3.753054155689086*^9, 3.753054156114105*^9}, {
   3.753054851928958*^9, 3.753054928625489*^9}, {3.753054964858341*^9, 
   3.753054998643321*^9}, {3.753056069642933*^9, 3.753056094573173*^9}, {
   3.753056175591939*^9, 3.7530561795283012`*^9}, {3.753056214962792*^9, 
   3.753056245126135*^9}, {3.753056560058378*^9, 3.753056564694744*^9}, {
   3.7531262059230423`*^9, 3.753126217340637*^9}, {3.753126261051106*^9, 
   3.753126263902464*^9}, {3.753126545253314*^9, 3.753126545380416*^9}, {
   3.7531496619563932`*^9, 3.75314967267875*^9}, {3.753216537485908*^9, 
   3.753216547912981*^9}, 3.753220236700416*^9, {3.753221119705634*^9, 
   3.753221120972143*^9}},
 CellLabel->
  "In[2481]:=",ExpressionUUID->"c77ea872-647e-4514-a418-f5dc43c7ff34"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Preprae", " ", "for", " ", "NDSolve"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"timeend", "=", "30"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MAXIMPACTTIMES", "=", "200"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"impactDetectionError", "=", "0.1"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"intergrationMaxStepSize", "=", "0.01"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ifprint", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"SetUpImpacts", "[", "]"}], "\n", 
   RowBox[{
    RowBox[{"ddqSolve", "=", 
     RowBox[{"TurnToEq", "[", 
      RowBox[{"ddqs", ",", 
       RowBox[{"EQ", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", ";;", ",", "2"}], "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "NDsolve", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"end", ",", "data", ",", "bounces"}], "}"}], "=", 
     RowBox[{"BouncingBall", "[", 
      RowBox[{"qsInit", ",", "dqsInit"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7531494921779003`*^9, 3.753149514285117*^9}, {
   3.753149702606944*^9, 3.75314970631465*^9}, {3.753152082562064*^9, 
   3.753152084237487*^9}, {3.753152173114102*^9, 3.7531521761890917`*^9}, {
   3.753153698542796*^9, 3.753153728937303*^9}, {3.753180430155244*^9, 
   3.753180430325458*^9}, {3.753186443466741*^9, 3.753186444015429*^9}, {
   3.753196551902048*^9, 3.7531965636753674`*^9}, 3.75320283212358*^9, 
   3.753203832623384*^9, {3.753203876105311*^9, 3.7532038911244183`*^9}, {
   3.753205606433316*^9, 3.753205623677073*^9}, {3.753205687119479*^9, 
   3.753205707762895*^9}, {3.753208613707778*^9, 3.7532086161461363`*^9}, {
   3.753208952418535*^9, 3.753208953022675*^9}, 3.7532093316032953`*^9, 
   3.753209382630908*^9, 3.753215402870412*^9, {3.753215470798416*^9, 
   3.753215513876439*^9}, {3.7532156536977882`*^9, 3.753215654022443*^9}, {
   3.7532164320061207`*^9, 3.753216432573083*^9}, {3.7532166345734053`*^9, 
   3.753216661849039*^9}, 3.7532168064898567`*^9, {3.7532168524721603`*^9, 
   3.753216855289262*^9}, {3.753216922556574*^9, 3.753216923018261*^9}, {
   3.7532171119486723`*^9, 3.753217112030201*^9}, {3.753217343794215*^9, 
   3.753217343900848*^9}, 3.753218049273485*^9, {3.753218372254586*^9, 
   3.753218372614398*^9}, {3.753218409020591*^9, 3.753218412633719*^9}, {
   3.753218890894828*^9, 3.75321889223345*^9}, {3.753219002560783*^9, 
   3.753219003195766*^9}, {3.7532190442113037`*^9, 3.753219045586605*^9}, {
   3.753219974396143*^9, 3.753219982119536*^9}, {3.75322002938855*^9, 
   3.753220049070765*^9}, 3.7532203071577873`*^9, {3.753220551285363*^9, 
   3.753220555969096*^9}, {3.753220737412744*^9, 3.753220745781019*^9}, {
   3.753221498792116*^9, 3.753221499023834*^9}, {3.753221545512693*^9, 
   3.753221545993889*^9}, {3.753229081567236*^9, 3.753229082544656*^9}, {
   3.753230099078453*^9, 3.753230120850924*^9}, {3.753231794536392*^9, 
   3.7532317946537952`*^9}, {3.753231939504768*^9, 3.753231953319664*^9}, {
   3.753232035654278*^9, 3.7532320581490793`*^9}, 3.753232331470831*^9, {
   3.7532327862338543`*^9, 3.7532327865175037`*^9}, {3.753233033052842*^9, 
   3.753233033672441*^9}, {3.753235630415752*^9, 3.753235630742114*^9}, {
   3.75323566689323*^9, 3.753235667010459*^9}, {3.7532360592902393`*^9, 
   3.753236060627449*^9}, {3.753236130409474*^9, 3.753236135219634*^9}, {
   3.753236197009428*^9, 3.753236197218246*^9}, {3.753242840848543*^9, 
   3.753242869460338*^9}, {3.75324297831465*^9, 3.7532429827200336`*^9}, {
   3.753244191406584*^9, 3.7532441916477118`*^9}, {3.753273686764207*^9, 
   3.753273691911106*^9}, {3.7532737734531803`*^9, 3.753273774471979*^9}, {
   3.753277361191835*^9, 3.753277366449031*^9}, {3.7532775933611917`*^9, 
   3.7532776126370277`*^9}, 3.75327830414471*^9, {3.753278471729348*^9, 
   3.7532784726334457`*^9}, {3.753278841356009*^9, 3.753278843856482*^9}},
 CellLabel->
  "In[2482]:=",ExpressionUUID->"c1a43f81-3db8-4f78-9104-411f67c585f2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Plot", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"qsPlot", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"qsvars", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "/.", "data"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "nVars"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", "qsPlot", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "end"}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "qs"}], ",", "\n", "\t", 
      RowBox[{"PlotRange", "->", "Automatic"}], ",", 
      RowBox[{"Frame", "->", "True"}], ",", 
      RowBox[{"FrameLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<time\>\"", ",", "\"\<value\>\""}], "}"}]}]}], "]"}], 
    "]"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7504780748676167`*^9, 3.7504781009956417`*^9}, {
   3.750478131022161*^9, 3.75047825313091*^9}, {3.7504784047822657`*^9, 
   3.750478452345035*^9}, {3.7504785375333223`*^9, 3.7504785598367968`*^9}, {
   3.75181111432718*^9, 3.7518111194813337`*^9}, {3.751819873464633*^9, 
   3.751819904822239*^9}, {3.751835006922633*^9, 3.751835031902342*^9}, {
   3.753148727471694*^9, 3.753148811016508*^9}, {3.753148849969969*^9, 
   3.753148859135503*^9}, {3.75314889059431*^9, 3.7531488911543083`*^9}, {
   3.753149009625237*^9, 3.753149032487109*^9}, {3.753149307897419*^9, 
   3.7531493143852797`*^9}, 3.753153232631824*^9, {3.753153992829939*^9, 
   3.753154008600006*^9}, {3.7531541408024883`*^9, 3.753154216688665*^9}, {
   3.753154270230612*^9, 3.753154288334462*^9}, 3.753154548445094*^9, 
   3.753154804338324*^9, {3.7531548532640867`*^9, 3.753154897765727*^9}},
 CellLabel->
  "In[2490]:=",ExpressionUUID->"7397f069-2f50-47dd-97e4-bc64fd0d50b9"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
x8dQ0omSCZGID+99PhqRs8fQ/wALG8Wv
          "]]}, 
        Annotation[#, "Charting`Private`Tag$257955#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
FMnFU/G3hg7DQ+2FbMMU0P8Ajqan3g==
          "]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$257955#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
iOPjoSdLlMSxdIpI3DajiP8DyJ9JqQ==
          "]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$257955#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$257955#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
VrevIo1dUIS/kU3/XqTO4sL68sb/EhRhw5ys2rdds+g1TDcauK8IDuo+dqLv
2P2823lav1wRDA0t6jlfMjEgZyb7Qq0i6FR7aS+dZO+vpSTbP38VYUy+Xvbl
WiaKFHzODx1RhM5x30+q7xnYJ032r1ipBMcPdmp49dNRNgCVZWWVoK5CawOj
gK0Xqx3rfNSUYGnsTY9JDB2LwxJWi65Tgiq/u/N/tek42kjqcDdVAvdKxgmD
xRlUW/MpodBSCWpab5/Z+mcGr3ZPUQ45KsGyQc7OgCsziCZXM166K0F9kKRM
6tEZnEnRtFr2VQK/M5VhJ8xm0MXC4fnjCCVY+WBOwIhzBm/en3RkXlYCiZ/n
16sP0rCaEcdvlawEg+/MGF+/09Do+Yfjkw+VgPbxLqGSRsPjnPay5i+VYE3L
2qrmCzS85zxRmVqkBMZ5/EPb/Gj4q/BKyPAnJRDeSr7n4URDXhF18uZqJci/
Evdv3S4abjn+/m/iLyVQTVpbX7KJhqc+77/U3aYER/YoWk3o0TBHfny90YAS
+FRbH2lWpWFb4OWB2HElMF/6zHdGmoaitaqpzQwl+DcRtuuLMA0ttN5t0+VQ
hiMZoRpfeWgYGmlHCxdQhkyOjzeCOWj4qnn0YYOEMgQP2WS3L1Cx3+CSnYaS
Muz7qkjMzFFR7qoKZ7CWMsw5rglGNt7dX1JQpa8Mp3Mvmm9lv3/BdJ+7goky
FBerPPVbpuJOl0zqRnNlaBT6xd3ATUOR6NGL9ruVoaPEkcOAHc/fBybSZxyU
4df7ovRkdrz3yi89SXZThjdSIz+n1Gh4dPD3xle+yhD9bTLHVp+Gunxq338E
KcPmulq511tpOK3j5/QvUhn69KJWie6lYanV+1HeeGUI6uVt8fOgYdRJvgjS
TWWYGT9Kqj1Lw+3XDoiY31dm67/bIrrXabjy9YMs16fseIUyb195RsM/vyYM
IgqUYUHpfNlAOQ3v0rZ8zfigDKsvrYk266Whh3T8/tJvyrDToqj3PscMTjlq
htBa2bjKItLecgZLwk7xiQ8og27C7nevfWcw8t7HNP0JZaDnrLohdGMGhXsO
fvDhVAHHnqPKn4dmsHFFzu4rwiowsvy5QV6Kjhma1M7HMirgE0JTPbONjtrH
Ezl6dFWA7N2STnpGx4m41pTF9Spwsv9qeXgnHQtzyZqKhAqkF0kk/JFioPnE
Z0uH/Srw0eUhLSaegQJiIs1njqhAoXFuamslA38aOnunHFeBO0evNK7lZaJL
MP1q7XkVUKr4ott+lYlad8yVKJdU4BtDZZvBTyZ7nlzP40tWgUPR+2ZjZVn4
tq3jP60MFfjrdmhPqxsLwxZW/TR/rAIOQ5nu07tYaKZy1t3tlQo4t7vbK9KY
yA8V1IhSFditPTdkkcnEenfx2LtfVWCv0Y/GA75MvHXRRfpdrQqELyYY/X9e
HM558aSpSQWSVTXW5rP1rkYVa+NMjwokpSV9dzZm4b8Ry+/ioyoQ4V2/gj+C
ha8FbzqtpbPzeX2g+W0lC8+u7hndvawCP7WzwraVsfA/mzURvgKqUBjZ8rD2
KVu/nAoTiZNUhdjVw972t1hYm1KVlaOsCmaGP2o7Y1l4862UYbm2KowmxtZ7
hrDQ6a/71x5DVYgmJP3HfViozny1f2mLKnDuOvsiyJWtT+QWBhS3q8Kp568v
zzuwMH/zrpBNtqrwww2XL7D1e8jh23wHnVRBPOCRDP9uFppG9qcFHVMFiz+H
fySx88WVbaB7w18VjiWPKkuycc2XiA/559jnPdorkmbFwuT+mt11MargvTL+
npINCw/yyHVRElVhT/2d6uz9LFTR9gzgv6MKykPnb5DYempw5xsO8gNVaDtg
PPf0GAtf+i6nbHuhChcVKpZ1T7H1ZOJuTfciVZDfqPMoj52/za/SCyNRFTJy
3QfWJrHQorl+caJaFWKkP/cF32ehDQf3DtffqiDbp7gvNJ+Fjqs2JTe0q4Kz
WPDazeUsPGrn30oMqoJN9o+I0hYW+p9/pPF6QhUmU1RNZyZZeO5xywk1lips
HjzlO84/i9vPq0dF86hB92shWTmYxR+iZY9MBNVgwyr7W7tc2HrrsUP1lIga
bOG6d9Ekchad6xLE3eXUwLZD/bVN+Sz2uJM3yCurgWu720TwCHv/MD47/VJX
A5Lp/XtOonN4SpXxyExPDZ5piOw67DGH9LfJ1bNr1SDgmfmO0GtzGLZTb7xg
vRoMXA8q2l/G1men3TZo/KcG/Rd/9oIyW3/xzju1mauBY/Jc1n7beUzOuBV1
Y4caJC+p12temseM8ppqzn1qMLPsHbZAm0dVR8/x9/ZqsPpmHItbfwEfjy2L
n3FSA7G4nKEanwXUvZCxQc9VDQq60MLm6QLmSxs79x9VgwNxl7UvXV7A9bkN
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
tqPcxwFMPV42PDlJwXOv5emNRwbx/xXoGjk=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$257955#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
6ez95j6SKDZmn8N/Nbhec81ffLiSSHnTmR/udbh/J24rLKhIouKFlGP9b9gw
2O1jm4j3y+aqkjm/Rvz83bx49QEq+uz/NnbhHRv03pPrHrdQ0RHDXoXz79ng
uMoteH0VFREHRe/SPrBB2es60sX7S8eTi636zIb73VIWKlFUdHGl9XTEFzbc
uLzV1sqXika/uzO7vrEhakP8rlP7qKjaOS4/7QcbXJIXHWkxpiJbm+/JCgNs
EDGTvHxunoJO8aOOUUQ44JYt8XUogILq5JrVBlZxQNZT9Dg6KIH03v1y2bKa
A1OyJqcHnCRQUtx0cp4OB349CY9QtJBALmQNaa91HKiQJ17z1ZJAQ7P+0984
HDjwUqRq9U8yWtKj1NK0hQNv1OdJibvJKOiugfQ6aw6UvRNKV1vh/eW+2SLe
hgNZQSEKf/hkdO/rUcxiBwdOtcxqmyqSkVHL8/znrhzQiJixnmoTR57V3pGP
jnMgvGsyZa+NOBo83Bdg6ovzvXXYUtNIHAWu8DnU5s+BGzu7ZvrWiKPY4KO2
k0EceNpQ7+pLFkfyuiOm589wwPwcyHLHxNCt9hNcxTAOtBk/fjbXJYY0L4zq
5kdwwHtW++Rz/P1fyPNXFURzYKg0TeNctRji9U3QG2M4cGZW/83VMjH04vop
susFDlRO7+9veC2GrCxmpgfjOTA9mSZN+iKG2iaDB89e4oDxxAd9/qAY2pM7
3yl7mQPRY4vsToiIo96doR8yrnLg5T8TvzyaOJotjXjyIhXnN1xUocAWR9Fe
YoX2tzgQP9jTbm0hjmSWnLvz6zYH3varzEftEkcr/WJjyXc5YN8bv3H0rDjK
11h0JiWHA4ndLz3WJIkjRmv8ce17HGj8NRPtniWOzNYnOm55yAHbrgP1TXXi
qKmLZvWliAOXO9IHyO3iyDnpyobDjzjw8dtHmQ0D4uiH8ZL186UcWPZV2tB/
QRz5jCRrXqzggEO7qf0DOTIaT1+mqPqEA2n/Bfv/VCejszY3pIqqOdD+sSRl
OYuMJERWEDY+44CNy+a/S1zIKOlh2uj7FxxosvLMvXqBjJTcVHv21XJgjzDS
Vb6KjO5KZ7aP1uF89e7IX+4jo/LDd58veYvrI90ZegnPm/EKrdKcJg5sWFhg
yZySQG8acvM4Lbj+Q8oD8bkS6Oua+5ecP3Egv8nF6QKZgrza9SL/fOaA6rMg
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
K8cWFoSQ0rwyJKppBvsfXdeBXA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$257955#6"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"value\"", TraditionalForm], None}, {
        FormBox["\"time\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 29.999999387755103`}, {-11.238914976533797`, 
      10.477020443294233`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"$q1", "\[InvisibleApplication]", 
         RowBox[{"(", 
           TagBox["t", HoldForm], ")"}]}], 
       RowBox[{"$q2", "\[InvisibleApplication]", 
         RowBox[{"(", 
           TagBox["t", HoldForm], ")"}]}], 
       RowBox[{"$q3", "\[InvisibleApplication]", 
         RowBox[{"(", 
           TagBox["t", HoldForm], ")"}]}], 
       RowBox[{"$q4", "\[InvisibleApplication]", 
         RowBox[{"(", 
           TagBox["t", HoldForm], ")"}]}], 
       RowBox[{"$q5", "\[InvisibleApplication]", 
         RowBox[{"(", 
           TagBox["t", HoldForm], ")"}]}], 
       RowBox[{"$q6", "\[InvisibleApplication]", 
         RowBox[{"(", 
           TagBox["t", HoldForm], ")"}]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.75314903295757*^9, {3.753149303410356*^9, 3.753149314851514*^9}, 
   3.7531494991414757`*^9, 3.753149713445228*^9, 3.7531497471326437`*^9, 
   3.753153230515728*^9, {3.7531539450172367`*^9, 3.753154009117021*^9}, 
   3.753154141338092*^9, 3.753154173721539*^9, {3.753154263994341*^9, 
   3.7531542886422358`*^9}, 3.7531548981748457`*^9, 3.753155037311673*^9, 
   3.7531782350019417`*^9, 3.753179491722587*^9, 3.753180353570821*^9, 
   3.753180432688457*^9, 3.753180859122711*^9, 3.753181210881681*^9, 
   3.753181262409749*^9, 3.7531839690322533`*^9, 3.753185036649548*^9, 
   3.75318509170827*^9, 3.753185706394257*^9, 3.753185985987006*^9, 
   3.753186034612377*^9, 3.75319247639077*^9, 3.7531952290976954`*^9, 
   3.753195295184877*^9, 3.753202811712154*^9, 3.753204178669374*^9, {
   3.75320559169456*^9, 3.75320562853201*^9}, {3.753205703973422*^9, 
   3.753205722131199*^9}, 3.753207325325964*^9, 3.753208608880117*^9, 
   3.753209785469047*^9, 3.7532100159074707`*^9, {3.75321538873132*^9, 
   3.753215404433906*^9}, {3.753215474431082*^9, 3.7532155168115053`*^9}, 
   3.753215549309112*^9, 3.753215581570883*^9, 3.753215658814836*^9, 
   3.7532164356997547`*^9, {3.7532165591911497`*^9, 3.753216610452237*^9}, 
   3.753216650531507*^9, 3.7532167457409077`*^9, {3.753216800696411*^9, 
   3.7532168092302923`*^9}, {3.7532168984781027`*^9, 3.753216926256312*^9}, 
   3.7532170754322853`*^9, {3.7532171135297422`*^9, 3.7532171423259687`*^9}, {
   3.7532174918895473`*^9, 3.7532174977095737`*^9}, 3.753217641740282*^9, 
   3.753217695014258*^9, 3.753218380033153*^9, 3.7532184150832357`*^9, {
   3.753218864824335*^9, 3.7532188867350817`*^9}, 3.7532189326023283`*^9, 
   3.753219006251821*^9, 3.753219037968113*^9, 3.753219166299657*^9, {
   3.753219465025619*^9, 3.75321946672332*^9}, {3.75321952619911*^9, 
   3.753219569932683*^9}, 3.7532199469960947`*^9, {3.753219985003294*^9, 
   3.75322005914081*^9}, 3.7532202087240267`*^9, 3.7532202388876038`*^9, 
   3.7532202773905067`*^9, 3.753220313928076*^9, 3.753220496197467*^9, 
   3.753220564291873*^9, 3.753220773081428*^9, 3.753221013006098*^9, 
   3.753221131132959*^9, 3.753221284008005*^9, 3.753221394930333*^9, 
   3.7532214392401047`*^9, {3.753221487622958*^9, 3.753221533446918*^9}, 
   3.753221580610214*^9, 3.7532289830884857`*^9, {3.753229068844232*^9, 
   3.753229086663988*^9}, {3.753230093170926*^9, 3.753230123155552*^9}, 
   3.753230162018745*^9, 3.753230942931073*^9, {3.753231768549562*^9, 
   3.753231796494816*^9}, 3.7532318448757057`*^9, {3.753231919161167*^9, 
   3.753231954776904*^9}, 3.753232000221143*^9, {3.753232038542754*^9, 
   3.75323205351447*^9}, {3.753232108376281*^9, 3.753232136392989*^9}, 
   3.753232256424777*^9, 3.753232338865942*^9, 3.753232792523469*^9, 
   3.753233037314374*^9, 3.753235592573398*^9, 3.753235634323557*^9, 
   3.753235671906534*^9, 3.7532360234656763`*^9, 3.7532360662214947`*^9, 
   3.753236105424189*^9, 3.753236152347578*^9, 3.753236210804788*^9, 
   3.7532364094138117`*^9, 3.753236458208498*^9, 3.753242777813858*^9, {
   3.7532428514865093`*^9, 3.753242879478541*^9}, {3.7532429674372053`*^9, 
   3.7532429923331423`*^9}, 3.753243086868774*^9, 3.7532431336078577`*^9, 
   3.753243459633884*^9, 3.753243515125862*^9, 3.7532437405961857`*^9, 
   3.7532439656863728`*^9, 3.753244099874536*^9, 3.753244165436874*^9, 
   3.753244199211012*^9, 3.753244318825081*^9, 3.753244490484709*^9, 
   3.753244624567411*^9, 3.753273376262596*^9, 3.7532734144115667`*^9, 
   3.75327344907203*^9, {3.753273690056731*^9, 3.7532736936970243`*^9}, {
   3.753273725835204*^9, 3.75327373516016*^9}, {3.753273768795456*^9, 
   3.753273777501083*^9}, 3.7532739759116993`*^9, 3.753274219253427*^9, 
   3.753276009835319*^9, 3.7532760736982603`*^9, 3.7532761247905807`*^9, 
   3.753276434380315*^9, 3.7532769728753643`*^9, {3.753277085226988*^9, 
   3.753277106283044*^9}, 3.753277279611679*^9, 3.753277340651248*^9, 
   3.753277475019803*^9, 3.753277540860201*^9, {3.753277572154378*^9, 
   3.7532776251218987`*^9}, 3.7532779525461693`*^9, {3.753278080804516*^9, 
   3.7532781246996603`*^9}, 3.7532782025465593`*^9, 3.753278233791449*^9, 
   3.75327831019499*^9, 3.753278404858959*^9, 3.753278467978951*^9, 
   3.753278694314179*^9, 3.753278825313591*^9, 3.753278877641169*^9},
 CellLabel->
  "Out[2491]=",ExpressionUUID->"2e49763a-4a9f-4e65-885d-0939c0403f38"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotGetLinkCoords", "[", 
   RowBox[{"T_", ",", "l_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pFront", ",", "pBack"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"p0x", "=", 
      RowBox[{"T", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "4"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"p0y", "=", 
      RowBox[{"T", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "4"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"pFront", "=", 
      RowBox[{
       RowBox[{"T", ".", 
        SuperscriptBox[
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"l", "/", "2"}], ",", "0", ",", "0", ",", "1"}], "}"}], 
          "}"}], "\[Transpose]"]}], "//", "Simplify"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"pBack", "=", 
      RowBox[{
       RowBox[{"T", ".", 
        SuperscriptBox[
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "l"}], "/", "2"}], ",", "0", ",", "0", ",", "1"}], 
           "}"}], "}"}], "\[Transpose]"]}], "//", "Simplify"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"pFront", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"1", ";;", "2"}], ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"pBack", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"1", ";;", "2"}], ",", "1"}], "]"}], "]"}]}], "}"}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"links", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"plotGetLinkCoords", "[", 
      RowBox[{
       RowBox[{"Ts", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"lens", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "nObjects"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.751118751091413*^9, 3.751118757689159*^9}, {
   3.751118801666729*^9, 3.751118848375704*^9}, {3.7511190462549543`*^9, 
   3.751119096603574*^9}, {3.751160106175243*^9, 3.751160106282084*^9}, {
   3.7528968920839977`*^9, 3.752896931054696*^9}, {3.7528970643922863`*^9, 
   3.7528970850217657`*^9}, {3.752898363356378*^9, 3.7528983639949303`*^9}, 
   3.752898535377866*^9, {3.752930968550906*^9, 3.752931039129393*^9}, {
   3.752931112004519*^9, 3.752931112747387*^9}, {3.752931377819645*^9, 
   3.7529314340380373`*^9}, {3.7529315635671864`*^9, 
   3.7529315943397923`*^9}, {3.75293164368289*^9, 3.752931644269472*^9}, {
   3.75293167656215*^9, 3.752931679101885*^9}, {3.752931714337655*^9, 
   3.752931780152071*^9}, {3.7529352424504757`*^9, 3.7529352484956827`*^9}, {
   3.752935433445023*^9, 3.752935445491578*^9}, {3.753037820864614*^9, 
   3.7530378254409018`*^9}, 3.753044053026998*^9, 3.75304619671243*^9, {
   3.75305182763835*^9, 3.7530518506661777`*^9}, {3.753052269760738*^9, 
   3.753052318096066*^9}, {3.7530523517408123`*^9, 3.753052352626607*^9}, {
   3.753052396789255*^9, 3.753052397694915*^9}, {3.753052431610183*^9, 
   3.7530524969842777`*^9}, {3.753052585589896*^9, 3.753052587838933*^9}, {
   3.753053098045836*^9, 3.753053105395467*^9}, {3.753053269283177*^9, 
   3.7530532702229548`*^9}, {3.753121588118039*^9, 3.753121638046852*^9}, {
   3.753121786920171*^9, 3.75312195563548*^9}, {3.753121986192629*^9, 
   3.753121989480275*^9}, {3.753122030953302*^9, 3.75312205956441*^9}, {
   3.753122129003786*^9, 3.753122140551744*^9}, {3.7531221852110453`*^9, 
   3.7531222295094347`*^9}, {3.75312227640051*^9, 3.753122394166133*^9}, {
   3.753122435071288*^9, 3.753122437772585*^9}, 3.753122485009709*^9, {
   3.753149382369236*^9, 3.753149400527478*^9}, 3.753180439863818*^9, {
   3.753180471063957*^9, 3.753180758696107*^9}},
 CellLabel->
  "In[2492]:=",ExpressionUUID->"72acf4bf-c920-417b-a46c-c6e641d76c27"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Animate", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"linksCoords", "[", "i_", "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"links", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "/.", "sim"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"linksCoords", "[", "j_", "]"}], ":=", 
     RowBox[{
      RowBox[{"links", "[", 
       RowBox[{"[", "j", "]"}], "]"}], "/.", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"qs", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", 
         RowBox[{"qsPlot", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nVars"}], "}"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"LinksForAnimation", "[", "tt_", "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"linksCoords", "[", "i", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "links", "]"}]}], "}"}]}], "]"}], ")"}], "/.", 
      RowBox[{"t", "\[Rule]", "tt"}]}]}], ";"}], "\n", 
   RowBox[{"Animate", "[", 
    RowBox[{
     RowBox[{"Show", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", 
            RowBox[{"impactDetectionError", "/", "5"}], "]"}], ",", 
           RowBox[{"LinksForAnimation", "[", "t", "]"}]}], "}"}], "]"}], 
        "\[IndentingNewLine]", "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", " ", "True"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "timeend"}], "}"}], ",", 
     RowBox[{"AnimationRate", "\[Rule]", "1"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.751118751091413*^9, 3.751118757689159*^9}, {
   3.751118801666729*^9, 3.751118848375704*^9}, {3.7511190462549543`*^9, 
   3.751119096603574*^9}, {3.751160106175243*^9, 3.751160106282084*^9}, {
   3.7528968920839977`*^9, 3.752896931054696*^9}, {3.7528970643922863`*^9, 
   3.7528970850217657`*^9}, {3.752898363356378*^9, 3.7528983639949303`*^9}, 
   3.752898535377866*^9, {3.752930968550906*^9, 3.752931039129393*^9}, {
   3.752931112004519*^9, 3.752931112747387*^9}, {3.752931377819645*^9, 
   3.7529314340380373`*^9}, {3.7529315635671864`*^9, 
   3.7529315943397923`*^9}, {3.75293164368289*^9, 3.752931644269472*^9}, {
   3.75293167656215*^9, 3.752931679101885*^9}, {3.752931714337655*^9, 
   3.752931780152071*^9}, {3.7529352424504757`*^9, 3.7529352484956827`*^9}, {
   3.752935433445023*^9, 3.752935445491578*^9}, {3.753037820864614*^9, 
   3.7530378254409018`*^9}, 3.753044053026998*^9, 3.75304619671243*^9, {
   3.75305182763835*^9, 3.7530518506661777`*^9}, {3.753052269760738*^9, 
   3.753052318096066*^9}, {3.7530523517408123`*^9, 3.753052352626607*^9}, {
   3.753052396789255*^9, 3.753052397694915*^9}, {3.753052431610183*^9, 
   3.7530524969842777`*^9}, {3.753052585589896*^9, 3.753052587838933*^9}, {
   3.753053098045836*^9, 3.753053105395467*^9}, {3.753053269283177*^9, 
   3.7530532702229548`*^9}, {3.753121588118039*^9, 3.753121638046852*^9}, {
   3.753121786920171*^9, 3.75312195563548*^9}, {3.753121986192629*^9, 
   3.753121989480275*^9}, {3.753122030953302*^9, 3.75312205956441*^9}, {
   3.753122129003786*^9, 3.753122147192174*^9}, {3.75312254831465*^9, 
   3.753122549156526*^9}, 3.75312681412013*^9, {3.753148949599975*^9, 
   3.753148977232799*^9}, {3.753149176256588*^9, 3.753149186928094*^9}, {
   3.753149366341589*^9, 3.753149427247396*^9}, {3.753154971886162*^9, 
   3.753154972939328*^9}, {3.75318516050072*^9, 3.753185175944008*^9}, {
   3.7532176506014338`*^9, 3.753217653311755*^9}, {3.753220219934483*^9, 
   3.753220222667912*^9}, {3.753233048019395*^9, 3.7532330727971373`*^9}, {
   3.753235637935574*^9, 3.753235638695187*^9}, {3.7532359842785587`*^9, 
   3.7532359917818737`*^9}, {3.7532363629974527`*^9, 3.753236364232357*^9}, {
   3.753277352407209*^9, 3.75327737147598*^9}},
 CellLabel->
  "In[2494]:=",ExpressionUUID->"a5e5e57a-98e4-4a87-bc00-5d27621ac9a6"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 18.37460994720459, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 30}}, Typeset`size$$ = {540., {267., 275.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$258082$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$258082$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[{
         Graphics[{
           Thickness[$CellContext`impactDetectionError/5], 
           $CellContext`LinksForAnimation[$CellContext`t$$]}]}, 
        PlotRange -> {{-3, 3}, {-3, 3}}, Frame -> True], 
      "Specifications" :> {{$CellContext`t$$, 0, 30, AnimationRate -> 1, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{608., {319., 328.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.753154978542222*^9, 3.7531550385037193`*^9, 3.7531782351192417`*^9, 
   3.7531794917803497`*^9, 3.753180760301058*^9, 3.75318086039358*^9, 
   3.753181211858686*^9, 3.753181263513571*^9, 3.753183970054351*^9, 
   3.753185038294992*^9, 3.753185092721366*^9, 3.753185176720893*^9, 
   3.753185707524302*^9, 3.753185987001801*^9, 3.75318603609147*^9, 
   3.7531924799993896`*^9, 3.7531952317535133`*^9, 3.753195298043434*^9, 
   3.753202818348139*^9, 3.7532041818903913`*^9, {3.7532055946554956`*^9, 
   3.753205631433608*^9}, 3.7532057251850023`*^9, 3.753207325424111*^9, 
   3.753209787085759*^9, {3.753215388854748*^9, 3.753215405575436*^9}, {
   3.7532154775533657`*^9, 3.7532155196232157`*^9}, 3.753215552205412*^9, 
   3.753215590390336*^9, 3.753215661960959*^9, 3.753216439288312*^9, 
   3.753216559255527*^9, 3.7532166146128273`*^9, 3.7532166555841846`*^9, 
   3.753216812307054*^9, 3.753216898500348*^9, 3.753217145200623*^9, {
   3.753217645193348*^9, 3.753217653697151*^9}, 3.753217698698802*^9, 
   3.753218383279171*^9, 3.7532184183841963`*^9, 3.753219009252784*^9, 
   3.75321955300762*^9, 3.75321995105064*^9, {3.753220037368121*^9, 
   3.753220062920875*^9}, {3.753220212983838*^9, 3.753220240565984*^9}, 
   3.75322028037683*^9, 3.7532203176949053`*^9, 3.753220496313692*^9, 
   3.753220572741013*^9, 3.753220779339642*^9, 3.753221015432218*^9, 
   3.753221134343849*^9, 3.7532212873738956`*^9, 3.753221396466215*^9, 
   3.7532214410107327`*^9, 3.753221490023933*^9, 3.75322153605573*^9, 
   3.75322158234412*^9, 3.753228983193174*^9, {3.753229072942421*^9, 
   3.753229091515452*^9}, {3.753230103508892*^9, 3.753230126114872*^9}, 
   3.753230162099019*^9, 3.75323094586261*^9, 3.753231770650092*^9, 
   3.753231801785638*^9, 3.7532318500856647`*^9, {3.753231922264154*^9, 
   3.753231947916079*^9}, 3.753232016197793*^9, {3.753232111318364*^9, 
   3.753232138791141*^9}, 3.7532322644924583`*^9, 3.753232342986425*^9, 
   3.753232795802301*^9, {3.753233063335754*^9, 3.753233073247175*^9}, 
   3.753235596012162*^9, 3.753235639384529*^9, 3.7532356736534147`*^9, {
   3.7532359868965282`*^9, 3.753235992212247*^9}, 3.75323602563431*^9, 
   3.75323606853329*^9, 3.753236107104333*^9, 3.753236152514215*^9, 
   3.753236213794224*^9, 3.753236364836753*^9, 3.75323641325657*^9, 
   3.753236458372343*^9, 3.7532427778441687`*^9, {3.75324285435607*^9, 
   3.753242882530944*^9}, {3.753242970772479*^9, 3.7532429959500103`*^9}, 
   3.753243086912064*^9, {3.7532431336764917`*^9, 3.753243136181301*^9}, {
   3.753243459671823*^9, 3.753243464889357*^9}, 3.753243515230191*^9, 
   3.7532439657689867`*^9, 3.753244099900805*^9, 3.753244165512129*^9, 
   3.7532442031526546`*^9, 3.753244318898889*^9, 3.75324449053295*^9, 
   3.7532446246071033`*^9, {3.753273376383522*^9, 3.753273376559411*^9}, 
   3.753273414431038*^9, 3.753273449142761*^9, {3.753273690079204*^9, 
   3.753273693780908*^9}, {3.753273725915265*^9, 3.7532737352382507`*^9}, 
   3.753273781044018*^9, 3.753273980331819*^9, 3.7532742260840483`*^9, 
   3.7532760769945927`*^9, 3.753276128719099*^9, 3.7532764379132967`*^9, 
   3.7532769752514544`*^9, {3.7532770853383923`*^9, 3.753277106372384*^9}, {
   3.753277343275202*^9, 3.753277371988132*^9}, 3.753277475073616*^9, 
   3.753277540973701*^9, {3.7532775722351418`*^9, 3.753277625157652*^9}, 
   3.7532779526450777`*^9, {3.753278080908745*^9, 3.7532781248083353`*^9}, 
   3.753278202649108*^9, 3.753278233899706*^9, 3.753278310351722*^9, 
   3.753278406309401*^9, 3.753278468068808*^9, 3.753278694453795*^9, 
   3.7532788253552113`*^9, 3.75327887787193*^9},
 CellLabel->
  "Out[2496]=",ExpressionUUID->"868f39e5-dfac-405e-90fb-2692c021f4ba"]
}, Open  ]],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{3.753236033696909*^9},
 CellLabel->
  "In[2497]:=",ExpressionUUID->"b0e67f0d-7f87-47c9-8ed5-3b7ecf9f2199"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7532291049770317`*^9, 3.75322910714084*^9}},
 CellLabel->
  "In[2498]:=",ExpressionUUID->"f2504974-fc9f-4db4-adf1-403e32af5fe4"]
},
WindowSize->{1263, 760},
WindowMargins->{{Automatic, 20}, {Automatic, 71}},
Magnification->1.5,
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1249, 21, 97, "Input",ExpressionUUID->"266e0836-dc31-4677-a6fd-4e7ecb2b8656"],
Cell[1810, 43, 20645, 520, 3369, "Input",ExpressionUUID->"1bdb90c2-7289-45c2-a579-eed7e16aa45d"],
Cell[22458, 565, 3485, 86, 717, "Input",ExpressionUUID->"c44b64ef-d677-445c-8a1b-b41ad0a02895"],
Cell[25946, 653, 2382, 40, 139, "Input",ExpressionUUID->"86e25054-c6c5-43bc-b27c-ddc5bfdc0a87"],
Cell[28331, 695, 5571, 168, 543, "Input",ExpressionUUID->"475c42ee-2785-4311-afba-ef5380bb1e53"],
Cell[33905, 865, 9855, 179, 424, "Input",ExpressionUUID->"36793f65-e109-48c5-bb5f-cea958de743e"],
Cell[43763, 1046, 2285, 36, 105, "Input",ExpressionUUID->"5a24985b-711d-4894-ad33-7682092f3681"],
Cell[46051, 1084, 5984, 117, 377, "Input",ExpressionUUID->"c77ea872-647e-4514-a418-f5dc43c7ff34"],
Cell[52038, 1203, 4625, 91, 479, "Input",ExpressionUUID->"c1a43f81-3db8-4f78-9104-411f67c585f2"],
Cell[CellGroupData[{
Cell[56688, 1298, 1966, 41, 207, "Input",ExpressionUUID->"7397f069-2f50-47dd-97e4-bc64fd0d50b9"],
Cell[58657, 1341, 215137, 3654, 398, "Output",ExpressionUUID->"2e49763a-4a9f-4e65-885d-0939c0403f38"]
}, Open  ]],
Cell[273809, 4998, 4008, 90, 318, "Input",ExpressionUUID->"72acf4bf-c920-417b-a46c-c6e641d76c27"],
Cell[CellGroupData[{
Cell[277842, 5092, 4632, 100, 309, "Input",ExpressionUUID->"a5e5e57a-98e4-4a87-bc00-5d27621ac9a6"],
Cell[282477, 5194, 5747, 94, 698, "Output",ExpressionUUID->"868f39e5-dfac-405e-90fb-2692c021f4ba"]
}, Open  ]],
Cell[288239, 5291, 153, 3, 70, "Input",ExpressionUUID->"b0e67f0d-7f87-47c9-8ed5-3b7ecf9f2199"],
Cell[288395, 5296, 177, 3, 70, "Input",ExpressionUUID->"f2504974-fc9f-4db4-adf1-403e32af5fe4"]
}
]
*)


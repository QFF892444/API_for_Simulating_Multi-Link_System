(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    181521,       3630]
NotebookOptionsPosition[    179864,       3599]
NotebookOutlinePosition[    180221,       3615]
CellTagsIndexPosition[    180178,       3612]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 StyleBox[
  RowBox[{"(*", "Final", 
   StyleBox[
    RowBox[{"*", ")"}]]}],
  FontSize->28,
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]]], "Input",
 CellChangeTimes->{{3.752856441079928*^9, 3.752856478002857*^9}, {
   3.752856614876956*^9, 3.752856740407585*^9}, {3.752857349635654*^9, 
   3.7528573641489067`*^9}, {3.752858198794065*^9, 3.7528581999292603`*^9}, 
   3.7528918403995743`*^9, {3.7528961817048273`*^9, 3.7528962191940603`*^9}, {
   3.752937212844871*^9, 3.752937224444496*^9}, {3.75294339441866*^9, 
   3.7529434180825357`*^9}, {3.752943559013653*^9, 3.752943561469325*^9}, {
   3.752943661738035*^9, 3.752943707796466*^9}, {3.7529439315733147`*^9, 
   3.752943937463044*^9}, {3.752945087432394*^9, 3.752945160930595*^9}, {
   3.752945280056671*^9, 3.752945287073347*^9}, {3.75294553242769*^9, 
   3.752945629895801*^9}, {3.752945979948072*^9, 3.752946001821425*^9}, {
   3.753053373675827*^9, 3.7530534089667683`*^9}, {3.753057277402*^9, 
   3.753057299216235*^9}, {3.753058012958432*^9, 3.753058044931511*^9}, {
   3.7530580860523443`*^9, 3.753058094410119*^9}, {3.753058323290696*^9, 
   3.753058324836581*^9}, {3.753119695290847*^9, 
   3.753119700840918*^9}},ExpressionUUID->"266e0836-dc31-4677-a6fd-\
4e7ecb2b8656"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", " ", "Math"}]}]}]}]}]}]}], " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"functions", " ", "--"}], "--"}], "--"}], "--"}], 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", "-"}]}]}]}], "*)"}], 
  StyleBox["\[IndentingNewLine]",
   FontSize->28,
   FontWeight->"Bold",
   FontColor->RGBColor[0, 0, 1]], 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"CompareEachElements", "[", 
      RowBox[{"vec1_", ",", "vec2_"}], "]"}], ":=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"vec1", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", 
        RowBox[{"vec2", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "vec1", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rotz4", "[", "\[Theta]_", "]"}], ":=", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{"Cos", "[", "\[Theta]", "]"}], 
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0", "0"},
        {
         RowBox[{"Sin", "[", "\[Theta]", "]"}], 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "0", "0"},
        {"0", "0", "1", "0"},
        {"0", "0", "0", "1"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rotz", "[", "\[Theta]_", "]"}], ":=", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{"Cos", "[", "\[Theta]", "]"}], 
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
        {
         RowBox[{"Sin", "[", "\[Theta]", "]"}], 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
        {"0", "0", "1"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Vec3", "[", 
     RowBox[{"v1_", ",", "v2_", ",", "v3_"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "v1", "}"}], ",", 
      RowBox[{"{", "v2", "}"}], ",", 
      RowBox[{"{", "v3", "}"}]}], "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Trans4", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0", "x"},
       {"0", "1", "0", "y"},
       {"0", "0", "1", "0"},
       {"0", "0", "0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NewT4", "[", 
     RowBox[{"x_", ",", "y_", ",", "\[Theta]_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Trans4", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ".", 
     RowBox[{"Rotz4", "[", "\[Theta]", "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Zeros", "[", 
     RowBox[{"dim1_", ",", "dim2_"}], "]"}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "dim1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "dim2"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MF", "[", "T_", "]"}], ":=", 
    RowBox[{"MatrixForm", "[", "T", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Skew", " ", "funcs"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Hat", "[", "\[Omega]_", "]"}], ":=", 
    RowBox[{"(", GridBox[{
       {"0", 
        RowBox[{"-", 
         RowBox[{"\[Omega]", "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "1"}], "]"}], "]"}]}], 
        RowBox[{"\[Omega]", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "1"}], "]"}], "]"}]},
       {
        RowBox[{"\[Omega]", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "1"}], "]"}], "]"}], "0", 
        RowBox[{"-", 
         RowBox[{"\[Omega]", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}]}]},
       {
        RowBox[{"-", 
         RowBox[{"\[Omega]", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "1"}], "]"}], "]"}]}], 
        RowBox[{"\[Omega]", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], "0"}
      }], ")"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Unhat", "[", "\[Omega]_", "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Omega]", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "2"}], "]"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Omega]", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "3"}], "]"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Omega]", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}], "}"}]}], "}"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"generalized", " ", 
      RowBox[{"hat", ":", " ", "g"}]}], " ", "->", " ", "twist"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Genhat2", "[", 
     RowBox[{"\[Omega]_", ",", "v_"}], "]"}], ":=", 
    RowBox[{"ArrayFlatten", "[", 
     RowBox[{"(", GridBox[{
        {
         RowBox[{"Hat", "[", "\[Omega]", "]"}], "v"},
        {
         RowBox[{"Zeros", "[", 
          RowBox[{"1", ",", "3"}], "]"}], "0"}
       }], ")"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Genhat", "[", "S_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Omega]", ",", "v"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Omega]", "=", 
        RowBox[{"S", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"1", ";;", "3"}], ",", 
           RowBox[{"1", ";;", "1"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"v", "=", 
        RowBox[{"S", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"4", ";;", "6"}], ",", 
           RowBox[{"1", ";;", "1"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Genhat2", "[", 
        RowBox[{"\[Omega]", ",", "v"}], "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GenUnhat", "[", "T_", "]"}], ":=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Unhat", "[", 
       RowBox[{"T", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"1", ";;", "3"}], ",", 
          RowBox[{"1", ";;", "3"}]}], "]"}], "]"}], "]"}], ",", 
      RowBox[{"T", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"1", ";;", "3"}], ",", 
         RowBox[{"4", ";;", "4"}]}], "]"}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AdT", "[", "T_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"R", ",", "p"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"R", "=", 
        RowBox[{"T", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"1", ";;", "3"}], ",", 
           RowBox[{"1", ";;", "3"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"p", "=", 
        RowBox[{"T", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"1", ";;", "3"}], ",", 
           RowBox[{"4", ";;", "4"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ArrayFlatten", "[", 
        RowBox[{"(", GridBox[{
           {"R", 
            RowBox[{"Zeros", "[", 
             RowBox[{"3", ",", "3"}], "]"}]},
           {
            RowBox[{
             RowBox[{"Hat", "[", "p", "]"}], ".", "R"}], "R"}
          }], ")"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"InvT", "[", "T_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"R", ",", "p"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"R", "=", 
        RowBox[{"T", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"1", ";;", "3"}], ",", 
           RowBox[{"1", ";;", "3"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"p", "=", 
        RowBox[{"T", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"1", ";;", "3"}], ",", 
           RowBox[{"4", ";;", "4"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ArrayFlatten", "[", 
        RowBox[{"(", GridBox[{
           {
            RowBox[{"Transpose", "[", "R", "]"}], 
            RowBox[{"-", 
             RowBox[{
              RowBox[{"Transpose", "[", "R", "]"}], ".", "p"}]}]},
           {
            RowBox[{"Zeros", "[", 
             RowBox[{"1", ",", "3"}], "]"}], "1"}
          }], ")"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"-", " ", "Math"}]}]}]}]}]}], " ", "funcs", " ", "ends", 
      " ", 
      RowBox[{"here", ".", " ", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", "-"}]}]}]}]}]}]}]}]}], ";", 
     RowBox[{
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", " ", "Below"}]}]}]}]}]}]}], " ", "are", " ", "the", 
      " ", "main", " ", 
      RowBox[{"program", ".", " ", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", "--"}]}]}]}]}]}]}]}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.752856441079928*^9, 3.752856478002857*^9}, {
   3.752856614876956*^9, 3.752856740407585*^9}, {3.752857349635654*^9, 
   3.7528573641489067`*^9}, {3.752858198794065*^9, 3.7528581999292603`*^9}, 
   3.7528918403995743`*^9, {3.7528961817048273`*^9, 3.7528962191940603`*^9}, {
   3.752937212844871*^9, 3.752937224444496*^9}, {3.75294339441866*^9, 
   3.7529434180825357`*^9}, {3.752943559013653*^9, 3.752943561469325*^9}, {
   3.752943661738035*^9, 3.752943707796466*^9}, {3.7529439315733147`*^9, 
   3.752943937463044*^9}, {3.752945087432394*^9, 3.752945160930595*^9}, {
   3.752945280056671*^9, 3.752945287073347*^9}, {3.75294553242769*^9, 
   3.752945629895801*^9}, {3.752945979948072*^9, 3.752946001821425*^9}, {
   3.753053373675827*^9, 3.7530534089667683`*^9}, {3.753057277402*^9, 
   3.753057299216235*^9}, {3.753058012958432*^9, 3.753058044931511*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"8f92c5b0-8289-4350-8eb8-516898d33f22"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Properties", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"nObjects", "=", "3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"l", "=", 
     RowBox[{"l1", "=", 
      RowBox[{"l2", "=", 
       RowBox[{"l3", "=", "1"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"w", "=", 
     RowBox[{"w1", "=", 
      RowBox[{"w2", "=", 
       RowBox[{"w3", "=", "0.25"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"masses", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"1", ",", "nObjects"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"inertias", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"1", ",", "nObjects"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lens", "=", 
     RowBox[{"{", 
      RowBox[{"l1", ",", "l2", ",", "l3"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"widths", "=", 
     RowBox[{"{", 
      RowBox[{"w1", ",", "w2", ",", "w3"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g", "=", "9.8"}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7530502395346613`*^9, 3.753050281734251*^9}, {
   3.7530503270972557`*^9, 3.753050358675169*^9}, 3.753050559219668*^9, {
   3.753050968557973*^9, 3.75305097200703*^9}, {3.753051447658455*^9, 
   3.753051493717699*^9}, {3.753051534882546*^9, 3.7530515359535303`*^9}, {
   3.753052139902815*^9, 3.7530521707275963`*^9}, {3.7530522412482433`*^9, 
   3.753052261323883*^9}, {3.7530527073323927`*^9, 3.753052708827682*^9}, {
   3.753053018908145*^9, 3.753053031592044*^9}, 3.753053433667809*^9, 
   3.753058297715966*^9},
 CellLabel->"In[24]:=",ExpressionUUID->"c25a6fa0-6c2e-460e-b344-7d85a8b29fd8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Vars", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"qs", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], ",", 
       RowBox[{"y", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]1", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]2", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]3", "[", "t", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"qsvars", "=", 
     RowBox[{"{", 
      RowBox[{
      "x", ",", "y", ",", "\[Theta]1", ",", "\[Theta]2", ",", "\[Theta]3"}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nVars", "=", 
     RowBox[{"Length", "[", "qs", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Simulation", "'"}], "s", " ", "init", " ", "condition"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"qsInit", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"l", "/", "2"}], "+", 
        RowBox[{"l", "*", 
         RowBox[{"Cos", "[", 
          RowBox[{"Pi", "/", "20"}], "]"}]}]}], ",", "0", ",", 
       RowBox[{"Pi", "/", "20"}], ",", 
       RowBox[{
        RowBox[{"-", "Pi"}], "/", "20"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dqsInit", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", "nVars"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dqs", "=", 
     RowBox[{"D", "[", 
      RowBox[{"qs", ",", "t"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ddqs", "=", 
     RowBox[{"D", "[", 
      RowBox[{"dqs", ",", "t"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.753044835778154*^9, 3.753044853243857*^9}, {
   3.753044885735341*^9, 3.753045087762558*^9}, {3.753045119526952*^9, 
   3.7530451980018806`*^9}, {3.753045233241619*^9, 3.753045330223648*^9}, {
   3.753045375327367*^9, 3.753045428238071*^9}, {3.753045470005053*^9, 
   3.753045488477352*^9}, {3.753045548631014*^9, 3.7530455872391768`*^9}, {
   3.7530461846478233`*^9, 3.753046189098051*^9}, {3.753049997171638*^9, 
   3.7530500196938667`*^9}, {3.753050066769712*^9, 3.7530500913759336`*^9}, {
   3.75305016165658*^9, 3.75305017743246*^9}, {3.75305020772898*^9, 
   3.753050237021182*^9}, {3.753050294237818*^9, 3.753050430715755*^9}, {
   3.753050508246562*^9, 3.753050561137941*^9}, {3.753050973890109*^9, 
   3.7530509843757143`*^9}, {3.753051073460733*^9, 3.753051081270372*^9}, {
   3.7530513907609*^9, 3.753051417218584*^9}, {3.75305148489613*^9, 
   3.7530515464564962`*^9}, {3.7530525178993607`*^9, 3.753052521284204*^9}, {
   3.753052551473435*^9, 3.753052557247499*^9}, 3.753052592897394*^9, {
   3.7530526901642733`*^9, 3.753052695814392*^9}, {3.753052738897628*^9, 
   3.753052845859419*^9}, {3.753053011553212*^9, 3.753053015960785*^9}, {
   3.7530530507527637`*^9, 3.753053065016358*^9}, {3.753053160298539*^9, 
   3.753053181263439*^9}, {3.7530534715002832`*^9, 3.7530534732984447`*^9}, {
   3.753055222238761*^9, 3.753055242806821*^9}, {3.753055286630221*^9, 
   3.753055290240477*^9}, {3.75305550316765*^9, 3.753055509011722*^9}, {
   3.7530555778749743`*^9, 3.7530556042907143`*^9}, {3.753056356381502*^9, 
   3.753056357004627*^9}, 3.753056823160893*^9, 3.7530598792758083`*^9},
 CellLabel->"In[32]:=",ExpressionUUID->"b53c1c24-b6cc-41a8-8bd5-df323c26ee4d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Transformation", " ", "matrices"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Ts", "=", 
     RowBox[{"{", 
      RowBox[{"T1", ",", "T2", ",", "T3"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", " ", 
   RowBox[{"(*", " ", "Geometry", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tw", "=", 
     RowBox[{"Trans4", "[", 
      RowBox[{"0", ",", "0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T0End", "=", 
     RowBox[{"Tw", ".", 
      RowBox[{"Trans4", "[", 
       RowBox[{
        RowBox[{"x", "[", "t", "]"}], ",", 
        RowBox[{"y", "[", "t", "]"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T1", "=", 
     RowBox[{
      RowBox[{"T0End", ".", 
       RowBox[{"Rotz4", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "//", "Simplify"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T1End", "=", 
     RowBox[{"T1", ".", 
      RowBox[{"Trans4", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"-", "l1"}], "/", "2"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p1End", "=", 
     RowBox[{
      RowBox[{"T1", ".", 
       SuperscriptBox[
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"l2", "/", "2"}], ",", "0", ",", "1"}], "}"}], "}"}], 
        "\[Transpose]"]}], "//", "Simplify"}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T2", "=", 
     RowBox[{
      RowBox[{"T1End", ".", 
       RowBox[{"Rotz4", "[", 
        RowBox[{"Pi", "+", 
         RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], ".", 
       RowBox[{"Trans4", "[", 
        RowBox[{"0", ",", 
         RowBox[{"l2", "/", "2"}]}], "]"}]}], "//", "Simplify"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p2End", "=", 
     RowBox[{
      RowBox[{"T2", ".", 
       SuperscriptBox[
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"l2", "/", "2"}], ",", "0", ",", "1"}], "}"}], "}"}], 
        "\[Transpose]"]}], "//", "Simplify"}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T3", "=", 
     RowBox[{
      RowBox[{"T1End", ".", 
       RowBox[{"Rotz4", "[", 
        RowBox[{"Pi", "+", 
         RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], ".", 
       RowBox[{"Trans4", "[", 
        RowBox[{"0", ",", 
         RowBox[{"l3", "/", "2"}]}], "]"}]}], "//", "Simplify"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p3End", "=", 
     RowBox[{
      RowBox[{"T3", ".", 
       SuperscriptBox[
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"l3", "/", "2"}], ",", "0", ",", "1"}], "}"}], "}"}], 
        "\[Transpose]"]}], "//", "Simplify"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.753044835778154*^9, 3.753044853243857*^9}, {
   3.753044885735341*^9, 3.753045087762558*^9}, {3.753045119526952*^9, 
   3.7530451980018806`*^9}, {3.753045233241619*^9, 3.753045330223648*^9}, {
   3.753045375327367*^9, 3.753045428238071*^9}, {3.753045470005053*^9, 
   3.753045488477352*^9}, {3.753045548631014*^9, 3.7530455872391768`*^9}, {
   3.7530461846478233`*^9, 3.753046189098051*^9}, {3.753049997171638*^9, 
   3.7530500196938667`*^9}, {3.753050066769712*^9, 3.7530500913759336`*^9}, {
   3.75305016165658*^9, 3.75305017743246*^9}, {3.75305020772898*^9, 
   3.753050237021182*^9}, {3.753050294237818*^9, 3.753050430715755*^9}, {
   3.753050508246562*^9, 3.753050561137941*^9}, {3.753050973890109*^9, 
   3.7530509843757143`*^9}, {3.753051073460733*^9, 3.753051081270372*^9}, {
   3.7530513907609*^9, 3.753051417218584*^9}, {3.75305148489613*^9, 
   3.7530515464564962`*^9}, {3.7530525178993607`*^9, 3.753052521284204*^9}, {
   3.753052551473435*^9, 3.753052557247499*^9}, 3.753052592897394*^9, {
   3.7530526901642733`*^9, 3.753052695814392*^9}, {3.753052738897628*^9, 
   3.753052845859419*^9}, {3.753053011553212*^9, 3.753053015960785*^9}, {
   3.7530530507527637`*^9, 3.753053061062314*^9}, {3.753053437625102*^9, 
   3.753053445291786*^9}, {3.753053652581946*^9, 3.75305365795931*^9}, {
   3.753054130043837*^9, 3.753054146860914*^9}, 3.753054369689734*^9, {
   3.7530552140086317`*^9, 3.753055214948401*^9}, {3.753055568100189*^9, 
   3.753055571428176*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"86e25054-c6c5-43bc-b27c-ddc5bfdc0a87"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"-", " ", "Left"}]}]}]}]}]}]}]}], " ", "side", " ", "of", 
     " ", "EL", " ", 
     RowBox[{
      RowBox[{"eqs", " ", "--"}], "--"}]}], "-", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", "-"}]}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Body", " ", "generalized", " ", "mass"}], ",", " ", 
    RowBox[{
    "composed", " ", "of", " ", "Inertia", " ", "Tensor", " ", "and", " ", 
     "Mass", " ", "Matrix"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"getGb", "[", 
     RowBox[{"j_", ",", "m_"}], "]"}], ":=", 
    RowBox[{"ArrayFlatten", "[", 
     RowBox[{"(", GridBox[{
        {
         RowBox[{"DiagonalMatrix", "[", 
          RowBox[{"{", 
           RowBox[{"j", ",", "j", ",", "j"}], "}"}], "]"}], 
         RowBox[{"Zeros", "[", 
          RowBox[{"3", ",", "3"}], "]"}]},
        {
         RowBox[{"Zeros", "[", 
          RowBox[{"3", ",", "3"}], "]"}], 
         RowBox[{"DiagonalMatrix", "[", 
          RowBox[{"{", 
           RowBox[{"m", ",", "m", ",", "m"}], "}"}], "]"}]}
       }], ")"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Gbs", "=", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"getGb", "[", 
         RowBox[{
          RowBox[{"inertias", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"masses", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nObjects"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Body", " ", "screw", " ", "axis"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Vbs", "=", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"GenUnhat", "[", 
         RowBox[{
          RowBox[{"InvT", "[", 
           RowBox[{"Ts", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], ".", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"Ts", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "t"}], "]"}]}], "]"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nObjects"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Lagrange", " ", 
     RowBox[{"Equations", ":", " ", 
      RowBox[{"Kinetic", " ", "and", " ", "Potential", " ", "Energy"}]}]}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetKE", "[", 
      RowBox[{"Gb_", ",", "Vb_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "2"}], "*", 
        RowBox[{
         RowBox[{"Transpose", "[", "Vb", "]"}], ".", "Gb", ".", "Vb"}]}], 
       ")"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"GetPE", "[", 
      RowBox[{"m_", ",", "T_"}], "]"}], ":=", 
     RowBox[{"m", "*", "g", "*", 
      RowBox[{"T", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "4"}], "]"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"KEs", "=", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"GetKE", "[", 
         RowBox[{
          RowBox[{"Gbs", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"Vbs", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nObjects"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PEs", "=", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"GetPE", "[", 
         RowBox[{
          RowBox[{"masses", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"Ts", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nObjects"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Lag", "=", 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{"Join", "[", 
        RowBox[{"KEs", ",", 
         RowBox[{"-", "PEs"}]}], "]"}], "]"}], "//", "Simplify"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Left", " ", "side", " ", "of", " ", "Euler"}], "-", 
     RowBox[{"Lagrange", " ", "Equations"}]}], "*)"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"ELeqsLeft", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"Lag", ",", 
           RowBox[{"{", "dqs", "}"}]}], "]"}], ",", "t"}], "]"}], "-", 
       RowBox[{"D", "[", 
        RowBox[{"Lag", ",", 
         RowBox[{"{", "qs", "}"}]}], "]"}]}], "//", "Simplify"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.753057076566051*^9, 3.753057082906145*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"475c42ee-2785-4311-afba-ef5380bb1e53"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"-", " ", "Right"}]}]}]}]}]}]}]}], " ", "side", " ", "of",
      " ", "EL", " ", 
     RowBox[{
      RowBox[{"eqs", " ", "--"}], "--"}]}], "-", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", "-"}]}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "Constraints", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"conslink1x", "=", 
     RowBox[{
      RowBox[{"p1End", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], "+", 
      RowBox[{
       RowBox[{"l", "/", "2"}], "*", 
       RowBox[{"Cos", "[", 
        RowBox[{"Pi", "/", "20"}], "]"}]}]}]}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{"x", "=", "0"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"conslink2x", "=", 
     RowBox[{
      RowBox[{"p2End", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", 
      RowBox[{"l", "*", 
       RowBox[{"Sin", "[", 
        RowBox[{"Pi", "/", "20"}], "]"}]}]}]}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{"x", "=", "0"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"conslink3x", "=", 
     RowBox[{
      RowBox[{"p3End", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], "+", 
      RowBox[{"l", "*", 
       RowBox[{"Sin", "[", 
        RowBox[{"Pi", "/", "20"}], "]"}]}]}]}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{"x", "=", "0"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"conslink1y", "=", 
     RowBox[{"p1End", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";"}], 
   RowBox[{"(*", " ", 
    RowBox[{"y", "=", "0"}], " ", "*)"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"conslink2y", "=", 
     RowBox[{"p2End", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";"}], 
   RowBox[{"(*", " ", 
    RowBox[{"y", "=", "0"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"conslink3y", "=", 
     RowBox[{"p3End", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";"}], 
   RowBox[{"(*", " ", 
    RowBox[{"y", "=", "0"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cons", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"conslink2y", ",", "conslink3y"}], "}"}], "//", "Simplify"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nCons", "=", 
     RowBox[{"Length", "[", "cons", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"nCons", ">", "0"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Lambda]s", "=", 
         SuperscriptBox[
          RowBox[{"{", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Symbol", "[", 
              RowBox[{"\"\<$\[Lambda]\>\"", "<>", 
               RowBox[{"ToString", "@", "i"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "nCons"}], "}"}]}], "]"}], "}"}], 
          "\[Transpose]"]}], ";", "\[IndentingNewLine]", 
        RowBox[{"consgrad", "=", 
         SuperscriptBox[
          RowBox[{"Grad", "[", 
           RowBox[{"cons", ",", "qs"}], "]"}], "\[Transpose]"]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Grad", "[", 
            RowBox[{"2", ",", "5"}], "]"}], "\[Rule]", 
           RowBox[{"Mat", 
            RowBox[{"(", 
             RowBox[{"2", ",", "5"}], ")"}]}]}], ",", 
          RowBox[{"Transpose", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{"5", ",", "2"}], ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"consddt", "=", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{"cons", ",", "t"}], "]"}], ",", "t"}], "]"}], "//", 
          "Simplify"}]}]}], ")"}]}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7492477302784853`*^9, 3.749247744886393*^9}, {
   3.7492477952349367`*^9, 3.749248083936611*^9}, {3.749248115745202*^9, 
   3.749248163943199*^9}, {3.749248289782309*^9, 3.749248327237639*^9}, {
   3.7492488740168123`*^9, 3.74924890110975*^9}, {3.749249013872342*^9, 
   3.749249016428877*^9}, {3.749249715340942*^9, 3.749249725558988*^9}, {
   3.7492533635649853`*^9, 3.7492533692042627`*^9}, {3.7493304687035713`*^9, 
   3.749330526784474*^9}, {3.749583890558482*^9, 3.749584019739238*^9}, {
   3.749584051620141*^9, 3.749584289697188*^9}, {3.7495848842278976`*^9, 
   3.749584884428755*^9}, {3.7495854188247633`*^9, 3.749585430018347*^9}, {
   3.749586473817123*^9, 3.7495865299870358`*^9}, {3.74958656315245*^9, 
   3.749586572384222*^9}, {3.749586714939041*^9, 3.7495867151800013`*^9}, 
   3.749586749984033*^9, 3.749586785597528*^9, {3.7495868834456167`*^9, 
   3.749586991001513*^9}, {3.749587032904327*^9, 3.749587066122258*^9}, {
   3.749587120426735*^9, 3.749587127859918*^9}, {3.7495872147347593`*^9, 
   3.749587215589427*^9}, {3.749587264417486*^9, 3.74958727343836*^9}, {
   3.749587370691258*^9, 3.749587371064513*^9}, {3.7495874282297573`*^9, 
   3.74958742881262*^9}, {3.7495874807284613`*^9, 3.749587485622819*^9}, {
   3.749587551022369*^9, 3.749587551318131*^9}, {3.749587760131122*^9, 
   3.7495877604471684`*^9}, {3.749763678759679*^9, 3.749763690381565*^9}, {
   3.749763881161853*^9, 3.7497639007406597`*^9}, {3.749763943256238*^9, 
   3.749763959686335*^9}, {3.7497714188908377`*^9, 3.749771439202767*^9}, {
   3.74982921350916*^9, 3.749829221629135*^9}, {3.749829707066264*^9, 
   3.7498297196310368`*^9}, 3.749918529472308*^9, {3.7499191365465508`*^9, 
   3.749919137446918*^9}, {3.750475961782165*^9, 3.750475970348247*^9}, {
   3.750477108441189*^9, 3.7504771618505907`*^9}, {3.750477465968931*^9, 
   3.750477475112364*^9}, {3.7505607598932047`*^9, 3.750560763098124*^9}, {
   3.751810937584548*^9, 3.7518109533751783`*^9}, {3.751811489773809*^9, 
   3.751811561950897*^9}, {3.7518118024222927`*^9, 3.751811844782062*^9}, {
   3.7518125488639*^9, 3.751812600723185*^9}, {3.7518126374739857`*^9, 
   3.751812703969184*^9}, {3.751812934543771*^9, 3.751812934692981*^9}, {
   3.751813015430941*^9, 3.751813042664275*^9}, {3.7518148298544483`*^9, 
   3.751814830122332*^9}, {3.751819111462657*^9, 3.751819113129416*^9}, {
   3.751831724344057*^9, 3.751831729306036*^9}, {3.7518505664170322`*^9, 
   3.751850579768682*^9}, 3.751850822810646*^9, {3.752893403380947*^9, 
   3.752893538607489*^9}, {3.7528935716914377`*^9, 3.752893587584464*^9}, {
   3.7528936189617023`*^9, 3.752893619093384*^9}, {3.752894128353402*^9, 
   3.752894136362237*^9}, {3.752894213154997*^9, 3.752894337795062*^9}, {
   3.752894402898535*^9, 3.752894483877335*^9}, {3.752894591537696*^9, 
   3.75289459894217*^9}, {3.752894632570223*^9, 3.752894639098567*^9}, {
   3.752894698845552*^9, 3.7528947752361603`*^9}, {3.7528948187314672`*^9, 
   3.752894838783592*^9}, {3.752895078283527*^9, 3.752895129371352*^9}, {
   3.752895243562286*^9, 3.752895256194869*^9}, {3.752897294773044*^9, 
   3.752897296890174*^9}, {3.752937247193342*^9, 3.752937250189735*^9}, 
   3.752937448344542*^9, {3.752950364918768*^9, 3.752950369305798*^9}, {
   3.752950833820903*^9, 3.752950835798113*^9}, {3.752950973781577*^9, 
   3.7529509881214943`*^9}, {3.752951105096426*^9, 3.752951179066635*^9}, {
   3.7529512142978354`*^9, 3.752951214388245*^9}, {3.752952741387607*^9, 
   3.752952745694968*^9}, {3.7529532052093287`*^9, 3.75295320736707*^9}, {
   3.752953353033779*^9, 3.752953360770131*^9}, {3.752953681496983*^9, 
   3.7529536829283*^9}, {3.752953960931753*^9, 3.752953972666893*^9}, {
   3.752954111806077*^9, 3.752954113632807*^9}, {3.752955026392874*^9, 
   3.752955049346692*^9}, {3.752955090391477*^9, 3.752955106841086*^9}, {
   3.752955186874584*^9, 3.752955226042705*^9}, {3.7529552782802153`*^9, 
   3.752955294114819*^9}, {3.752955379795632*^9, 3.75295539587084*^9}, {
   3.7529555205907393`*^9, 3.75295552203209*^9}, {3.752955562633211*^9, 
   3.752955565238083*^9}, {3.7529556336218853`*^9, 3.752955645222836*^9}, {
   3.753029127696501*^9, 3.7530291278759823`*^9}, {3.753029554055846*^9, 
   3.7530295544868593`*^9}, {3.7530299159297247`*^9, 3.753029945305748*^9}, {
   3.753030337167046*^9, 3.753030341470745*^9}, {3.753030451864044*^9, 
   3.753030458976904*^9}, {3.7530305340929613`*^9, 3.7530305509442*^9}, {
   3.7530308841909227`*^9, 3.7530308892833233`*^9}, {3.753030989011537*^9, 
   3.753030989197073*^9}, {3.753031776823711*^9, 3.7530317825098543`*^9}, {
   3.753031953645413*^9, 3.753031954165752*^9}, {3.753032417316751*^9, 
   3.753032431531197*^9}, {3.753032550301746*^9, 3.753032550440906*^9}, 
   3.753032894012949*^9, {3.753033237646079*^9, 3.7530332394712133`*^9}, {
   3.7530334441521873`*^9, 3.753033463083189*^9}, {3.7530372815902777`*^9, 
   3.7530372984167547`*^9}, {3.753037335430272*^9, 3.7530373648487787`*^9}, {
   3.7530382587778587`*^9, 3.753038280521874*^9}, {3.753040967570965*^9, 
   3.7530409700918417`*^9}, {3.753043628573166*^9, 3.7530436748715343`*^9}, 
   3.753053594940422*^9, {3.753053631514986*^9, 3.753053638654249*^9}, {
   3.7530536805019217`*^9, 3.753053699928677*^9}, {3.753053794159343*^9, 
   3.753053799322956*^9}, {3.753053894129994*^9, 3.7530539297096453`*^9}, {
   3.7530541277264233`*^9, 3.753054128096628*^9}, {3.753054186026382*^9, 
   3.753054190219845*^9}, {3.7530547383116703`*^9, 3.753054756774881*^9}, {
   3.753054826859599*^9, 3.7530548321047087`*^9}, {3.753055015408577*^9, 
   3.7530550213596497`*^9}, {3.753055080036275*^9, 3.753055084592904*^9}, {
   3.753055147699463*^9, 3.753055149189435*^9}, {3.7530553121779003`*^9, 
   3.753055315812923*^9}, {3.7530554039610147`*^9, 3.753055436765093*^9}, {
   3.753055743461211*^9, 3.753055744460301*^9}, {3.7530564354300003`*^9, 
   3.753056435552809*^9}, {3.7530565000497723`*^9, 3.753056501589766*^9}, {
   3.7530568206576138`*^9, 3.7530568520741777`*^9}, {3.753057087019557*^9, 
   3.753057155650066*^9}, {3.7530572024493523`*^9, 3.7530572054923077`*^9}, {
   3.753059693833605*^9, 3.753059711868308*^9}, 3.753059795499174*^9},
 CellLabel->"In[58]:=",ExpressionUUID->"36793f65-e109-48c5-bb5f-cea958de743e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"External", " ", "forces"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"externalForces", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", "nVars"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", 
    RowBox[{
    "F\[Theta]2", ",", "F\[Theta]3", ",", "\[Theta]2d", ",", "\[Theta]3d"}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"k1", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"k2", "=", "20"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xd", "=", "0"}], ";", 
    RowBox[{"yd", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]1d", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]2d", "=", 
     RowBox[{
      RowBox[{"Pi", "/", "20"}], "+", 
      RowBox[{
       RowBox[{"Pi", "/", "3"}], "*", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"t", "/", "2"}], "]"}], "^", "2"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]3d", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "Pi"}], "/", "20"}], "-", 
      RowBox[{
       RowBox[{"Pi", "/", "3"}], "*", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"t", "/", "2"}], "]"}], "^", "2"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"F\[Theta]2", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "k1"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Theta]1", "[", "t", "]"}], "-", "\[Theta]1d"}], ")"}]}], 
      "-", 
      RowBox[{"k2", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Theta]2", "[", "t", "]"}], "-", "\[Theta]2d"}], 
        ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"F\[Theta]3", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "k1"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Theta]1", "[", "t", "]"}], "-", "\[Theta]1d"}], ")"}]}], 
      "-", 
      RowBox[{"k2", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Theta]3", "[", "t", "]"}], "-", "\[Theta]3d"}], 
        ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"externalForces", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "F\[Theta]2", ",", "F\[Theta]3"}],
       "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"externalForces", "=", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}], 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.752935575058041*^9, 3.752935608936143*^9}, {
   3.752935649230603*^9, 3.752935735476007*^9}, {3.752935872808815*^9, 
   3.7529358748585043`*^9}, {3.752936440428615*^9, 3.752936616693562*^9}, {
   3.752937494883192*^9, 3.752937499065572*^9}, {3.752937565566793*^9, 
   3.7529375900515947`*^9}, {3.752937659774583*^9, 3.752937686392194*^9}, {
   3.752937797550473*^9, 3.752937799130527*^9}, {3.7529378492128572`*^9, 
   3.752937849498748*^9}, 3.752944074567472*^9, {3.752945464326747*^9, 
   3.7529454644735107`*^9}, {3.75294572976758*^9, 3.752945735285262*^9}, 
   3.752953339925069*^9, 3.753038406727952*^9, {3.753038469264722*^9, 
   3.7530384741722937`*^9}, {3.753038599911993*^9, 3.753038628746689*^9}, {
   3.7530388055214367`*^9, 3.75303880617278*^9}, {3.753040014777594*^9, 
   3.753040034498519*^9}, {3.753040085829812*^9, 3.753040088202881*^9}, {
   3.7530401419061127`*^9, 3.753040166950306*^9}, {3.753040715904173*^9, 
   3.753040741916409*^9}, {3.7530408027135*^9, 3.753040804111864*^9}, {
   3.753040868309145*^9, 3.753040868700035*^9}, {3.75304392300611*^9, 
   3.753043924330562*^9}, {3.753043986681858*^9, 3.753044001242547*^9}, {
   3.7530440679101467`*^9, 3.753044068562551*^9}, {3.7530441298971453`*^9, 
   3.753044133633484*^9}, 3.753044223590147*^9, {3.753044403330976*^9, 
   3.753044423209805*^9}, {3.753044518103092*^9, 3.753044551623597*^9}, {
   3.7530445957705917`*^9, 3.753044623392209*^9}, {3.753056307701136*^9, 
   3.753056309946928*^9}, {3.753056363603239*^9, 3.753056380406089*^9}, {
   3.753056888265921*^9, 3.753056892818964*^9}, {3.753056931301005*^9, 
   3.75305693211362*^9}, {3.7530569740994663`*^9, 3.7530570011315737`*^9}, {
   3.753057040838358*^9, 3.753057040930401*^9}, {3.7530572217140703`*^9, 
   3.753057222900476*^9}, {3.753059657491391*^9, 3.753059671269434*^9}, {
   3.7530597489621468`*^9, 3.753059778215307*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"5a24985b-711d-4894-ad33-7682092f3681"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "Solve", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"nCons", ">", "0"}], ",", 
     RowBox[{"(*", " ", 
      RowBox[{"with", " ", "constraints"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"EulerLagEqs", "=", 
        RowBox[{
         RowBox[{"Thread", "[", 
          RowBox[{"ELeqsLeft", "==", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"consgrad", ".", "\[Lambda]s"}], "]"}], "+", 
            "externalForces"}]}], "]"}], "//", "Simplify"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"consddtEqs", "=", 
        RowBox[{"Thread", "[", 
         RowBox[{"consddt", "\[Equal]", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0", ",", "nCons"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"EQ", "=", 
        RowBox[{"Solve", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"EulerLagEqs", ",", "consddtEqs"}], "]"}], ",", 
          RowBox[{"Join", "[", 
           RowBox[{"ddqs", ",", 
            RowBox[{"Flatten", "[", "\[Lambda]s", "]"}]}], "]"}]}], "]"}]}]}],
       ")"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"No", " ", "constraint"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"EulerLagEqs", "=", 
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{"ELeqsLeft", "==", "externalForces"}], "]"}], "//", 
        "Simplify"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"EQ", "=", 
       RowBox[{"Solve", "[", 
        RowBox[{"EulerLagEqs", ",", "ddqs"}], "]"}]}]}]}], "]"}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.752894791337954*^9, 3.752894814974654*^9}, {
   3.752894861220069*^9, 3.752894947329397*^9}, {3.7528950298906193`*^9, 
   3.75289504542104*^9}, {3.7528955370653543`*^9, 3.752895636265217*^9}, {
   3.752895721485224*^9, 3.752895767437024*^9}, {3.7528958460723*^9, 
   3.7528959107494164`*^9}, {3.7528993069704723`*^9, 3.752899353134206*^9}, {
   3.752930426490055*^9, 3.752930426910009*^9}, {3.752930465292056*^9, 
   3.752930483791888*^9}, {3.752936640855112*^9, 3.752936650163219*^9}, {
   3.7529376950299673`*^9, 3.7529376956415358`*^9}, {3.752938441192172*^9, 
   3.752938502431718*^9}, 3.752938540913069*^9, {3.7529387268581953`*^9, 
   3.752938800482499*^9}, {3.752942230879902*^9, 3.7529422362590523`*^9}, 
   3.752942793385557*^9, {3.752944065537396*^9, 3.7529440816159*^9}, {
   3.752944159773369*^9, 3.752944161585534*^9}, {3.7529454345696087`*^9, 
   3.752945470933591*^9}, 3.752945658706089*^9, {3.7529457655925827`*^9, 
   3.752945776537252*^9}, {3.752945812077977*^9, 3.7529458382584753`*^9}, {
   3.7529467425591593`*^9, 3.752946744024117*^9}, {3.752949016390222*^9, 
   3.752949025020351*^9}, {3.75294911830159*^9, 3.75294913716702*^9}, {
   3.752949420279763*^9, 3.75294942365825*^9}, {3.752949575107119*^9, 
   3.752949593302175*^9}, 3.752949669821959*^9, 3.752950387118744*^9, {
   3.752950879947427*^9, 3.75295091315872*^9}, {3.752950960562579*^9, 
   3.7529509665964518`*^9}, {3.752951039425029*^9, 3.7529510451306877`*^9}, {
   3.752952867830323*^9, 3.7529528756864767`*^9}, {3.7529529562226686`*^9, 
   3.7529529804809427`*^9}, {3.7529530170247383`*^9, 3.752953047957822*^9}, {
   3.7529531109964*^9, 3.7529531263086843`*^9}, {3.75295492293137*^9, 
   3.752954931587804*^9}, {3.753029206422752*^9, 3.7530292108843937`*^9}, {
   3.753029374045969*^9, 3.753029378352652*^9}, {3.753030992128134*^9, 
   3.7530309950536013`*^9}, {3.7530328590966063`*^9, 
   3.7530328607178926`*^9}, {3.7530328975440607`*^9, 3.753032921903851*^9}, {
   3.753037562588705*^9, 3.753037592619924*^9}, {3.753037998688301*^9, 
   3.753038001515575*^9}, {3.75303836100005*^9, 3.753038361166893*^9}, {
   3.753039353032297*^9, 3.753039360728264*^9}, {3.753040231759441*^9, 
   3.7530402427932997`*^9}, {3.7530402728058453`*^9, 3.753040273328285*^9}, {
   3.753040311185645*^9, 3.753040394112318*^9}, {3.7530407232518*^9, 
   3.753040725716365*^9}, {3.7530438202913713`*^9, 3.753043837708232*^9}, {
   3.7530438807984667`*^9, 3.7530438814270906`*^9}, {3.753043927016801*^9, 
   3.753043928689036*^9}, 3.753044019328925*^9, {3.753044162894352*^9, 
   3.7530441630360823`*^9}, {3.753044406619227*^9, 3.753044407989787*^9}, {
   3.753044523312976*^9, 3.7530445260554247`*^9}, {3.753045895309931*^9, 
   3.7530460196736927`*^9}, {3.75304607997691*^9, 3.753046097625287*^9}, 
   3.753050201230822*^9, 3.753050906794511*^9, {3.7530518883881273`*^9, 
   3.753051958587449*^9}, 3.753052592904687*^9, {3.7530539791759663`*^9, 
   3.753054065207841*^9}, {3.753054155689086*^9, 3.753054156114105*^9}, {
   3.753054851928958*^9, 3.753054928625489*^9}, {3.753054964858341*^9, 
   3.753054998643321*^9}, {3.753056069642933*^9, 3.753056094573173*^9}, {
   3.753056175591939*^9, 3.7530561795283012`*^9}, {3.753056214962792*^9, 
   3.753056245126135*^9}, {3.753056560058378*^9, 3.753056564694744*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"c77ea872-647e-4514-a418-f5dc43c7ff34"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "NDsolve", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"timeend", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ddqSolve", "=", 
     RowBox[{"CompareEachElements", "[", 
      RowBox[{"ddqs", ",", 
       RowBox[{"EQ", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", ";;", ",", "2"}], "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"q0Solve", "=", 
     RowBox[{"CompareEachElements", "[", 
      RowBox[{
       RowBox[{"qs", "/.", 
        RowBox[{"t", "\[Rule]", "0"}]}], ",", "qsInit"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dq0Solve", "=", 
     RowBox[{"CompareEachElements", "[", 
      RowBox[{
       RowBox[{"dqs", "/.", 
        RowBox[{"t", "\[Rule]", "0"}]}], ",", "dqsInit"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sim", "=", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ddqSolve", ",", "q0Solve", ",", "dq0Solve"}], "}"}], ",", 
       "qsvars", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "timeend"}], "}"}], ",", 
       RowBox[{"Method", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<EquationSimplification\>\"", "->", "\"\<Residual\>\""}],
          "}"}]}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7528971679086113`*^9, 3.752897213607191*^9}, {
   3.7528972562567387`*^9, 3.752897265514811*^9}, {3.752897308490035*^9, 
   3.75289738218876*^9}, {3.7528974258726997`*^9, 3.7528975449330673`*^9}, {
   3.7528977095846987`*^9, 3.752897733896483*^9}, {3.752897770153664*^9, 
   3.7528978855476303`*^9}, {3.752897917571772*^9, 3.7528979318123293`*^9}, {
   3.752898003263772*^9, 3.7528980057395887`*^9}, 3.752898051673605*^9, {
   3.752935366844763*^9, 3.752935369825737*^9}, {3.7529354034490623`*^9, 
   3.752935420338633*^9}, {3.752935885972282*^9, 3.752935892650579*^9}, {
   3.752937533039277*^9, 3.752937535384914*^9}, {3.752944397828149*^9, 
   3.752944465289916*^9}, 3.752944514936068*^9, {3.752945527073604*^9, 
   3.7529455273339233`*^9}, {3.7529466717226963`*^9, 3.752946726662875*^9}, {
   3.752952682650055*^9, 3.752952693783737*^9}, {3.752954180319457*^9, 
   3.752954180674384*^9}, {3.752954301591011*^9, 3.752954310018018*^9}, {
   3.7529543519795113`*^9, 3.752954544109044*^9}, 3.752954670012217*^9, {
   3.7529547824482718`*^9, 3.752954786814961*^9}, {3.753029286157641*^9, 
   3.75302928789611*^9}, {3.753030507447219*^9, 3.753030518732629*^9}, {
   3.753033068008216*^9, 3.753033074462562*^9}, 3.753033404879732*^9, {
   3.753033562104907*^9, 3.7530335746149597`*^9}, {3.7530336772878857`*^9, 
   3.7530336775363693`*^9}, {3.7530337340188217`*^9, 
   3.7530337364251757`*^9}, {3.753037407273632*^9, 3.7530374088505993`*^9}, {
   3.7530378737767076`*^9, 3.753037876146289*^9}, {3.753037944943181*^9, 
   3.75303798381833*^9}, {3.753038151088511*^9, 3.753038152944487*^9}, {
   3.753044172128189*^9, 3.753044178326819*^9}, {3.753046031793105*^9, 
   3.753046061108968*^9}, {3.753050961409317*^9, 3.753050962334046*^9}, {
   3.75305106040065*^9, 3.753051067520399*^9}, {3.753053219553726*^9, 
   3.753053219864538*^9}, {3.753054158404937*^9, 3.753054158969891*^9}, {
   3.753057234084063*^9, 3.7530572343201637`*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"9c4db124-6953-4ebc-9da6-aace31639bd8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Plot", " ", "curve"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"curves", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"qs", "/.", 
        RowBox[{"sim", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "//", "Flatten"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{"curves", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "timeend"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Thick", "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "qs"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<time\>\"", ",", "\"\<value\>\""}], "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7528971679086113`*^9, 3.752897213607191*^9}, {
   3.7528972562567387`*^9, 3.752897265514811*^9}, {3.752897308490035*^9, 
   3.75289738218876*^9}, {3.7528974258726997`*^9, 3.752897426470139*^9}, {
   3.752897943258116*^9, 3.7528979481197557`*^9}, {3.7528979891522713`*^9, 
   3.75289799548482*^9}, 3.752898306467546*^9, {3.752930597655648*^9, 
   3.7529305987696238`*^9}, {3.752930645199415*^9, 3.752930725262775*^9}, {
   3.7529307678250647`*^9, 3.7529307732122927`*^9}, {3.752930831780322*^9, 
   3.752930880960309*^9}, {3.752944345098556*^9, 3.7529443864881983`*^9}, {
   3.7529444938804502`*^9, 3.75294450149999*^9}, {3.7530396389703093`*^9, 
   3.753039640140366*^9}, {3.753040813393495*^9, 3.753040825564067*^9}, {
   3.7530461280595627`*^9, 3.753046153534417*^9}, {3.753051562413953*^9, 
   3.753051571869388*^9}, {3.75305160362201*^9, 3.753051633501946*^9}, {
   3.7530517402208633`*^9, 3.753051795906765*^9}, {3.753054985680772*^9, 
   3.753054986009804*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"eefac4ef-1b8c-4bb2-b01d-d93cd96a59d8"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$2397#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJwV2Xc81e8XAHAj6xrZXPNyRaV8U5SSzomUyiiFkhQhIkkZGSVkZGQlaYgo
yQ4NKqSSUbq4RvYmZd9r5vf5/cPr/bqf8TznOc85z31dBdtLpvZsLCwsrcSf
//9/dN2WU90uYo/MtMShuHomVDVSDC0oTlBesfNkLOHVLx+CKJRr8DHlWng0
YYG4knxSayAsS39pCyf8qDxKnoMSDu+46AeDCG+asItePX8HTj2xbvMh3Cnw
+N9ySxyYvR8NdSOs9Ixn++LSXbh2md3MjrCLjsdFpvx9+DrGheaEXzX1pM/q
PQQ3o50G+wkvOht2TJ1PgXHNby4ahJ+wdoQz9VOh8nV1NoXwvvrYdYyWNKAU
qnLxEh5JOlAx65QOk5t6fWbqmBBpt2I1s5QBjS45nO2EG5ccEyblX0DVlLFN
KmHPr3JbJgqywGFAd3MgYan4pto/etlg8SCG14aw7UZk/30+D55l289LEmZb
8vkx65cPou2G7NO1TGjqMZOd1S8AnRl98jfC3tm8b6dbCuH8qqT1ZcKH4oY4
p5+8gqrp22G6hGW8K45PORVBYohesRDhcj2vyYmlYvj5tYA3q4YJXL/6VP7I
vwUJnau2ld+Y0Fr+3mN85C2slrw1CyKc9Szp0++Cd3CFR01Tl7Cxu/GZMb0y
CNBZfPm2mgmJPO8Sh89/BHsnT6k7X5lQ5HXI/YpkOez7Fy4EhB+O7SDP+JXD
Meex1vEvTHBtED4/rV8BD41mq/cSFn5YzTbVUgnmI6mlDVVMWBIoeeG2+xNc
Cjb85Ep44ObTI5NPPgHfWME1EuGS89cfTzhVga869uz6xATLbRq7/i59hiMn
cgVuVDAhtSbl8m/5bzBb8NU/5j0TZpOKN3ZHfoPRKO1LS2VM2H++tp+28A02
7Zrbd47wODvT7F1jDQzEy9/YUMoELR3jXeGhdRDuGmV25w0TInjtZvxm6+BC
yq7YntdM6Gq7lu1mUw/O38FdjXCwZ4bcCe3v4LNxga28mAkNectsKhM/YGc6
l9vbQmJ+wGPNr9YAYRc3jvwtYIK2csKuULsGkOixL6cQjp59MePzswFCq+ku
1/KYoBHbbG/78ieMixgXrrxkwo2aTYfUzzSCouv16IPpTMgseK388m4jdOiL
38enTKAl6bKvqyM+T6l13JZG5Pv5E2WSO5uA2bFJje8JE2rYg9VYRJqhls1M
NfwBE8R1fgn/+EIHUTmvO89jmYBKDhMGK3Q40NMwaRbDBCfeqdrKbS1w0Tjz
wmo0E8raOG+VPGkBw4ZaH71IIj89tzIf+bSCXmHYj+gQJuTmhf9yUWsHxT0Z
e9f7MGFMeCzykE07/LpSNvbYmwkqnof2rE9oB9mjFjmCXsR+2s2b2r/QDly7
u04MXmFC3LdIB8vPv+Cu6eRu04vE/ui/M3XAqhPOb6P/VD/DhML9k2nr7nSC
h51UgtlpJky8OHKcvbITbjjtpF85xQRHN6HXH1S6QN+5/VWKBZEPK3F+mjNd
MBTz5usrEyak8NYGCen3gFGU9XLVHibs0fG1CrDugVs/K/QidzOhw1VVc8Kr
B24YSVwx2sUESVrEUF1WD/ztaLB7r8mE2CTDg2GCvXA1XjTWdBMTgtZ9F1j9
1Qus9/wlDkky4Tz8vD/u3g9VMib+W34zgCWN8e5XRD/MGt8a2TrCgKQ1Mh01
6f2wZWH7JbVBBlR/c5B7Qe+Hs6w6hYLdDFh/fDnNftcAbGKJN7hJY8CIo0p2
F+sgrOE+8onvDQMCag3r66UG4e6xoaxHRQyQVHP/W7ZtEJJdpfRUChhgMFO2
5YH9IDxos76olMWAF/6mxRbfBuGMmjjnlwcMuBDn/6EhZggS5P74pfozgG0u
rfvjiyEYn6V8f3eNAckW1Sx5lUMwInjbp86DATUyInpRs0OQpFBPa73IANXn
mV8PnhgGbV1f7runGTBe2thQKT8COb+uyCRpM8B1cEN/Ue4oXNKkbn41NQc9
1m3cFd9GIeWGe6vD+Bwcaw1Tqx8YBRcXI7LQ8Bxo1Q5fG5QaA9b1AhYHO+aA
vSBDUDx0DI53hmcbfJmDJD+FPV5nfsPb6sdxgUlzUCFCvr9T8A/4rH3L91tz
DjSiqj/oq/4B0t0FB/f/5uAZp/fA0f1/4Aa55tbk+jmIXKD/d8HvDyzUXVH8
KT0H5t0JX5JH/kCZjYuVEuscjGUJzi6V/4Ucd88YiZpZICkEq3RrTQLNWqzv
jNksVO+O/e+6/iSk8Vw9YWQ8CyEnHu+QNZ2EclpS6LYDs8AW8+bAKedJoBga
bBnTmoXFf+PnWx5NgqrZulhWmVn43WGW+YNtCrYYGCn19MxAXZLKhvK6KXD5
+2NXiv0MRAvWbkw9OwOUUtGouNPTYPvr+Ef2OgYoWhU0iP+agMufg20vqSyC
+L6RGNc1v0FuYD8nY9siBGmPf1wzM0bsY54sP1wEWx0xxbTeMViHUVPhJxdB
nZLZN/1hDNre3Q1Ij1iED4rAMnFtDPbmP3vcNrEIPAaRng5ToyD0oLpd780S
uOVzJUwMjUCBG98xyYMr8KrfWK1kcgjqkkWu5ZivQOd95h6/niEYqpJK0bVb
gZQdwRZHGoZAirzht8uNFWizzOpUzB+C4Ar9oIriFZCVa/vl7jYE5sI3Xl1Q
/AcGvAXRNTODsPhqSuT90j84eON77nOOQRDtmt9pyrMKmit8ufuZA6DGzXJ2
WHwVxKYceOZGBuCclUC20NZV2LNx39iNugGoW6O6z8FxFdo09VqNEwbgsZnd
1bXNq1Ci6BzSpDwAqb7OY1ssWHCembgxzILYZ+U886GnWZDnfILj2OF+KF+T
ydF9jgWdJq7KWmI/9EQNUKLcWPCNtnyXzYZ+kHty2mI0nAVPeQkfFV7ug+Qq
k6rUMhY8bdc4Mf20D+L4NR4LK7Ji4LKnUthKLyia0l46rWdFCetHVdEzvVCQ
6Pa2XI0Va9fr86WN9kKDfE6TqzYr5grMOv9t7gWBrcq8tcdZcXhtm5lsXi/c
Npf0DgplRY3xlqSac70QmLJ8dHacFS8IqlKF6D1wZMuby6ozrLj+ZkZpRX0P
yFVcibVdYMVCRvZa/8898K5vrKGBgw355lSKRYp7YHpdm0mOHBseGjzu9zGh
B2yzi40cjrChQVrb8BrzHtj71vVg6ys2PN12uajqYzcIHNrotPYdGzJOWVAe
F3RDR/tg2P5yNly/ldsu/Gk3eC9bVRfVsaE0nZOZENoN+XD4QOwgG1qZ/xry
O9INlC8q+ock2DF+vWzi1cEuYGnswTIfdvQ7rCKnIt0FwaMfUn1usuNVpfR5
Bn8X8LA8YtsZxo6p33ZrtrB0gfDmk1XFd9nx5wbj7dVDnbAu9OeBvHx2fPbi
DLfjq044pF1pnDbEjtbfWmh+Jp0Q//SpVZjpGmxQWXN2OrYDlK86eB/fyIG/
W5TzQ7V+weZd3cdStnDgzE8TuTX//QINlhP/jW3nQMdb/M9D1/0C3ciDQzf0
OHBKZvXjU+FfYJ2+6fhLKw7s+pyyUe1POyQ2Tf/HdocDF5NUPvo/bQcOzRvD
eTMcqL/FUueFaDsMzN0z533PiScCJwI8uNogbe+2K52fOHEmdri45F8rnIn6
fievhhOvFsyZ/ptrhXYljm/HWjkx6mbjwJOBVvh5zF374Qwnvg/YbadR2Qof
CgwpmzdyYXiafsbj661w7yLrmPE9Liwb1OP6vdwCx98+5FR4THxutldIZK4F
hDm0qDPpXNi/XyRS708LRD90tbpXyIXJzUI7P3S2QHDtr+/d9Vy4tk3pgOzH
FnDbUPLKbQ03Woz0BScHtcChwQv+cZe50emzqqiLaAvs96dm7/Pmxj9aocqL
/C2gK9bRzrjOjRV7gzQSuFpgl76R1qlIboxT3kkfX6TDxoz/ZqjPuVGdp/mg
Rh8deO1nHYs7uDEwXDJN5xUduFey753v58aRIlXDRzl0WHPX/gt5jBstj9af
5c2kw3IVnXqdyY3s/z27JPKIDuNKb7v2C/PgcOKNkpZQOtQN+B9vPcCDlKV/
u8zP0qHab3vQbWMe7DgW4ZR/ig5VohMFu814sFf4Z4G0BR3K9p1dm2rLg3O5
OXuVjemQna5b4+TPg0pVZH1BHTpk7l6alw7mQZGwhyrzWnRIb3ql8v02D1qY
s0dOa9Dh4Zp1t7Ym8eDB20Ex8pvpEGXHhUuFPGhOz7t9Ro4Ot5c/uua85cHg
kt3+PVJ0CEnwfnSmnBgv16ezHhJ0uF41uvipngevaIW++iVIBx+rtA2eTTw4
lHTpRg4/HTxnLU+s/8WDx0IS5uJJdHBVqiuOHOHBUyxmySlr6HChLHhgzwRx
/5nydZ9Z6eBwXEdkao4HR3glxFhWm8E6ONfNjJ2EouH+bSULzWA8EKMqJ0fC
p+tk126ebIY61YEmKyUSHlCguqv8bYbDV3Zcf7CRhN6eJ/M1x5vBgK2rQXIH
CTcXvDwePdIMXw6q+1jokLCpsY2jbagZ9GODqYl6JDxzwny91mAz6FJUPUWO
kDC+rdRco68Zys9flzc1J2HXzP6cnz3NAHk/q2OsSPio3IYU3N0MHxhK7j9s
Sei4cUf84a5m2L3HW1rAiYSyz7td1nc2w7tbtVWGl0hIf3KmTKqjGbTq5Vwj
PEh4YzTjmeKvZigRdZeo8SXhsx+RR7C9GTStPpdzB5LwZnxb15W2Zih6Knnh
QBgJQXqH5/vWZtj621kkJJqEOQGa2rKE87d+LKtKIKGx5CHT+JZmUPMRdmB/
QEJX7x/d8oSzK+zX6qaScHcAB/cnejOo8rx9E/CchIUDQhN+hLOO8Nl+zCHh
Dr/VN0aE1yed4f33ioRHnxSFaxJ+1l1YtPsdCWeeTwVrEF6nwmntW07CvcGm
3w8RTnc9yfXuCwlzrY+EexNWLMnOn68joeQOvbb3hJ+srJ7c0UiMN/pcrxQx
Hnn9Y+yebSRk2NVW3SH8OPJZdlE3CbVdLjyTIeYj07RgNjNIQmHnf5kVhJOl
jVbVx0nY9kds4joRD/K5J5lu0yR0uSzy4DgRr6SsmaN58yTsjtryQ5eIp/j0
/qU//0ioqXAz5yAR74SdyembOHhxuw3DwolYD5Gbf4yceXlRVNRiMpVYL0HB
hCcjErw4X1rjZt3bDNEWwwdV5Hixzmf/gz5i/flTds3YK/GiU0KYVsBAM5DU
evX7t/Ciqz7FmJvIpzAPjQmFHbz44LYb18xoM3C+D006q8OLgjfti5m/m4Hd
UO1350HieQJBriZEvgbG30yQOcKL8q15b9Kmm4HlV5POKXNejP9910NwrhmW
nXxjWm158f2BM5+0F5vBp+D7TgknXnT+nh+7sNwMC/MK/WaXeBHH3IxoxP5g
hFZrNvry4vW5zjXNHHS4+kO6WyiQFw11C7VXuekwI34p7EgYL26mmdL38dFh
MkPsV30CL/rkzmUpitBh7JNtQHUOL9q01v5RVaSDfGzrhegiXjS+18URpUyH
49bGZsdLeVHChc1mrSodPszv3NhTzYvqffJO3kT9iNss1MTs58XHtny23QZ0
+LoY8uH9GDHf0dYdxkQ9Wv66nBk0xYusW/aZdx8j9rftiP/aVV6ku9KGHc/Q
QfveRxUVKT5senn7oYw3HdzsNIX/UPhw8fn84pPrdHim/nK5UIUPsyAuwuAW
HQTrEn/u0SQc+DeXNZ4OAyyuvuZH+JAu3tUkl0+HyAsyP26F8GHhdEg9eYoO
FTvi3h6O4sNAhcmJjgU6MNZwpwsl8GEA9/S7KrYWOJsy4/0olQ/Zfkolsom1
gEZTjWJxGR/WXXc5sVO7BTp1rnkOTPPh3bi48SfRRP/hnTibtcCHP7+9Pl1y
vwUMWu0Ou7Hw47OawvNT6S1Q6H6EsszPj17ppZdaS1sg5LlKjcgGfnzvlGvk
/LsF1ITosnpn+FEz9vD+rKOtMBQ1FHjXnh89pQePb7duhUck5vCwMz+eilnx
7r/QCnxrJAsjvfnxr0/vmtTgVhhjnNxPj+XHA9vPqbx42woZHZ2uTlX8mFYa
Qhnf0AYymYMf72wQwMX01Xdkajs0KTGU+v4TwKC0wXcV29ohIpXztsZ2AaT0
+ojc3tcOi8kqx9t0BdDE5vB9X4d2aI1yGlG0EkBD54uXel62Q/yVP4Il0QLY
pXwz7unuX0CCOZuOGQFsPLHNIdKjA7z3rucuWRTAndv9z7dEdMCQ3qncO6xr
0Si0MEg/rQMqDSoWddeuxSKFjrDbPzrAxzQq/sXGtSjwT4i7SLUTftuv++xp
sxZZwgsO2491Ql2k2XqhH2uxcKEmZVNANxz4Y8lUNBPEvx9ERfJv9sJj0aDG
GycEsU2Jh2Qc0wuz2i/zOk4J4vC/m47Mx73w5PbS+URbQSy2SJ1xLuuFRZWH
rTxugmg5omvXxuyFbNvOt5O3BbHVqSQy160PBFvP+H0oF8QXYyVpIU790Fpp
x2q5SQi3dCe/4HUfhOKwKmvKnBCefrDz0AXHUXDg8Oj5/l0YRU9uLfAr+APn
3H2L+ZJFUFwm+M2V8kn477zqd0MbUcwVmmyV9J+GH8KbeD12iuHil2i2kS2z
sOfixdEHu8VQ+QNXWvP2Wcj9mvu1EsSQ9Wtx5cfdsxDtpx4suF8MiTF7hhvM
guHQ9pWXpmL45q2O8vSZWah5u3eiz1kMj8T+TheNnoXPZy0ajzwWQ4w+/sJv
eBY0SpMKvFLFsHB76smp8VlIF2u/8zhdDAPEHKdspmchuMbKcDxLDH/otVdu
X5kFXQ3bz6GvxfBe8enTucJzUM518fWHBjGEp4qTDbvnoDQ38MEmdnF85V19
5GPUHHAamknd4xTHTZE35tfGz8HRUZX7rCRxzOO8InCK+H46TK1PpAuKo0Oa
lXNP2hyI3JeIC5ATx7T7r3Y8fz0HzkHZYU07xbE5W/6JfM8cSJ+ge/i5Ec8/
HcyM3cQAh7nM2aEr4mjhb56qpM6AgjjfK0e9xFE2b9NqviYDDtRTLitfF8d8
f/NPJXsYcEXX2aUhQhwLzwqPehxhQO0mlnNKz8XRP2T+2wd3BviybjxS1ymO
TZp7754tZMDQPt5W5V5xVF1/3VGwhAFHwsbP3BwQR3aa1/u3bxmgtDbv0vbf
4siaUTU4X86AOhmNO0/mxfHjIX+uDT8YIKe15/tVEQncvYc902SMAWG+8uY/
xCWwp16D594fBkx/YOnaICWBU9WXu1omGfBV/9OfLgpx/R32IX0mA9yOGfAf
VJPAT2Zano3sTKh0NTWUPSiBGobJ54qlmbCpcFuTl6EEvpU9eyZBjgmJc6JW
NBMJDJUZ6nFRYIKzX4tzqLkENo+uv05SYYLobauIqXMS+K9CwH5enQkOGQ41
n69L4KPDJb6p+5lA6vAxcC2SwKtx5+T2OTNhu9cL/juvJbDDgvfD9otMsBFu
peW9k8DvrVWblS4x4Y2B5umpcgmcvBgWO+FOPK944vLVegmstMJlAx8mVETb
PfAZksC03HsKvGFMGN8Qf/bBqATqeXTr54QzQfJzxbqycQlUa7CMPxTBBNcl
ufyVaQkUqZL75BnNBBnHtqqAVQmcVnFYn5jAJOqH8d8QSUlULxCqZaQwIb3D
79VzaUm8EegTY5zKhB9eL72r5SRx9P3EaGoaE5RzudlJ6yTR4Vanh3YGExql
PklEqUti5Uhx6a4sJqjN7tgbf0gSz1VUeri9YoLlHQfOIiPi+V4Tv4OLmHBr
493apiOSKK2hePFuMRM6zk6biVtIYvkG57ys10y4XZ994f45SZT09iI9L2XC
4DOFhBQ/SexL/DXyp5KYb3DvAnuAJFbfPkBv/cSEadvUM45Bkrjvilnexyom
sMgrqKrflsSLxz4evvmFCVL3KJWV9yTxUGb23uZvTFDw6FFReSCJoh28T57U
MGH9sSdREY8lkZaVq+VYywTNtZSTxzMk8f3LYzBex4QjofKTg4WS2KCUlVf9
gwkW9t1mh0oksWLPwT+eDUyw1kspzX0riZtLvQsUfhL5sSoX6lUuiRnDedMu
NCaEeMnJ8XyXRCmffSd/NTEhyqwr6OJPSTxtcaDOtZkJCdsej/5skkTOs0cE
VgmnTsgWJ/+SROtgbUXxFiaUnZc13DQqiQ+jI7zk25jwSb+zIGZcEktVnI8m
E66hPpKYm5DEfB9jHeF2JrR0y/S/Z0gi+4XMCwuEpy1kfEzWkHHVpHsqo4MJ
C5od3a+4yJin07SV1EnES/ShviQvGQtuvq9wJszfIC3UK0TGrZfnB5S7iPgY
SGe6y5ORTevmon83E/5T/sXfokjGmVpN+3rC29c8uKKtTMYMpu5RqR4m6JVL
wZrNZBR6cqIqm/Chx+3pjlvIaOV2zXya8BG/ZFL9NjLRXwQDNHuJ+GlJ0e/u
IqNj/8ecIsL24u3aizpkvF3hXzpJ2GX2fqr1XjKeUuC+urGPCdfyyRdVDMiY
hmrMRMIB0W20iMNkfHRDsOYb4RCX+1qTxsT9DSYnFgknrCeveWtGxoi2/cXH
+5lgZa38vP8EGbNfyDb5ElZK2HZIwIqMLPMFa1IJj38jvoqeIeN77gsHqwgX
rRrFnLMl47bqa+mDhP00T22LtifjlMuIBMcAE/Y5O9LfOJKxUj4xQ5FwEz1Q
RuASGUNZo8VPEH7IF/NRy52MX83ZVy4RttN9ZHvOg4yaQ/PsIYQ3eWdxRHuT
scouclMy4dmc15lvfMmIpzO9sgmX9Vcd7r9Oxv+keIfKCAeTaX/5A8lYesfI
u5awoUl3rNYtMt7TH1NrJSxya1zjXBgZM/N1Sf2E298ttERFkDFYOpo0Tjht
ktP3TTQZ2dOr/pshfEFZVK4/lowmeunX5glvtVKo4L9Lxs65N8NLhBdj1ey0
kv6/PnbXVghXftXmOveAjMMhI5v/79srBllRj4n8SLqw5v/Xm24zN3qTSkbp
8cklBmEpp3OTfelknD2zV2SKcN9jt3j+TDLWGPYYjBLOavLfrvWSjAkt5Afd
hN1JEW22uWTcc4yXu4nwLkzyiyogY39adtQXwmyeGfJvisho/LBtw2vCNS8L
K/tek1Hp+fH2DMJxvR/t+UvJ+OPXs4dxhC0l6rm1PpDx5rygqz9hRaP2l7YV
xPP7Ew47EB4LHDaOqiLmp8uy1Yhw4ZvZqddfybhXjCm7lbDPX9a7fTVk9DL8
xytGWFdprRb/dzJGXw+enyPygXZnw3XbJjJ+q659X0A4+fN2hagWIj+ntkVH
ErZd0qt63U7GW9t8De0JTztYk/h7yXg6O+OGIOF3D51zdgyQ8UHC+7E+Il8D
ad5HbIfJ+Puj4pZXhIX2xCe+/kPGHqqqhhHh1itPdvZNkjG2T39YnPCTFzkd
fLNk1H9ZcrqL2C9bxKoVbRfJKNYU7utAeP5Q8+fIFTLR7zaKqxAuD+hzfM0i
hUxtX8vB/+/H8eVcPi4pZDvMUWVJWFKRZLqDJIWhxaHtQoR7LCTmbPil0GaP
k/8XYr+7fVLXfi0ihUFcew+uJxyT7PDVhiKFJ05MitcT9cPLM/CKH1UKsxSe
R1wmbG36WP6eshRi3Es7EcKbSHSvuk1SeF5wkGJC1KNv1/TX79gphSuXtaoy
iHqVb2bTdHS3FO5+sdtag3CSun+AC0jhwuFvQuVEvXMYLWpN1ZfCx4qXHn1v
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$2397#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
n8dQ6uvYOa5Vy/wfqeX/4g==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$2397#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
lZy/pVNanPl5BqqOx72rFiLgfyFVXKw=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$2397#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
jatz5+ZYMNhX5dgkTOL/AF5diR8=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$2397#5"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"value\"", TraditionalForm], None}, {
        FormBox["\"time\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 9.999999795918367}, {-1.7842647241527998`, 
      1.7842722950823564`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"x", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"y", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"\[Theta]1", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"\[Theta]2", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"\[Theta]3", "(", 
         TagBox["t", HoldForm], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.753051634587777*^9, {3.753051744195438*^9, 3.753051808833123*^9}, 
   3.753051974140373*^9, 3.7530521808996487`*^9, 3.7530530865347223`*^9, {
   3.7530532503824387`*^9, 3.753053266020912*^9}, 3.753053488487378*^9, 
   3.7530549427182426`*^9, 3.753054986903639*^9, 3.753055037884244*^9, 
   3.753055189230489*^9, 3.753055455998474*^9, 3.7530562552721977`*^9, 
   3.753056399152141*^9, 3.753056702819227*^9, 3.753056800129817*^9, 
   3.7530568509108887`*^9, 3.753056894923727*^9, 3.7530569468681793`*^9, {
   3.753056979474781*^9, 3.753057003767621*^9}, 3.753057044262594*^9, {
   3.753057160883115*^9, 3.753057235895945*^9}, 3.7530580923558283`*^9, 
   3.753058237500441*^9, 3.753058300964966*^9, {3.753059651250642*^9, 
   3.753059673669797*^9}, 3.753059733354447*^9, 3.753059769367694*^9, 
   3.75305980428732*^9, 3.753059904451376*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"94bfda9f-e585-42e8-b426-8450f13e9cdf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotLink", "[", 
   RowBox[{"T_", ",", "k_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "p0", ",", "p1", ",", "p2", ",", "p3", ",", "p4", ",", "p", ",", "pw", 
      ",", "l", ",", "w"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"l", "=", 
      RowBox[{"lens", "[", 
       RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"w", "=", 
      RowBox[{"widths", "[", 
       RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"p0", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "w"}], "/", "2"}], ",", 
        RowBox[{"l", "/", "2"}], ",", "0", ",", "1"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p1", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"w", "/", "2"}], ",", 
        RowBox[{"l", "/", "2"}], ",", "0", ",", "1"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p2", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"w", "/", "2"}], ",", 
        RowBox[{
         RowBox[{"-", "l"}], "/", "2"}], ",", "0", ",", "1"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p3", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "w"}], "/", "2"}], ",", 
        RowBox[{
         RowBox[{"-", "l"}], "/", "2"}], ",", "0", ",", "1"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p4", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "w"}], "/", "2"}], ",", 
        RowBox[{"l", "/", "2"}], ",", "0", ",", "1"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p", "=", 
      RowBox[{"{", 
       RowBox[{"p0", ",", "p1", ",", "p2", ",", "p3", ",", "p4"}], "}"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"pw", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"T", ".", 
         RowBox[{"Transpose", "[", "p", "]"}]}], ")"}], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"1", ";;", "2"}], ",", ";;"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"pw", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"1", ";;", "2"}], ",", "i"}], "]"}], "]"}], ",", 
          RowBox[{"pw", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"1", ";;", "2"}], ",", 
             RowBox[{"i", "+", "1"}]}], "]"}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}]}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{" ", 
      RowBox[{"{", 
       RowBox[{"Line1", ",", "Line2", ",", "..."}]}], "]"}], "}"}], "*)"}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"links", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"plotLink", "[", 
       RowBox[{
        RowBox[{"Ts", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "i"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "nObjects"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "linkssim", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"linkssim", "[", "tt_", "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"links", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "/.", "sim"}], ")"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "links", "]"}]}], "}"}]}], "]"}], ")"}], "/.", 
    RowBox[{"t", "\[Rule]", "tt"}]}]}], ";"}], "\n", 
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Graphics", "[", 
       RowBox[{"linkssim", "[", "t", "]"}], "]"}], "\[IndentingNewLine]", 
      "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", "True"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "timeend"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.751118751091413*^9, 3.751118757689159*^9}, {
   3.751118801666729*^9, 3.751118848375704*^9}, {3.7511190462549543`*^9, 
   3.751119096603574*^9}, {3.751160106175243*^9, 3.751160106282084*^9}, {
   3.7528968920839977`*^9, 3.752896931054696*^9}, {3.7528970643922863`*^9, 
   3.7528970850217657`*^9}, {3.752898363356378*^9, 3.7528983639949303`*^9}, 
   3.752898535377866*^9, {3.752930968550906*^9, 3.752931039129393*^9}, {
   3.752931112004519*^9, 3.752931112747387*^9}, {3.752931377819645*^9, 
   3.7529314340380373`*^9}, {3.7529315635671864`*^9, 
   3.7529315943397923`*^9}, {3.75293164368289*^9, 3.752931644269472*^9}, {
   3.75293167656215*^9, 3.752931679101885*^9}, {3.752931714337655*^9, 
   3.752931780152071*^9}, {3.7529352424504757`*^9, 3.7529352484956827`*^9}, {
   3.752935433445023*^9, 3.752935445491578*^9}, {3.753037820864614*^9, 
   3.7530378254409018`*^9}, 3.753044053026998*^9, 3.75304619671243*^9, {
   3.75305182763835*^9, 3.7530518506661777`*^9}, {3.753052269760738*^9, 
   3.753052318096066*^9}, {3.7530523517408123`*^9, 3.753052352626607*^9}, {
   3.753052396789255*^9, 3.753052397694915*^9}, {3.753052431610183*^9, 
   3.7530524969842777`*^9}, {3.753052585589896*^9, 3.753052587838933*^9}, {
   3.753053098045836*^9, 3.753053105395467*^9}, {3.753053269283177*^9, 
   3.7530532702229548`*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"72acf4bf-c920-417b-a46c-c6e641d76c27"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 3.40938663482666, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 10}}, Typeset`size$$ = {540., {267., 275.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$3557$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$3557$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[{
         Graphics[
          $CellContext`linkssim[$CellContext`t$$]]}, 
        PlotRange -> {{-3, 3}, {-3, 3}}, Frame -> True], 
      "Specifications" :> {{$CellContext`t$$, 0, 10, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{608., {319., 328.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.753046200732498*^9, 3.753050033535438*^9, 3.753050100360036*^9, 
   3.753050920593993*^9, 3.753051086129187*^9, 3.753051358780657*^9, 
   3.7530515527804327`*^9, 3.7530518109858513`*^9, {3.753051841920055*^9, 
   3.7530518509200172`*^9}, 3.7530519749130383`*^9, 3.7530521836196136`*^9, {
   3.753052307184319*^9, 3.753052318835973*^9}, 3.7530523533338842`*^9, {
   3.7530523983331413`*^9, 3.753052416376974*^9}, {3.753052460654769*^9, 
   3.753052497683517*^9}, {3.753053092240864*^9, 3.753053106657473*^9}, {
   3.753053250978559*^9, 3.753053271510684*^9}, 3.753053489094244*^9, 
   3.753054943343494*^9, 3.753055041747879*^9, 3.7530554568511257`*^9, 
   3.753056257584497*^9, 3.7530564031562757`*^9, 3.753056704737852*^9, 
   3.75305680229816*^9, 3.753056852616818*^9, 3.753056895824588*^9, 
   3.7530569479968767`*^9, {3.753056980428905*^9, 3.753057004637381*^9}, 
   3.7530570452832537`*^9, {3.7530571850659943`*^9, 3.75305723688363*^9}, 
   3.75305809296957*^9, 3.753058238130106*^9, 3.7530583015796957`*^9, {
   3.753059651855579*^9, 3.753059674458632*^9}, 3.753059733990883*^9, 
   3.75305977083545*^9, 3.75305980584076*^9, 3.753059905035074*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"af54afb8-316c-4853-8b3e-9416848c67a2"]
}, Open  ]]
},
WindowSize->{808, 911},
WindowMargins->{{Automatic, 113}, {-113, Automatic}},
Magnification->1.5,
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1259, 23, 74, "Input",ExpressionUUID->"266e0836-dc31-4677-a6fd-4e7ecb2b8656"],
Cell[1820, 45, 12179, 351, 1775, "Input",ExpressionUUID->"8f92c5b0-8289-4350-8eb8-516898d33f22"],
Cell[14002, 398, 1807, 44, 354, "Input",ExpressionUUID->"c25a6fa0-6c2e-460e-b344-7d85a8b29fd8"],
Cell[15812, 444, 3422, 74, 354, "Input",ExpressionUUID->"b53c1c24-b6cc-41a8-8bd5-df323c26ee4d"],
Cell[19237, 520, 4997, 130, 660, "Input",ExpressionUUID->"86e25054-c6c5-43bc-b27c-ddc5bfdc0a87"],
Cell[24237, 652, 5363, 163, 996, "Input",ExpressionUUID->"475c42ee-2785-4311-afba-ef5380bb1e53"],
Cell[29603, 817, 10414, 206, 681, "Input",ExpressionUUID->"36793f65-e109-48c5-bb5f-cea958de743e"],
Cell[40020, 1025, 4556, 108, 456, "Input",ExpressionUUID->"5a24985b-711d-4894-ad33-7682092f3681"],
Cell[44579, 1135, 5562, 109, 490, "Input",ExpressionUUID->"c77ea872-647e-4514-a418-f5dc43c7ff34"],
Cell[50144, 1246, 3407, 68, 70, "Input",ExpressionUUID->"9c4db124-6953-4ebc-9da6-aace31639bd8"],
Cell[CellGroupData[{
Cell[53576, 1318, 2395, 56, 70, "Input",ExpressionUUID->"eefac4ef-1b8c-4bb2-b01d-d93cd96a59d8"],
Cell[55974, 1376, 114645, 1998, 373, "Output",ExpressionUUID->"94bfda9f-e585-42e8-b426-8450f13e9cdf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170656, 3379, 5967, 157, 830, "Input",ExpressionUUID->"72acf4bf-c920-417b-a46c-c6e641d76c27"],
Cell[176626, 3538, 3222, 58, 675, "Output",ExpressionUUID->"af54afb8-316c-4853-8b3e-9416848c67a2"]
}, Open  ]]
}
]
*)

